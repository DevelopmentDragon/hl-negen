; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32705.0 

	TITLE	D:\DevDragon\XashFE\dev\src\temp\engine\!debug\host.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_host_developer
PUBLIC	_pChangeGame
PUBLIC	??_C@_09DNECJBKD@developer@			; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_0BO@MBKNLOCO@engine?5is?5in?5development?9mode@ ; `string'
PUBLIC	_sys_ticrate
PUBLIC	??_C@_0M@BBKKCBNB@sys_ticrate@			; `string'
PUBLIC	??_C@_03GNABGMEE@100@				; `string'
PUBLIC	??_C@_0BM@JBNGOIGP@framerate?5in?5dedicated?5mode@ ; `string'
_DATA	SEGMENT
COMM	_host_limitlocal:DWORD
COMM	_host_framerate:DWORD
COMM	_host_maxfps:DWORD
COMM	_host:BYTE:087d8H
COMM	_SI:BYTE:0b08H
_DATA	ENDS
_BSS	SEGMENT
_pChangeGame DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_hCurrent:DWORD
COMM	_host_gameloaded:DWORD
COMM	_host_clientloaded:DWORD
COMM	_con_gamemaps:DWORD
COMM	_build:DWORD
COMM	_ver:DWORD
_DATA	ENDS
;	COMDAT ??_C@_0BM@JBNGOIGP@framerate?5in?5dedicated?5mode@
CONST	SEGMENT
??_C@_0BM@JBNGOIGP@framerate?5in?5dedicated?5mode@ DB 'framerate in dedic'
	DB	'ated mode', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03GNABGMEE@100@
CONST	SEGMENT
??_C@_03GNABGMEE@100@ DB '100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BBKKCBNB@sys_ticrate@
CONST	SEGMENT
??_C@_0M@BBKKCBNB@sys_ticrate@ DB 'sys_ticrate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MBKNLOCO@engine?5is?5in?5development?9mode@
CONST	SEGMENT
??_C@_0BO@MBKNLOCO@engine?5is?5in?5development?9mode@ DB 'engine is in de'
	DB	'velopment-mode', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09DNECJBKD@developer@
CONST	SEGMENT
??_C@_09DNECJBKD@developer@ DB 'developer', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_host_developer DD FLAT:??_C@_09DNECJBKD@developer@
	DD	FLAT:??_C@_01GBGANLPD@0@
	DD	00H
	DD	000000000r			; 0
	DD	0deadbeefH
	DD	FLAT:??_C@_0BO@MBKNLOCO@engine?5is?5in?5development?9mode@
	ORG $+4
_sys_ticrate DD	FLAT:??_C@_0M@BBKKCBNB@sys_ticrate@
	DD	FLAT:??_C@_03GNABGMEE@100@
	DD	00H
	DD	000000000r			; 0
	DD	0deadbeefH
	DD	FLAT:??_C@_0BM@JBNGOIGP@framerate?5in?5dedicated?5mode@
	ORG $+4
_DATA	ENDS
PUBLIC	_Host_Shutdown
PUBLIC	_Host_CompareFileTime
PUBLIC	_Host_NewInstance
PUBLIC	_Host_EndGame
PUBLIC	_Host_AbortCurrentFrame
PUBLIC	_Host_IsLocalGame
PUBLIC	_Host_IsLocalClient
PUBLIC	_Host_ShutdownServer
PUBLIC	_Host_Error
PUBLIC	_Host_PrintEngineFeatures
PUBLIC	_Host_Frame
PUBLIC	_Host_InitDecals
PUBLIC	_Host_CheckSleep
PUBLIC	_Host_ChangeGame_f
PUBLIC	_Host_Exec_f
PUBLIC	_Host_MemStats_f
PUBLIC	_Host_Minimize_f
PUBLIC	_Host_RegisterDecal
PUBLIC	_Host_GetCommands
PUBLIC	_Host_CalcFPS
PUBLIC	_Host_FilterTime
PUBLIC	_Host_Error_f
PUBLIC	_Sys_Error_f
PUBLIC	_Host_InitCommon
PUBLIC	_Host_FreeCommon
PUBLIC	_Host_Main
PUBLIC	_DllMain@12
PUBLIC	??_C@_0BD@HJPGHMNK@Server?5was?5killed?6@	; `string'
PUBLIC	??_C@_0CE@PGHCNDMA@?$FO3EXT?3?$FO7?5big?5world?5support?5enab@ ; `string'
PUBLIC	??_C@_0CE@DHHNPHPO@?$FO3EXT?3?$FO7?5deluxemap?5support?5enab@ ; `string'
PUBLIC	??_C@_0CJ@LFJJCNNI@?$FO3EXT?3?$FO7?5Improved?5MOVETYPE_PUSH@ ; `string'
PUBLIC	??_C@_0CC@HGNNPGND@?$FO3EXT?3?$FO7?5Large?5lightmaps?5enable@ ; `string'
PUBLIC	??_C@_0CH@EJHMPMDG@?$FO3EXT?3?$FO7?5Compensate?5quake?5bug?5e@ ; `string'
PUBLIC	??_C@_0BC@PAAIAAAI@Host_EndGame?3?5?$CFs?6@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BJ@HDFOENPJ@Usage?3?5game?5?$DMdirectory?$DO?6@ ; `string'
PUBLIC	??_C@_0O@HELLJHNF@?$CFs?5not?5exist?6@		; `string'
PUBLIC	??_C@_0BD@DLPFADMB@?$CFs?5already?5active?6@	; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_01IPJKGB@?$CD@				; `string'
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs@			; `string'
PUBLIC	??_C@_0BE@IEKIHNJK@change?5game?5to?5?8?$CFs?8@	; `string'
PUBLIC	?__LINE__Var@?0??Host_Exec_f@@9@9		; `Host_Exec_f'::`1'::__LINE__Var
PUBLIC	??_C@_0BI@MNPGDCBB@Usage?3?5exec?5?$DMfilename?$DO?6@ ; `string'
PUBLIC	??_C@_08LOGJJHKP@game?4cfg@			; `string'
PUBLIC	??_C@_04IFJILJI@?4cfg@				; `string'
PUBLIC	??_C@_0BC@EKILBLKK@couldn?8t?5exec?5?$CFs?6@	; `string'
PUBLIC	??_C@_0L@MFNMKHHD@config?4cfg@			; `string'
PUBLIC	??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@ ; `string'
PUBLIC	??_C@_0M@NJLDBOCK@execing?5?$CFs?6@		; `string'
PUBLIC	??_C@_0BG@LNGAJONC@Usage?3?5memlist?5?$DMall?$DO?6@ ; `string'
PUBLIC	??_C@_0CL@MBNNLGBE@?$FO1Error?3?$FO7?5MAX_DECALS?5limit?5exc@ ; `string'
PUBLIC	?__LINE__Var@?0??Host_InitDecals@@9@9		; `Host_InitDecals'::`1'::__LINE__Var
PUBLIC	??_C@_0N@POKADIKD@gfx?1conchars@		; `string'
PUBLIC	??_C@_0CG@GOPHJBBA@W_LoadWadFile?3?5couldn?8t?5load?5gf@ ; `string'
PUBLIC	??_C@_0P@CMMKAKKH@decals?4wad?1?$CK?4?$CK@	; `string'
PUBLIC	??_C@_0BH@EELKJAGK@InitDecals?3?5?$CFi?5decals?6@ ; `string'
PUBLIC	??_C@_0BD@HEOIMPMP@Host_InitError?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BE@MAMODEJN@Host_MultiError?3?5?$CFs@	; `string'
PUBLIC	??_C@_0P@DOLDHDKF@Host_Error?3?5?$CFs@		; `string'
PUBLIC	??_C@_0L@LFKFGHKM@Host?5Error@			; `string'
PUBLIC	??_C@_0BI@GNFCMHLM@Host_RecursiveError?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BD@BIDIHMCD@Server?5crashed?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BD@NOFDMEEN@Invoked?5host?5error@	; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6@			; `string'
PUBLIC	??_C@_0BC@OHJIJIMP@Invoked?5sys?5error@		; `string'
PUBLIC	?__LINE__Var@?0??Host_InitCommon@@9@9		; `Host_InitCommon'::`1'::__LINE__Var
PUBLIC	??_C@_0CG@NMMMAEMO@couldn?8t?5determine?5current?5dire@ ; `string'
PUBLIC	??_C@_0M@KCNECFJF@Zone?5Engine@			; `string'
PUBLIC	??_C@_08PPFMKLDH@?9console@			; `string'
PUBLIC	??_C@_05GAODMEMC@quake@				; `string'
PUBLIC	??_C@_04IDLBFELI@?9dev@				; `string'
PUBLIC	??_C@_0L@NMOFPIPP@?9dedicated@			; `string'
PUBLIC	??_C@_0BG@PMBFHIMJ@Xash?5Dedicated?5Server@	; `string'
PUBLIC	??_C@_0L@COIOLHLA@Xash?5Error@			; `string'
PUBLIC	??_C@_0CB@IMCADLP@Dedicated?5server?5already?5runnin@ ; `string'
PUBLIC	??_C@_0CI@HAFDIHMN@Sys_LoadLibrary?3?5Loading?5xash?4d@ ; `string'
PUBLIC	??_C@_02IKAHHCAI@?$CFi@				; `string'
PUBLIC	??_C@_0N@JBFJIKLH@?9sys_ticrate@		; `string'
PUBLIC	??_C@_0BG@OOOECGHC@execute?5a?5script?5file@	; `string'
PUBLIC	??_C@_04MGEIEJAD@exec@				; `string'
PUBLIC	??_C@_0BP@CPFOGGPF@prints?5memory?5pool?5information@ ; `string'
PUBLIC	??_C@_07LLNPKCAE@memlist@			; `string'
PUBLIC	??_C@_0DF@FMHHPECF@just?5throw?5a?5fatal?5error?5to?5tes@ ; `string'
PUBLIC	??_C@_09OONGABIJ@sys_error@			; `string'
PUBLIC	??_C@_0DE@CNBMNAIP@just?5throw?5a?5host?5error?5to?5test@ ; `string'
PUBLIC	??_C@_0L@COLFENIP@host_error@			; `string'
PUBLIC	??_C@_0DD@EGKIMJDH@a?5way?5to?5force?5a?5bus?5error?5for?5@ ; `string'
PUBLIC	??_C@_05DLEGDHMH@crash@				; `string'
PUBLIC	??_C@_0BF@HIAPJNBD@host?5fps?5upper?5limit@	; `string'
PUBLIC	??_C@_02MMOKIBIJ@72@				; `string'
PUBLIC	??_C@_07DAHLADMD@fps_max@			; `string'
PUBLIC	??_C@_0CM@LOJCFHCI@locks?5frame?5timing?5to?5this?5valu@ ; `string'
PUBLIC	??_C@_0P@FDKJDNKK@host_framerate@		; `string'
PUBLIC	??_C@_0BM@PIJGNGGH@inidcates?5a?5loaded?5game?4dll@ ; `string'
PUBLIC	??_C@_0BA@HFMOEDOL@host_gameloaded@		; `string'
PUBLIC	??_C@_0BO@HFBIJJOC@inidcates?5a?5loaded?5client?4dll@ ; `string'
PUBLIC	??_C@_0BC@CKKMCGJ@host_clientloaded@		; `string'
PUBLIC	??_C@_0DB@KLKALKJN@apply?5cl_cmdrate?5and?5rate?5to?5lo@ ; `string'
PUBLIC	??_C@_0BA@CNAFJFBP@host_limitlocal@		; `string'
PUBLIC	??_C@_0CI@CGGCKGPH@when?5true?5show?5only?5maps?5in?5gam@ ; `string'
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_0O@DCBIKGJH@con_mapfilter@		; `string'
PUBLIC	??_C@_0BP@FFGHMHBF@returns?5a?5current?5build?5number@ ; `string'
PUBLIC	??_C@_08NLOJPFHM@buildnum@			; `string'
PUBLIC	??_C@_0BI@OCNFMKCK@shows?5an?5engine?5version@	; `string'
PUBLIC	??_C@_04PNCPDLMM@0?499@				; `string'
PUBLIC	??_C@_0BE@CNNDANHL@?$CFi?1?$CFs?5?$CIhw?5build?5?$CFi?$CJ@ ; `string'
PUBLIC	??_C@_03MDPKMNBM@ver@				; `string'
PUBLIC	??_C@_0M@GPHEPGBB@change?5game@			; `string'
PUBLIC	??_C@_04MJNAPEEI@game@				; `string'
PUBLIC	??_C@_0BH@MAPHFCMC@allows?5to?5change?5games@	; `string'
PUBLIC	??_C@_0BG@ENHECFKK@host_allow_changegame@	; `string'
PUBLIC	??_C@_0O@MKMMNMKN@quit?5the?5game@		; `string'
PUBLIC	??_C@_04KNNLNNGO@quit@				; `string'
PUBLIC	??_C@_04MKNBDEPB@exit@				; `string'
PUBLIC	??_C@_0BN@IFNHEFNM@minimize?5main?5window?5to?5tray@ ; `string'
PUBLIC	??_C@_08OJGMCGAJ@minimize@			; `string'
PUBLIC	??_C@_0M@MEOGIMOI@exec?5?$CFs?4rc?6@		; `string'
PUBLIC	??_C@_0BB@JIFJKOMC@exec?5config?4cfg?6@		; `string'
PUBLIC	??_C@_05PCNEBHML@setgl@				; `string'
PUBLIC	??_C@_0EJ@MHHLMHCN@type?5?8map?5?$DMmapname?$DO?8?5to?5run?5ser@ ; `string'
PUBLIC	?__LINE__Var@?0??Host_Shutdown@@9@9		; `Host_Shutdown'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@IKGKOOHO@Server?5shutdown@		; `string'
PUBLIC	??_C@_0BB@ENNINOFP@Server?5shutdown?6@		; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@404e000000000000
PUBLIC	__real@4069000000000000
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_longjmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__GetCommandLineA@0:PROC
EXTRN	__imp__SetCurrentDirectoryA@4:PROC
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SetUnhandledExceptionFilter@4:PROC
EXTRN	__imp__SetErrorMode@4:PROC
EXTRN	__imp__CreateMutexA@12:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GlobalMemoryStatus@4:PROC
EXTRN	__imp__CreateSemaphoreA@16:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__timeBeginPeriod@4:PROC
EXTRN	_abs:PROC
EXTRN	__imp__atof:PROC
EXTRN	_Sys_Sleep:PROC
EXTRN	_Sys_DoubleTime:PROC
EXTRN	_Sys_CheckParm:PROC
EXTRN	_Sys_Error:PROC
EXTRN	_Sys_ParseCommandLine:PROC
EXTRN	_Sys_MergeCommandLine:PROC
EXTRN	_Sys_Crash@4:PROC
EXTRN	__Sys_GetParmFromCmdLine:PROC
EXTRN	_Sys_Quit:PROC
EXTRN	_Con_ShowConsole:PROC
EXTRN	_Con_InitConsoleCommands:PROC
EXTRN	_Con_CreateConsole:PROC
EXTRN	_Con_DestroyConsole:PROC
EXTRN	_Con_Input:PROC
EXTRN	_Cbuf_Clear:PROC
EXTRN	_Cbuf_AddText:PROC
EXTRN	_Cbuf_InsertText:PROC
EXTRN	_Cbuf_ExecStuffCmds:PROC
EXTRN	_Cbuf_Execute:PROC
EXTRN	_Cmd_Argc:PROC
EXTRN	_Cmd_Argv:PROC
EXTRN	_Cmd_Init:PROC
EXTRN	_Cmd_AddCommand:PROC
EXTRN	_Cmd_RemoveCommand:PROC
EXTRN	_Q_strlen:PROC
EXTRN	_Q_strncat:PROC
EXTRN	_Q_strncpy:PROC
EXTRN	_Q_isdigit:PROC
EXTRN	_Q_atoi:PROC
EXTRN	_Q_strnicmp:PROC
EXTRN	_Q_vsnprintf:PROC
EXTRN	_Q_snprintf:PROC
EXTRN	_Q_sprintf:PROC
EXTRN	_va:PROC
EXTRN	_Memory_Init:PROC
EXTRN	__Mem_Alloc:PROC
EXTRN	__Mem_AllocPool:PROC
EXTRN	__Mem_FreePool:PROC
EXTRN	__Mem_Free:PROC
EXTRN	_Mem_PrintList:PROC
EXTRN	_Mem_PrintStats:PROC
EXTRN	_Cvar_RegisterVariable:PROC
EXTRN	_Cvar_Get:PROC
EXTRN	_Cvar_DirectSet:PROC
EXTRN	_Cvar_SetValue:PROC
EXTRN	_Cvar_Init:PROC
EXTRN	_NET_Init:PROC
EXTRN	_NET_Shutdown:PROC
EXTRN	_FS_Init:PROC
EXTRN	_FS_Shutdown:PROC
EXTRN	_FS_LoadGameInfo:PROC
EXTRN	_COM_FileBase:PROC
EXTRN	_COM_DefaultExtension:PROC
EXTRN	_COM_ExtractFilePath:PROC
EXTRN	_FS_LoadFile:PROC
EXTRN	_COM_CheckString:PROC
EXTRN	_FS_Search:PROC
EXTRN	_FS_FileExists:PROC
EXTRN	_Image_Init:PROC
EXTRN	_Image_Shutdown:PROC
EXTRN	_Sound_Init:PROC
EXTRN	_Sound_Shutdown:PROC
EXTRN	_Q_buildnum:PROC
EXTRN	_Host_WriteConfig:PROC
EXTRN	_COM_InitHostState:PROC
EXTRN	_COM_Frame:PROC
EXTRN	_CL_Init:PROC
EXTRN	_CL_Shutdown:PROC
EXTRN	_Host_ClientBegin:PROC
EXTRN	_Host_ClientFrame:PROC
EXTRN	_SV_Init:PROC
EXTRN	_SV_Shutdown:PROC
EXTRN	_Host_ServerFrame:PROC
EXTRN	_SV_Active:PROC
EXTRN	_Con_Reportf:PROC
EXTRN	_Con_DPrintf:PROC
EXTRN	_Con_Printf:PROC
EXTRN	_HPAK_Init:PROC
EXTRN	_HPAK_FlushHostQueue:PROC
EXTRN	_Key_Init:PROC
EXTRN	_Key_SetKeyDest:PROC
EXTRN	_CL_IsInGame:PROC
EXTRN	_CL_IsInMenu:PROC
EXTRN	_CL_Initialized:PROC
EXTRN	_CL_GetDemoFramerate:PROC
EXTRN	_CL_GetMaxClients:PROC
EXTRN	_SV_GetMaxClients:PROC
EXTRN	_CL_IsRecordDemo:PROC
EXTRN	_CL_IsTimeDemo:PROC
EXTRN	_CL_IsPlaybackDemo:PROC
EXTRN	_SV_Initialized:PROC
EXTRN	_CL_WriteMessageHistory:PROC
EXTRN	_CL_Disconnect:PROC
EXTRN	_CL_ClearEdicts:PROC
EXTRN	_CL_Drop:PROC
EXTRN	_Con_Init:PROC
EXTRN	_SCR_CheckStartupVids:PROC
EXTRN	_VID_InitDefaultResolution:PROC
EXTRN	_UI_SetActiveMenu:PROC
EXTRN	_Netchan_Init:PROC
EXTRN	_Netchan_Shutdown:PROC
EXTRN	_Mod_Init:PROC
EXTRN	_Mod_FreeAll:PROC
EXTRN	_Mod_Shutdown:PROC
EXTRN	_IN_Init:PROC
EXTRN	_Host_InputFrame:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_gl_vsync:DWORD
EXTRN	_vid_displayfrequency:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?string@?1??Host_EndGame@@9@9 DB 0400H DUP (?)		; `Host_EndGame'::`2'::string
	ALIGN	8

?oldtime@?1??Host_FilterTime@@9@9 DQ 01H DUP (?)	; `Host_FilterTime'::`2'::oldtime
?hosterror1@?1??Host_Error@@9@9 DB 0400H DUP (?)	; `Host_Error'::`2'::hosterror1
?hosterror2@?1??Host_Error@@9@9 DB 0400H DUP (?)	; `Host_Error'::`2'::hosterror2
?recursive@?1??Host_Error@@9@9 DD 01H DUP (?)		; `Host_Error'::`2'::recursive
	ALIGN	8

?oldtime@?1??Host_Main@@9@9 DQ 01H DUP (?)		; `Host_Main'::`2'::oldtime
?newtime@?1??Host_Main@@9@9 DQ 01H DUP (?)		; `Host_Main'::`2'::newtime
_BSS	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@404e000000000000
CONST	SEGMENT
__real@404e000000000000 DQ 0404e000000000000r	; 60
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f1a36e2eb1c432d
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BB@ENNINOFP@Server?5shutdown?6@
CONST	SEGMENT
??_C@_0BB@ENNINOFP@Server?5shutdown?6@ DB 'Server shutdown', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IKGKOOHO@Server?5shutdown@
CONST	SEGMENT
??_C@_0BA@IKGKOOHO@Server?5shutdown@ DB 'Server shutdown', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Host_Shutdown@@9@9
_DATA	SEGMENT
?__LINE__Var@?0??Host_Shutdown@@9@9 DD 038bH		; `Host_Shutdown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EJ@MHHLMHCN@type?5?8map?5?$DMmapname?$DO?8?5to?5run?5ser@
CONST	SEGMENT
??_C@_0EJ@MHHLMHCN@type?5?8map?5?$DMmapname?$DO?8?5to?5run?5ser@ DB 'type'
	DB	' ''map <mapname>'' to run server... (TAB-autocomplete is work'
	DB	'ing too)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05PCNEBHML@setgl@
CONST	SEGMENT
??_C@_05PCNEBHML@setgl@ DB 'setgl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JIFJKOMC@exec?5config?4cfg?6@
CONST	SEGMENT
??_C@_0BB@JIFJKOMC@exec?5config?4cfg?6@ DB 'exec config.cfg', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEOGIMOI@exec?5?$CFs?4rc?6@
CONST	SEGMENT
??_C@_0M@MEOGIMOI@exec?5?$CFs?4rc?6@ DB 'exec %s.rc', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OJGMCGAJ@minimize@
CONST	SEGMENT
??_C@_08OJGMCGAJ@minimize@ DB 'minimize', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IFNHEFNM@minimize?5main?5window?5to?5tray@
CONST	SEGMENT
??_C@_0BN@IFNHEFNM@minimize?5main?5window?5to?5tray@ DB 'minimize main wi'
	DB	'ndow to tray', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKNBDEPB@exit@
CONST	SEGMENT
??_C@_04MKNBDEPB@exit@ DB 'exit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KNNLNNGO@quit@
CONST	SEGMENT
??_C@_04KNNLNNGO@quit@ DB 'quit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKMMNMKN@quit?5the?5game@
CONST	SEGMENT
??_C@_0O@MKMMNMKN@quit?5the?5game@ DB 'quit the game', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ENHECFKK@host_allow_changegame@
CONST	SEGMENT
??_C@_0BG@ENHECFKK@host_allow_changegame@ DB 'host_allow_changegame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MAPHFCMC@allows?5to?5change?5games@
CONST	SEGMENT
??_C@_0BH@MAPHFCMC@allows?5to?5change?5games@ DB 'allows to change games', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MJNAPEEI@game@
CONST	SEGMENT
??_C@_04MJNAPEEI@game@ DB 'game', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GPHEPGBB@change?5game@
CONST	SEGMENT
??_C@_0M@GPHEPGBB@change?5game@ DB 'change game', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MDPKMNBM@ver@
CONST	SEGMENT
??_C@_03MDPKMNBM@ver@ DB 'ver', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CNNDANHL@?$CFi?1?$CFs?5?$CIhw?5build?5?$CFi?$CJ@
CONST	SEGMENT
??_C@_0BE@CNNDANHL@?$CFi?1?$CFs?5?$CIhw?5build?5?$CFi?$CJ@ DB '%i/%s (hw '
	DB	'build %i)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNCPDLMM@0?499@
CONST	SEGMENT
??_C@_04PNCPDLMM@0?499@ DB '0.99', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OCNFMKCK@shows?5an?5engine?5version@
CONST	SEGMENT
??_C@_0BI@OCNFMKCK@shows?5an?5engine?5version@ DB 'shows an engine versio'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLOJPFHM@buildnum@
CONST	SEGMENT
??_C@_08NLOJPFHM@buildnum@ DB 'buildnum', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FFGHMHBF@returns?5a?5current?5build?5number@
CONST	SEGMENT
??_C@_0BP@FFGHMHBF@returns?5a?5current?5build?5number@ DB 'returns a curr'
	DB	'ent build number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DCBIKGJH@con_mapfilter@
CONST	SEGMENT
??_C@_0O@DCBIKGJH@con_mapfilter@ DB 'con_mapfilter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CGGCKGPH@when?5true?5show?5only?5maps?5in?5gam@
CONST	SEGMENT
??_C@_0CI@CGGCKGPH@when?5true?5show?5only?5maps?5in?5gam@ DB 'when true s'
	DB	'how only maps in game folder', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CNAFJFBP@host_limitlocal@
CONST	SEGMENT
??_C@_0BA@CNAFJFBP@host_limitlocal@ DB 'host_limitlocal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KLKALKJN@apply?5cl_cmdrate?5and?5rate?5to?5lo@
CONST	SEGMENT
??_C@_0DB@KLKALKJN@apply?5cl_cmdrate?5and?5rate?5to?5lo@ DB 'apply cl_cmd'
	DB	'rate and rate to loopback connection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CKKMCGJ@host_clientloaded@
CONST	SEGMENT
??_C@_0BC@CKKMCGJ@host_clientloaded@ DB 'host_clientloaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HFBIJJOC@inidcates?5a?5loaded?5client?4dll@
CONST	SEGMENT
??_C@_0BO@HFBIJJOC@inidcates?5a?5loaded?5client?4dll@ DB 'inidcates a loa'
	DB	'ded client.dll', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HFMOEDOL@host_gameloaded@
CONST	SEGMENT
??_C@_0BA@HFMOEDOL@host_gameloaded@ DB 'host_gameloaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PIJGNGGH@inidcates?5a?5loaded?5game?4dll@
CONST	SEGMENT
??_C@_0BM@PIJGNGGH@inidcates?5a?5loaded?5game?4dll@ DB 'inidcates a loade'
	DB	'd game.dll', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FDKJDNKK@host_framerate@
CONST	SEGMENT
??_C@_0P@FDKJDNKK@host_framerate@ DB 'host_framerate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@LOJCFHCI@locks?5frame?5timing?5to?5this?5valu@
CONST	SEGMENT
??_C@_0CM@LOJCFHCI@locks?5frame?5timing?5to?5this?5valu@ DB 'locks frame '
	DB	'timing to this value in seconds', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DAHLADMD@fps_max@
CONST	SEGMENT
??_C@_07DAHLADMD@fps_max@ DB 'fps_max', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MMOKIBIJ@72@
CONST	SEGMENT
??_C@_02MMOKIBIJ@72@ DB '72', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HIAPJNBD@host?5fps?5upper?5limit@
CONST	SEGMENT
??_C@_0BF@HIAPJNBD@host?5fps?5upper?5limit@ DB 'host fps upper limit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEGDHMH@crash@
CONST	SEGMENT
??_C@_05DLEGDHMH@crash@ DB 'crash', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@EGKIMJDH@a?5way?5to?5force?5a?5bus?5error?5for?5@
CONST	SEGMENT
??_C@_0DD@EGKIMJDH@a?5way?5to?5force?5a?5bus?5error?5for?5@ DB 'a way to '
	DB	'force a bus error for development reasons', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COLFENIP@host_error@
CONST	SEGMENT
??_C@_0L@COLFENIP@host_error@ DB 'host_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CNBMNAIP@just?5throw?5a?5host?5error?5to?5test@
CONST	SEGMENT
??_C@_0DE@CNBMNAIP@just?5throw?5a?5host?5error?5to?5test@ DB 'just throw '
	DB	'a host error to test shutdown procedures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OONGABIJ@sys_error@
CONST	SEGMENT
??_C@_09OONGABIJ@sys_error@ DB 'sys_error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FMHHPECF@just?5throw?5a?5fatal?5error?5to?5tes@
CONST	SEGMENT
??_C@_0DF@FMHHPECF@just?5throw?5a?5fatal?5error?5to?5tes@ DB 'just throw '
	DB	'a fatal error to test shutdown procedures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LLNPKCAE@memlist@
CONST	SEGMENT
??_C@_07LLNPKCAE@memlist@ DB 'memlist', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CPFOGGPF@prints?5memory?5pool?5information@
CONST	SEGMENT
??_C@_0BP@CPFOGGPF@prints?5memory?5pool?5information@ DB 'prints memory p'
	DB	'ool information', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGEIEJAD@exec@
CONST	SEGMENT
??_C@_04MGEIEJAD@exec@ DB 'exec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OOOECGHC@execute?5a?5script?5file@
CONST	SEGMENT
??_C@_0BG@OOOECGHC@execute?5a?5script?5file@ DB 'execute a script file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBFJIKLH@?9sys_ticrate@
CONST	SEGMENT
??_C@_0N@JBFJIKLH@?9sys_ticrate@ DB '-sys_ticrate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02IKAHHCAI@?$CFi@
CONST	SEGMENT
??_C@_02IKAHHCAI@?$CFi@ DB '%i', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HAFDIHMN@Sys_LoadLibrary?3?5Loading?5xash?4d@
CONST	SEGMENT
??_C@_0CI@HAFDIHMN@Sys_LoadLibrary?3?5Loading?5xash?4d@ DB 'Sys_LoadLibra'
	DB	'ry: Loading xash.dll - ok', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IMCADLP@Dedicated?5server?5already?5runnin@
CONST	SEGMENT
??_C@_0CB@IMCADLP@Dedicated?5server?5already?5runnin@ DB 'Dedicated serve'
	DB	'r already running', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COIOLHLA@Xash?5Error@
CONST	SEGMENT
??_C@_0L@COIOLHLA@Xash?5Error@ DB 'Xash Error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PMBFHIMJ@Xash?5Dedicated?5Server@
CONST	SEGMENT
??_C@_0BG@PMBFHIMJ@Xash?5Dedicated?5Server@ DB 'Xash Dedicated Server', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NMOFPIPP@?9dedicated@
CONST	SEGMENT
??_C@_0L@NMOFPIPP@?9dedicated@ DB '-dedicated', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDLBFELI@?9dev@
CONST	SEGMENT
??_C@_04IDLBFELI@?9dev@ DB '-dev', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GAODMEMC@quake@
CONST	SEGMENT
??_C@_05GAODMEMC@quake@ DB 'quake', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPFMKLDH@?9console@
CONST	SEGMENT
??_C@_08PPFMKLDH@?9console@ DB '-console', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCNECFJF@Zone?5Engine@
CONST	SEGMENT
??_C@_0M@KCNECFJF@Zone?5Engine@ DB 'Zone Engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NMMMAEMO@couldn?8t?5determine?5current?5dire@
CONST	SEGMENT
??_C@_0CG@NMMMAEMO@couldn?8t?5determine?5current?5dire@ DB 'couldn''t det'
	DB	'ermine current directory', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Host_InitCommon@@9@9
_DATA	SEGMENT
?__LINE__Var@?0??Host_InitCommon@@9@9 DD 0260H		; `Host_InitCommon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@OHJIJIMP@Invoked?5sys?5error@
CONST	SEGMENT
??_C@_0BC@OHJIJIMP@Invoked?5sys?5error@ DB 'Invoked sys error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NOFDMEEN@Invoked?5host?5error@
CONST	SEGMENT
??_C@_0BD@NOFDMEEN@Invoked?5host?5error@ DB 'Invoked host error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BIDIHMCD@Server?5crashed?3?5?$CFs@
CONST	SEGMENT
??_C@_0BD@BIDIHMCD@Server?5crashed?3?5?$CFs@ DB 'Server crashed: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GNFCMHLM@Host_RecursiveError?3?5?$CFs@
CONST	SEGMENT
??_C@_0BI@GNFCMHLM@Host_RecursiveError?3?5?$CFs@ DB 'Host_RecursiveError:'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LFKFGHKM@Host?5Error@
CONST	SEGMENT
??_C@_0L@LFKFGHKM@Host?5Error@ DB 'Host Error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DOLDHDKF@Host_Error?3?5?$CFs@
CONST	SEGMENT
??_C@_0P@DOLDHDKF@Host_Error?3?5?$CFs@ DB 'Host_Error: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MAMODEJN@Host_MultiError?3?5?$CFs@
CONST	SEGMENT
??_C@_0BE@MAMODEJN@Host_MultiError?3?5?$CFs@ DB 'Host_MultiError: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEOIMPMP@Host_InitError?3?5?$CFs@
CONST	SEGMENT
??_C@_0BD@HEOIMPMP@Host_InitError?3?5?$CFs@ DB 'Host_InitError: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EELKJAGK@InitDecals?3?5?$CFi?5decals?6@
CONST	SEGMENT
??_C@_0BH@EELKJAGK@InitDecals?3?5?$CFi?5decals?6@ DB 'InitDecals: %i deca'
	DB	'ls', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CMMKAKKH@decals?4wad?1?$CK?4?$CK@
CONST	SEGMENT
??_C@_0P@CMMKAKKH@decals?4wad?1?$CK?4?$CK@ DB 'decals.wad/*.*', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GOPHJBBA@W_LoadWadFile?3?5couldn?8t?5load?5gf@
CONST	SEGMENT
??_C@_0CG@GOPHJBBA@W_LoadWadFile?3?5couldn?8t?5load?5gf@ DB 'W_LoadWadFil'
	DB	'e: couldn''t load gfx.wad', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@POKADIKD@gfx?1conchars@
CONST	SEGMENT
??_C@_0N@POKADIKD@gfx?1conchars@ DB 'gfx/conchars', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Host_InitDecals@@9@9
_DATA	SEGMENT
?__LINE__Var@?0??Host_InitDecals@@9@9 DD 0159H		; `Host_InitDecals'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CL@MBNNLGBE@?$FO1Error?3?$FO7?5MAX_DECALS?5limit?5exc@
CONST	SEGMENT
??_C@_0CL@MBNNLGBE@?$FO1Error?3?$FO7?5MAX_DECALS?5limit?5exc@ DB '^1Error'
	DB	':^7 MAX_DECALS limit exceeded (%d)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LNGAJONC@Usage?3?5memlist?5?$DMall?$DO?6@
CONST	SEGMENT
??_C@_0BG@LNGAJONC@Usage?3?5memlist?5?$DMall?$DO?6@ DB 'Usage: memlist <a'
	DB	'll>', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJLDBOCK@execing?5?$CFs?6@
CONST	SEGMENT
??_C@_0M@NJLDBOCK@execing?5?$CFs?6@ DB 'execing %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
CONST	SEGMENT
??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@ DB 'D:\DevDrago'
	DB	'n\XashFE\dev\src\engine\common\host.c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFNMKHHD@config?4cfg@
CONST	SEGMENT
??_C@_0L@MFNMKHHD@config?4cfg@ DB 'config.cfg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EKILBLKK@couldn?8t?5exec?5?$CFs?6@
CONST	SEGMENT
??_C@_0BC@EKILBLKK@couldn?8t?5exec?5?$CFs?6@ DB 'couldn''t exec %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IFJILJI@?4cfg@
CONST	SEGMENT
??_C@_04IFJILJI@?4cfg@ DB '.cfg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOGJJHKP@game?4cfg@
CONST	SEGMENT
??_C@_08LOGJJHKP@game?4cfg@ DB 'game.cfg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MNPGDCBB@Usage?3?5exec?5?$DMfilename?$DO?6@
CONST	SEGMENT
??_C@_0BI@MNPGDCBB@Usage?3?5exec?5?$DMfilename?$DO?6@ DB 'Usage: exec <fi'
	DB	'lename>', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Host_Exec_f@@9@9
_DATA	SEGMENT
?__LINE__Var@?0??Host_Exec_f@@9@9 DD 0cfH		; `Host_Exec_f'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@IEKIHNJK@change?5game?5to?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BE@IEKIHNJK@change?5game?5to?5?8?$CFs?8@ DB 'change game to ''%s'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IPJKGB@?$CD@
CONST	SEGMENT
??_C@_01IPJKGB@?$CD@ DB '#', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DLPFADMB@?$CFs?5already?5active?6@
CONST	SEGMENT
??_C@_0BD@DLPFADMB@?$CFs?5already?5active?6@ DB '%s already active', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HELLJHNF@?$CFs?5not?5exist?6@
CONST	SEGMENT
??_C@_0O@HELLJHNF@?$CFs?5not?5exist?6@ DB '%s not exist', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HDFOENPJ@Usage?3?5game?5?$DMdirectory?$DO?6@
CONST	SEGMENT
??_C@_0BJ@HDFOENPJ@Usage?3?5game?5?$DMdirectory?$DO?6@ DB 'Usage: game <d'
	DB	'irectory>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PAAIAAAI@Host_EndGame?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0BC@PAAIAAAI@Host_EndGame?3?5?$CFs?6@ DB 'Host_EndGame: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EJHMPMDG@?$FO3EXT?3?$FO7?5Compensate?5quake?5bug?5e@
CONST	SEGMENT
??_C@_0CH@EJHMPMDG@?$FO3EXT?3?$FO7?5Compensate?5quake?5bug?5e@ DB '^3EXT:'
	DB	'^7 Compensate quake bug enabled', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HGNNPGND@?$FO3EXT?3?$FO7?5Large?5lightmaps?5enable@
CONST	SEGMENT
??_C@_0CC@HGNNPGND@?$FO3EXT?3?$FO7?5Large?5lightmaps?5enable@ DB '^3EXT:^'
	DB	'7 Large lightmaps enabled', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LFJJCNNI@?$FO3EXT?3?$FO7?5Improved?5MOVETYPE_PUSH@
CONST	SEGMENT
??_C@_0CJ@LFJJCNNI@?$FO3EXT?3?$FO7?5Improved?5MOVETYPE_PUSH@ DB '^3EXT:^7'
	DB	' Improved MOVETYPE_PUSH is used', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DHHNPHPO@?$FO3EXT?3?$FO7?5deluxemap?5support?5enab@
CONST	SEGMENT
??_C@_0CE@DHHNPHPO@?$FO3EXT?3?$FO7?5deluxemap?5support?5enab@ DB '^3EXT:^'
	DB	'7 deluxemap support enabled', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PGHCNDMA@?$FO3EXT?3?$FO7?5big?5world?5support?5enab@
CONST	SEGMENT
??_C@_0CE@PGHCNDMA@?$FO3EXT?3?$FO7?5big?5world?5support?5enab@ DB '^3EXT:'
	DB	'^7 big world support enabled', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HJPGHMNK@Server?5was?5killed?6@
CONST	SEGMENT
??_C@_0BD@HJPGHMNK@Server?5was?5killed?6@ DB 'Server was killed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	010H
	DW	0703H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	010H
	DB	0ecH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	010H
	DW	01dbH
voltbl	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _DllMain@12
_TEXT	SEGMENT
_hinstDLL$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC					; COMDAT

; 934  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 935  : 	hCurrent = hinstDLL;

	mov	eax, DWORD PTR _hinstDLL$[ebp]
	mov	DWORD PTR _hCurrent, eax

; 936  : 	return TRUE;

	mov	eax, 1

; 937  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Main
_TEXT	SEGMENT
tv286 = -72						; size = 8
tv212 = -68						; size = 4
_progname$ = 8						; size = 4
_bChangeGame$ = 12					; size = 4
_func$ = 16						; size = 4
_Host_Main PROC						; COMDAT

; 806  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 807  : 	static double	oldtime, newtime;
; 808  : 
; 809  : 	pChangeGame = func;	// may be NULL

	mov	eax, DWORD PTR _func$[ebp]
	mov	DWORD PTR _pChangeGame, eax

; 810  : 
; 811  : 	Host_InitCommon( progname, bChangeGame );

	mov	eax, DWORD PTR _bChangeGame$[ebp]
	push	eax
	mov	ecx, DWORD PTR _progname$[ebp]
	push	ecx
	call	_Host_InitCommon
	add	esp, 8

; 812  : 
; 813  : 	// init commands and vars
; 814  : 	if( host_developer.value >= DEV_EXTENDED )

	movss	xmm0, DWORD PTR _host_developer+12
	comiss	xmm0, DWORD PTR __real@40000000
	jb	SHORT $LN6@Host_Main

; 815  : 	{
; 816  : 		Cmd_AddCommand ( "sys_error", Sys_Error_f, "just throw a fatal error to test shutdown procedures");

	push	OFFSET ??_C@_0DF@FMHHPECF@just?5throw?5a?5fatal?5error?5to?5tes@
	push	OFFSET _Sys_Error_f
	push	OFFSET ??_C@_09OONGABIJ@sys_error@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 817  : 		Cmd_AddCommand ( "host_error", Host_Error_f, "just throw a host error to test shutdown procedures");

	push	OFFSET ??_C@_0DE@CNBMNAIP@just?5throw?5a?5host?5error?5to?5test@
	push	OFFSET _Host_Error_f
	push	OFFSET ??_C@_0L@COLFENIP@host_error@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 818  : 		Cmd_AddCommand ( "crash", Host_Crash_f, "a way to force a bus error for development reasons");

	push	OFFSET ??_C@_0DD@EGKIMJDH@a?5way?5to?5force?5a?5bus?5error?5for?5@
	push	OFFSET _Host_Crash_f
	push	OFFSET ??_C@_05DLEGDHMH@crash@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH
$LN6@Host_Main:

; 819  : 	}
; 820  : 
; 821  : 	host_maxfps = Cvar_Get( "fps_max", "72", FCVAR_ARCHIVE, "host fps upper limit" );

	push	OFFSET ??_C@_0BF@HIAPJNBD@host?5fps?5upper?5limit@
	push	1
	push	OFFSET ??_C@_02MMOKIBIJ@72@
	push	OFFSET ??_C@_07DAHLADMD@fps_max@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _host_maxfps, eax

; 822  : 	host_framerate = Cvar_Get( "host_framerate", "0", 0, "locks frame timing to this value in seconds" );  

	push	OFFSET ??_C@_0CM@LOJCFHCI@locks?5frame?5timing?5to?5this?5valu@
	push	0
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0P@FDKJDNKK@host_framerate@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _host_framerate, eax

; 823  : 	host_gameloaded = Cvar_Get( "host_gameloaded", "0", FCVAR_READ_ONLY, "inidcates a loaded game.dll" );

	push	OFFSET ??_C@_0BM@PIJGNGGH@inidcates?5a?5loaded?5game?4dll@
	push	131072					; 00020000H
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0BA@HFMOEDOL@host_gameloaded@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _host_gameloaded, eax

; 824  : 	host_clientloaded = Cvar_Get( "host_clientloaded", "0", FCVAR_READ_ONLY, "inidcates a loaded client.dll" );

	push	OFFSET ??_C@_0BO@HFBIJJOC@inidcates?5a?5loaded?5client?4dll@
	push	131072					; 00020000H
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0BC@CKKMCGJ@host_clientloaded@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _host_clientloaded, eax

; 825  : 	host_limitlocal = Cvar_Get( "host_limitlocal", "0", 0, "apply cl_cmdrate and rate to loopback connection" );

	push	OFFSET ??_C@_0DB@KLKALKJN@apply?5cl_cmdrate?5and?5rate?5to?5lo@
	push	0
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0BA@CNAFJFBP@host_limitlocal@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _host_limitlocal, eax

; 826  : 	con_gamemaps = Cvar_Get( "con_mapfilter", "1", FCVAR_ARCHIVE, "when true show only maps in game folder" );

	push	OFFSET ??_C@_0CI@CGGCKGPH@when?5true?5show?5only?5maps?5in?5gam@
	push	1
	push	OFFSET ??_C@_01HIHLOKLC@1@
	push	OFFSET ??_C@_0O@DCBIKGJH@con_mapfilter@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _con_gamemaps, eax

; 827  : 	build = Cvar_Get( "buildnum", va( "%i", Q_buildnum()), FCVAR_READ_ONLY, "returns a current build number" );

	push	OFFSET ??_C@_0BP@FFGHMHBF@returns?5a?5current?5build?5number@
	push	131072					; 00020000H
	call	_Q_buildnum
	push	eax
	push	OFFSET ??_C@_02IKAHHCAI@?$CFi@
	call	_va
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_08NLOJPFHM@buildnum@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _build, eax

; 828  : 	ver = Cvar_Get( "ver", va( "%i/%s (hw build %i)", PROTOCOL_VERSION, XASH_VERSION, Q_buildnum()), FCVAR_READ_ONLY, "shows an engine version" );

	push	OFFSET ??_C@_0BI@OCNFMKCK@shows?5an?5engine?5version@
	push	131072					; 00020000H
	call	_Q_buildnum
	push	eax
	push	OFFSET ??_C@_04PNCPDLMM@0?499@
	push	49					; 00000031H
	push	OFFSET ??_C@_0BE@CNNDANHL@?$CFi?1?$CFs?5?$CIhw?5build?5?$CFi?$CJ@
	call	_va
	add	esp, 16					; 00000010H
	push	eax
	push	OFFSET ??_C@_03MDPKMNBM@ver@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ver, eax

; 829  : 
; 830  : 	Mod_Init();

	call	_Mod_Init

; 831  : 	NET_Init();

	call	_NET_Init

; 832  : 	Netchan_Init();

	call	_Netchan_Init

; 833  : 
; 834  : 	// allow to change game from the console
; 835  : 	if( pChangeGame != NULL )

	cmp	DWORD PTR _pChangeGame, 0
	je	SHORT $LN7@Host_Main

; 836  : 	{
; 837  : 		Cmd_AddCommand( "game", Host_ChangeGame_f, "change game" );

	push	OFFSET ??_C@_0M@GPHEPGBB@change?5game@
	push	OFFSET _Host_ChangeGame_f
	push	OFFSET ??_C@_04MJNAPEEI@game@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 838  : 		Cvar_Get( "host_allow_changegame", "1", FCVAR_READ_ONLY, "allows to change games" );

	push	OFFSET ??_C@_0BH@MAPHFCMC@allows?5to?5change?5games@
	push	131072					; 00020000H
	push	OFFSET ??_C@_01HIHLOKLC@1@
	push	OFFSET ??_C@_0BG@ENHECFKK@host_allow_changegame@
	call	_Cvar_Get
	add	esp, 16					; 00000010H

; 839  : 	}

	jmp	SHORT $LN8@Host_Main
$LN7@Host_Main:

; 840  : 	else
; 841  : 	{
; 842  : 		Cvar_Get( "host_allow_changegame", "0", FCVAR_READ_ONLY, "allows to change games" );

	push	OFFSET ??_C@_0BH@MAPHFCMC@allows?5to?5change?5games@
	push	131072					; 00020000H
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0BG@ENHECFKK@host_allow_changegame@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
$LN8@Host_Main:

; 843  : 	}
; 844  : 
; 845  : 	SV_Init();

	call	_SV_Init

; 846  : 	CL_Init();

	call	_CL_Init

; 847  : 
; 848  : 	if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN9@Host_Main

; 849  : 	{
; 850  : 		Con_InitConsoleCommands ();

	call	_Con_InitConsoleCommands

; 851  : 
; 852  : 		Cmd_AddCommand( "quit", Sys_Quit, "quit the game" );

	push	OFFSET ??_C@_0O@MKMMNMKN@quit?5the?5game@
	push	OFFSET _Sys_Quit
	push	OFFSET ??_C@_04KNNLNNGO@quit@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 853  : 		Cmd_AddCommand( "exit", Sys_Quit, "quit the game" );

	push	OFFSET ??_C@_0O@MKMMNMKN@quit?5the?5game@
	push	OFFSET _Sys_Quit
	push	OFFSET ??_C@_04MKNBDEPB@exit@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 854  : 	}

	jmp	SHORT $LN10@Host_Main
$LN9@Host_Main:

; 855  : 	else Cmd_AddCommand( "minimize", Host_Minimize_f, "minimize main window to tray" );

	push	OFFSET ??_C@_0BN@IFNHEFNM@minimize?5main?5window?5to?5tray@
	push	OFFSET _Host_Minimize_f
	push	OFFSET ??_C@_08OJGMCGAJ@minimize@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH
$LN10@Host_Main:

; 856  : 
; 857  : 	host.errorframe = 0;

	mov	DWORD PTR _host+232, 0

; 858  : 
; 859  : 	// post initializations
; 860  : 	switch( host.type )

	mov	eax, DWORD PTR _host+164
	mov	DWORD PTR tv212[ebp], eax
	cmp	DWORD PTR tv212[ebp], 0
	je	SHORT $LN11@Host_Main
	cmp	DWORD PTR tv212[ebp], 1
	je	SHORT $LN13@Host_Main
	jmp	SHORT $LN2@Host_Main
$LN11@Host_Main:

; 861  : 	{
; 862  : 	case HOST_NORMAL:
; 863  : 		Con_ShowConsole( false ); // hide console

	push	0
	call	_Con_ShowConsole
	add	esp, 4

; 864  : 		// execute startup config and cmdline
; 865  : 		Cbuf_AddText( va( "exec %s.rc\n", SI.rcName ));

	push	OFFSET _SI+256
	push	OFFSET ??_C@_0M@MEOGIMOI@exec?5?$CFs?4rc?6@
	call	_va
	add	esp, 8
	push	eax
	call	_Cbuf_AddText
	add	esp, 4

; 866  : 		Cbuf_Execute();

	call	_Cbuf_Execute

; 867  : 		if( !host.config_executed )

	cmp	DWORD PTR _host+34396, 0
	jne	SHORT $LN12@Host_Main

; 868  : 		{
; 869  : 			Cbuf_AddText( "exec config.cfg\n" );

	push	OFFSET ??_C@_0BB@JIFJKOMC@exec?5config?4cfg?6@
	call	_Cbuf_AddText
	add	esp, 4

; 870  : 			Cbuf_Execute();

	call	_Cbuf_Execute
$LN12@Host_Main:

; 871  : 		}
; 872  : 		break;

	jmp	SHORT $LN2@Host_Main
$LN13@Host_Main:

; 873  : 	case HOST_DEDICATED:
; 874  : 		// allways parse commandline in dedicated-mode
; 875  : 		host.stuffcmds_pending = true;

	mov	DWORD PTR _host+34348, 1
$LN2@Host_Main:

; 876  : 		break;
; 877  : 	}
; 878  : 
; 879  : 	host.change_game = false;	// done

	mov	DWORD PTR _host+34368, 0

; 880  : 	Cmd_RemoveCommand( "setgl" );

	push	OFFSET ??_C@_05PCNEBHML@setgl@
	call	_Cmd_RemoveCommand
	add	esp, 4

; 881  : 	Cbuf_ExecStuffCmds();	// execute stuffcmds (commandline)

	call	_Cbuf_ExecStuffCmds

; 882  : 	SCR_CheckStartupVids();	// must be last

	call	_SCR_CheckStartupVids

; 883  : 
; 884  : 	oldtime = Sys_DoubleTime() - 0.1;

	call	_Sys_DoubleTime
	fstp	QWORD PTR tv286[ebp]
	movsd	xmm0, QWORD PTR tv286[ebp]
	subsd	xmm0, QWORD PTR __real@3fb999999999999a
	movsd	QWORD PTR ?oldtime@?1??Host_Main@@9@9, xmm0

; 885  : 
; 886  : 	if( host.type == HOST_DEDICATED && GameState->nextstate == STATE_RUNFRAME )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN14@Host_Main
	cmp	DWORD PTR _host+20, 0
	jne	SHORT $LN14@Host_Main

; 887  : 		Con_Printf( "type 'map <mapname>' to run server... (TAB-autocomplete is working too)\n" );

	push	OFFSET ??_C@_0EJ@MHHLMHCN@type?5?8map?5?$DMmapname?$DO?8?5to?5run?5ser@
	call	_Con_Printf
	add	esp, 4
$LN14@Host_Main:

; 888  : 
; 889  : 	// main window message loop
; 890  : 	while( !host.crashed )

	cmp	DWORD PTR _host+34408, 0
	jne	SHORT $LN5@Host_Main

; 891  : 	{
; 892  : 		newtime = Sys_DoubleTime ();

	call	_Sys_DoubleTime
	fstp	QWORD PTR ?newtime@?1??Host_Main@@9@9

; 893  : 		COM_Frame( newtime - oldtime );

	movsd	xmm0, QWORD PTR ?newtime@?1??Host_Main@@9@9
	subsd	xmm0, QWORD PTR ?oldtime@?1??Host_Main@@9@9
	cvtsd2ss xmm0, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_COM_Frame
	add	esp, 4

; 894  : 		oldtime = newtime;

	movsd	xmm0, QWORD PTR ?newtime@?1??Host_Main@@9@9
	movsd	QWORD PTR ?oldtime@?1??Host_Main@@9@9, xmm0

; 895  : 	}

	jmp	SHORT $LN14@Host_Main
$LN5@Host_Main:

; 896  : 
; 897  : 	// never reached
; 898  : 	return 0;

	xor	eax, eax

; 899  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Main ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_FreeCommon
_TEXT	SEGMENT
_Host_FreeCommon PROC					; COMDAT

; 792  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 793  : 	Image_Shutdown();

	call	_Image_Shutdown

; 794  : 	Sound_Shutdown();

	call	_Sound_Shutdown

; 795  : 	Netchan_Shutdown();

	call	_Netchan_Shutdown

; 796  : 	HPAK_FlushHostQueue();

	call	_HPAK_FlushHostQueue

; 797  : 	FS_Shutdown();

	call	_FS_Shutdown

; 798  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_FreeCommon ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_InitCommon
_TEXT	SEGMENT
tv297 = -1908						; size = 8
tv296 = -1900						; size = 8
tv405 = -1892						; size = 8
tv399 = -1884						; size = 8
tv191 = -1884						; size = 4
tv190 = -1880						; size = 4
$T1 = -1876						; size = 4
_fps$ = -1616						; size = 8
_out$ = -1608						; size = 4
_in$ = -1604						; size = 4
_szRootPath$ = -1600					; size = 256
_developer$ = -1344					; size = 4
_szTemp$ = -1340					; size = 1024
_parse_cmdline$ = -316					; size = 4
_cmdline$ = -312					; size = 128
_progname$ = -184					; size = 128
_ticrate$ = -56						; size = 16
_dev_level$ = -40					; size = 4
_lpBuffer$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_hostname$ = 8						; size = 4
_bChangeGame$ = 12					; size = 4
_Host_InitCommon PROC					; COMDAT

; 608  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1908				; 00000774H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 609  : 	MEMORYSTATUS	lpBuffer;
; 610  : 	char		dev_level[4];
; 611  : 	char		ticrate[16];
; 612  : 	char		progname[128];
; 613  : 	char		cmdline[128];
; 614  : 	qboolean		parse_cmdline = false;

	mov	DWORD PTR _parse_cmdline$[ebp], 0

; 615  : 	char		szTemp[MAX_SYSPATH];
; 616  : 	int		developer = 0;

	mov	DWORD PTR _developer$[ebp], 0

; 617  : 	string		szRootPath;
; 618  : 	char		*in, *out;
; 619  : 	double		fps;
; 620  : 
; 621  : 	lpBuffer.dwLength = sizeof( MEMORYSTATUS );

	mov	DWORD PTR _lpBuffer$[ebp], 32		; 00000020H

; 622  : 	GlobalMemoryStatus( &lpBuffer );

	lea	eax, DWORD PTR _lpBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalMemoryStatus@4

; 623  : 
; 624  : 	if( !GetCurrentDirectory( sizeof( host.rootdir ), host.rootdir ))

	push	OFFSET _host+34424
	push	256					; 00000100H
	call	DWORD PTR __imp__GetCurrentDirectoryA@8
	test	eax, eax
	jne	SHORT $LN4@Host_InitC

; 625  : 		Sys_Error( "couldn't determine current directory\n" );

	push	OFFSET ??_C@_0CG@NMMMAEMO@couldn?8t?5determine?5current?5dire@
	call	_Sys_Error
	add	esp, 4
$LN4@Host_InitC:

; 626  : 
; 627  : 	if( host.rootdir[Q_strlen( host.rootdir ) - 1] == '/' )

	push	OFFSET _host+34424
	call	_Q_strlen
	add	esp, 4
	movsx	eax, BYTE PTR _host[eax+34423]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@Host_InitC

; 628  : 		host.rootdir[Q_strlen( host.rootdir ) - 1] = 0;

	push	OFFSET _host+34424
	call	_Q_strlen
	add	esp, 4
	mov	BYTE PTR _host[eax+34423], 0
$LN5@Host_InitC:

; 629  : 
; 630  : 	host.oldFilter = SetUnhandledExceptionFilter( Sys_Crash );

	push	OFFSET _Sys_Crash@4
	call	DWORD PTR __imp__SetUnhandledExceptionFilter@4
	mov	DWORD PTR _host+8, eax

; 631  : 	host.hInst = GetModuleHandle( NULL );

	push	0
	call	DWORD PTR __imp__GetModuleHandleA@4
	mov	DWORD PTR _host, eax

; 632  : 	host.change_game = bChangeGame;

	mov	eax, DWORD PTR _bChangeGame$[ebp]
	mov	DWORD PTR _host+34368, eax

; 633  : 	host.config_executed = false;

	mov	DWORD PTR _host+34396, 0

; 634  : 	host.status = HOST_INIT; // initialzation started

	mov	DWORD PTR _host+12, 0

; 635  : 
; 636  : 	Memory_Init(); // init memory subsystem

	call	_Memory_Init

; 637  : 
; 638  : 	progname[0] = cmdline[0] = '\0';

	mov	eax, 1
	imul	ecx, eax, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 128			; 00000080H
	jae	SHORT $LN29@Host_InitC
	jmp	SHORT $LN30@Host_InitC
$LN29@Host_InitC:
	call	___report_rangecheckfailure
$LN30@Host_InitC:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _cmdline$[ebp+edx], 0
	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _progname$[ebp+ecx], 0

; 639  : 	in = (char *)hostname;

	mov	eax, DWORD PTR _hostname$[ebp]
	mov	DWORD PTR _in$[ebp], eax

; 640  : 	out = progname;

	lea	eax, DWORD PTR _progname$[ebp]
	mov	DWORD PTR _out$[ebp], eax
$LN2@Host_InitC:

; 641  : 
; 642  : 	while( *in != '\0' )

	mov	eax, DWORD PTR _in$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN3@Host_InitC

; 643  : 	{
; 644  : 		if( parse_cmdline )

	cmp	DWORD PTR _parse_cmdline$[ebp], 0
	je	SHORT $LN6@Host_InitC

; 645  : 		{
; 646  : 			*out++ = *in++;

	mov	eax, DWORD PTR _out$[ebp]
	mov	ecx, DWORD PTR _in$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _out$[ebp]
	add	eax, 1
	mov	DWORD PTR _out$[ebp], eax
	mov	ecx, DWORD PTR _in$[ebp]
	add	ecx, 1
	mov	DWORD PTR _in$[ebp], ecx

; 647  : 		}

	jmp	$LN9@Host_InitC
$LN6@Host_InitC:

; 648  : 		else
; 649  : 		{
; 650  : 			// now we found cmdline
; 651  : 			if( *in == ' ' && ( in[1] == '+' || in[1] == '-' ))

	mov	eax, DWORD PTR _in$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN8@Host_InitC
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _in$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 43					; 0000002bH
	je	SHORT $LN10@Host_InitC
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _in$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN8@Host_InitC
$LN10@Host_InitC:

; 652  : 			{
; 653  : 				parse_cmdline = true;

	mov	DWORD PTR _parse_cmdline$[ebp], 1

; 654  : 				*out++ = '\0';

	mov	eax, DWORD PTR _out$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _out$[ebp]
	add	ecx, 1
	mov	DWORD PTR _out$[ebp], ecx

; 655  : 				out = cmdline;

	lea	eax, DWORD PTR _cmdline$[ebp]
	mov	DWORD PTR _out$[ebp], eax

; 656  : 			}

	jmp	SHORT $LN9@Host_InitC
$LN8@Host_InitC:

; 657  : 			else *out++ = *in++; 

	mov	eax, DWORD PTR _out$[ebp]
	mov	ecx, DWORD PTR _in$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _out$[ebp]
	add	eax, 1
	mov	DWORD PTR _out$[ebp], eax
	mov	ecx, DWORD PTR _in$[ebp]
	add	ecx, 1
	mov	DWORD PTR _in$[ebp], ecx
$LN9@Host_InitC:

; 658  : 		}
; 659  : 	}

	jmp	$LN2@Host_InitC
$LN3@Host_InitC:

; 660  : 	*out = '\0'; // write terminator

	mov	eax, DWORD PTR _out$[ebp]
	mov	BYTE PTR [eax], 0

; 661  : 
; 662  : 	Sys_ParseCommandLine( GetCommandLine( ), false );

	push	0
	call	DWORD PTR __imp__GetCommandLineA@0
	push	eax
	call	_Sys_ParseCommandLine
	add	esp, 8

; 663  : 	SetErrorMode( SEM_FAILCRITICALERRORS );	// no abort/retry/fail errors

	push	1
	call	DWORD PTR __imp__SetErrorMode@4

; 664  : 
; 665  : 	host.mempool = Mem_AllocPool( "Zone Engine" );

	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_InitCommon@@9@9
	add	eax, 57					; 00000039H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	push	OFFSET ??_C@_0M@KCNECFJF@Zone?5Engine@
	call	__Mem_AllocPool
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _host+236, eax

; 666  : 
; 667  : 	// get name of executable
; 668  : 	if( GetModuleFileName( NULL, szTemp, sizeof( szTemp )))

	push	1024					; 00000400H
	lea	eax, DWORD PTR _szTemp$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__GetModuleFileNameA@12
	test	eax, eax
	je	SHORT $LN11@Host_InitC

; 669  : 		COM_FileBase( szTemp, SI.exeName );

	push	OFFSET _SI
	lea	eax, DWORD PTR _szTemp$[ebp]
	push	eax
	call	_COM_FileBase
	add	esp, 8
$LN11@Host_InitC:

; 670  : 
; 671  : 	// HACKHACK: Quake console is always allowed
; 672  : 	if( Sys_CheckParm( "-console" ) || !Q_stricmp( SI.exeName, "quake" ))

	push	OFFSET ??_C@_08PPFMKLDH@?9console@
	call	_Sys_CheckParm
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN13@Host_InitC
	push	99999					; 0001869fH
	push	OFFSET ??_C@_05GAODMEMC@quake@
	push	OFFSET _SI
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN12@Host_InitC
$LN13@Host_InitC:

; 673  : 		host.allow_console = true;

	mov	DWORD PTR _host+34336, 1
$LN12@Host_InitC:

; 674  : 
; 675  : 	if( Sys_CheckParm( "-dev" ))

	push	OFFSET ??_C@_04IDLBFELI@?9dev@
	call	_Sys_CheckParm
	add	esp, 4
	test	eax, eax
	je	$LN16@Host_InitC

; 676  : 	{
; 677  : 		host.allow_console = true;

	mov	DWORD PTR _host+34336, 1

; 678  : 		developer = DEV_NORMAL;

	mov	DWORD PTR _developer$[ebp], 1

; 679  : 
; 680  : 		if( Sys_GetParmFromCmdLine( "-dev", dev_level ))

	push	4
	lea	eax, DWORD PTR _dev_level$[ebp]
	push	eax
	push	OFFSET ??_C@_04IDLBFELI@?9dev@
	call	__Sys_GetParmFromCmdLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN16@Host_InitC

; 681  : 		{
; 682  : 			if( Q_isdigit( dev_level ))

	lea	eax, DWORD PTR _dev_level$[ebp]
	push	eax
	call	_Q_isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@Host_InitC

; 683  : 				developer = bound( DEV_NONE, abs( Q_atoi( dev_level )), DEV_EXTENDED );

	lea	eax, DWORD PTR _dev_level$[ebp]
	push	eax
	call	_Q_atoi
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	test	eax, eax
	jl	SHORT $LN33@Host_InitC
	lea	ecx, DWORD PTR _dev_level$[ebp]
	push	ecx
	call	_Q_atoi
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 2
	jge	SHORT $LN31@Host_InitC
	lea	edx, DWORD PTR _dev_level$[ebp]
	push	edx
	call	_Q_atoi
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	mov	DWORD PTR tv190[ebp], eax
	jmp	SHORT $LN32@Host_InitC
$LN31@Host_InitC:
	mov	DWORD PTR tv190[ebp], 2
$LN32@Host_InitC:
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN34@Host_InitC
$LN33@Host_InitC:
	mov	DWORD PTR tv191[ebp], 0
$LN34@Host_InitC:
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR _developer$[ebp], ecx
$LN16@Host_InitC:

; 684  : 		}
; 685  : 	}
; 686  : 
; 687  : 	host.type = HOST_NORMAL; // predict state

	mov	DWORD PTR _host+164, 0

; 688  : 	host.con_showalways = true;

	mov	DWORD PTR _host+34356, 1

; 689  : 
; 690  : 	COM_ExtractFilePath( szTemp, szRootPath );

	lea	eax, DWORD PTR _szRootPath$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTemp$[ebp]
	push	ecx
	call	_COM_ExtractFilePath
	add	esp, 8

; 691  : 	if( Q_stricmp( host.rootdir, szRootPath ))

	push	99999					; 0001869fH
	lea	eax, DWORD PTR _szRootPath$[ebp]
	push	eax
	push	OFFSET _host+34424
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN17@Host_InitC

; 692  : 	{
; 693  : 		Q_strncpy( host.rootdir, szRootPath, sizeof( host.rootdir ));

	push	256					; 00000100H
	lea	eax, DWORD PTR _szRootPath$[ebp]
	push	eax
	push	OFFSET _host+34424
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 694  : 		SetCurrentDirectory( host.rootdir );

	push	OFFSET _host+34424
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
$LN17@Host_InitC:

; 695  : 	}
; 696  : 
; 697  : 	if( SI.exeName[0] == '#' ) host.type = HOST_DEDICATED; 

	mov	eax, 1
	imul	ecx, eax, 0
	movsx	edx, BYTE PTR _SI[ecx]
	cmp	edx, 35					; 00000023H
	jne	SHORT $LN18@Host_InitC
	mov	DWORD PTR _host+164, 1
$LN18@Host_InitC:

; 698  : 
; 699  : 	// determine host type
; 700  : 	if( progname[0] == '#' )

	mov	eax, 1
	imul	ecx, eax, 0
	movsx	edx, BYTE PTR _progname$[ebp+ecx]
	cmp	edx, 35					; 00000023H
	jne	SHORT $LN19@Host_InitC

; 701  : 	{
; 702  : 		Q_strncpy( SI.basedirName, progname + 1, sizeof( SI.basedirName ));

	push	256					; 00000100H
	lea	eax, DWORD PTR _progname$[ebp+1]
	push	eax
	push	OFFSET _SI+512
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 703  : 		host.type = HOST_DEDICATED;

	mov	DWORD PTR _host+164, 1

; 704  : 	}

	jmp	SHORT $LN20@Host_InitC
$LN19@Host_InitC:

; 705  : 	else Q_strncpy( SI.basedirName, progname, sizeof( SI.basedirName )); 

	push	256					; 00000100H
	lea	eax, DWORD PTR _progname$[ebp]
	push	eax
	push	OFFSET _SI+512
	call	_Q_strncpy
	add	esp, 12					; 0000000cH
$LN20@Host_InitC:

; 706  : 
; 707  : 	if( Sys_CheckParm( "-dedicated" ))

	push	OFFSET ??_C@_0L@NMOFPIPP@?9dedicated@
	call	_Sys_CheckParm
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@Host_InitC

; 708  : 		host.type = HOST_DEDICATED;

	mov	DWORD PTR _host+164, 1
$LN21@Host_InitC:

; 709  : 
; 710  : 	if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN22@Host_InitC

; 711  : 	{
; 712  : 		// check for duplicate dedicated server
; 713  : 		host.hMutex = CreateMutex( NULL, 0, "Xash Dedicated Server" );

	push	OFFSET ??_C@_0BG@PMBFHIMJ@Xash?5Dedicated?5Server@
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _host+4, eax

; 714  : 
; 715  : 		if( !host.hMutex )

	cmp	DWORD PTR _host+4, 0
	jne	SHORT $LN24@Host_InitC

; 716  : 		{
; 717  : 			MSGBOX( "Dedicated server already running" );

	push	65552					; 00010010H
	push	OFFSET ??_C@_0L@COIOLHLA@Xash?5Error@
	push	OFFSET ??_C@_0CB@IMCADLP@Dedicated?5server?5already?5runnin@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 718  : 			Sys_Quit();

	call	_Sys_Quit

; 719  : 			return;

	jmp	$LN1@Host_InitC
$LN24@Host_InitC:

; 720  : 		}
; 721  : 
; 722  : 		Sys_MergeCommandLine( cmdline );

	lea	eax, DWORD PTR _cmdline$[ebp]
	push	eax
	call	_Sys_MergeCommandLine
	add	esp, 4

; 723  : 
; 724  : 		CloseHandle( host.hMutex );

	mov	eax, DWORD PTR _host+4
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 725  : 		host.hMutex = CreateSemaphore( NULL, 0, 1, "Xash Dedicated Server" );

	push	OFFSET ??_C@_0BG@PMBFHIMJ@Xash?5Dedicated?5Server@
	push	1
	push	0
	push	0
	call	DWORD PTR __imp__CreateSemaphoreA@16
	mov	DWORD PTR _host+4, eax

; 726  : 		host.allow_console = true;

	mov	DWORD PTR _host+34336, 1

; 727  : 	}

	jmp	SHORT $LN25@Host_InitC
$LN22@Host_InitC:

; 728  : 	else
; 729  : 	{
; 730  : 		// don't show console as default
; 731  : 		if( developer <= DEV_NORMAL )

	cmp	DWORD PTR _developer$[ebp], 1
	jg	SHORT $LN25@Host_InitC

; 732  : 			host.con_showalways = false;

	mov	DWORD PTR _host+34356, 0
$LN25@Host_InitC:

; 733  : 	}
; 734  : 
; 735  : 	// member console allowing
; 736  : 	host.allow_console_init = host.allow_console;

	mov	eax, DWORD PTR _host+34336
	mov	DWORD PTR _host+34340, eax

; 737  : 
; 738  : 	timeBeginPeriod( 1 );

	push	1
	call	DWORD PTR __imp__timeBeginPeriod@4

; 739  : 
; 740  : 	Con_CreateConsole(); // system console used by dedicated server or show fatal errors

	call	_Con_CreateConsole

; 741  : 
; 742  : 	// NOTE: this message couldn't be passed into game console but it doesn't matter
; 743  : 	Con_Reportf( "Sys_LoadLibrary: Loading xash.dll - ok\n" );

	push	OFFSET ??_C@_0CI@HAFDIHMN@Sys_LoadLibrary?3?5Loading?5xash?4d@
	call	_Con_Reportf
	add	esp, 4

; 744  : 
; 745  : 	// get default screen res
; 746  : 	VID_InitDefaultResolution();

	call	_VID_InitDefaultResolution

; 747  : 
; 748  : 	// init host state machine
; 749  : 	COM_InitHostState();

	call	_COM_InitHostState

; 750  : 
; 751  : 	// startup cmds and cvars subsystem
; 752  : 	Cmd_Init();

	call	_Cmd_Init

; 753  : 	Cvar_Init();

	call	_Cvar_Init

; 754  : 
; 755  : 	// share developer level across all dlls
; 756  : 	Q_snprintf( dev_level, sizeof( dev_level ), "%i", developer );

	mov	eax, DWORD PTR _developer$[ebp]
	push	eax
	push	OFFSET ??_C@_02IKAHHCAI@?$CFi@
	push	4
	lea	ecx, DWORD PTR _dev_level$[ebp]
	push	ecx
	call	_Q_snprintf
	add	esp, 16					; 00000010H

; 757  : 	Cvar_DirectSet( &host_developer, dev_level );

	lea	eax, DWORD PTR _dev_level$[ebp]
	push	eax
	push	OFFSET _host_developer
	call	_Cvar_DirectSet
	add	esp, 8

; 758  : 	Cvar_RegisterVariable( &sys_ticrate );

	push	OFFSET _sys_ticrate
	call	_Cvar_RegisterVariable
	add	esp, 4

; 759  : 
; 760  : 	if( Sys_GetParmFromCmdLine( "-sys_ticrate", ticrate ))

	push	16					; 00000010H
	lea	eax, DWORD PTR _ticrate$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@JBFJIKLH@?9sys_ticrate@
	call	__Sys_GetParmFromCmdLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN26@Host_InitC

; 761  : 	{
; 762  : 		fps = bound( MIN_FPS, atof( ticrate ), MAX_FPS );

	lea	eax, DWORD PTR _ticrate$[ebp]
	push	eax
	call	DWORD PTR __imp__atof
	add	esp, 4
	fstp	QWORD PTR tv399[ebp]
	movsd	xmm0, QWORD PTR tv399[ebp]
	comisd	xmm0, QWORD PTR __real@4034000000000000
	jb	SHORT $LN37@Host_InitC
	lea	ecx, DWORD PTR _ticrate$[ebp]
	push	ecx
	call	DWORD PTR __imp__atof
	add	esp, 4
	fstp	QWORD PTR tv405[ebp]
	movsd	xmm0, QWORD PTR __real@4069000000000000
	comisd	xmm0, QWORD PTR tv405[ebp]
	jbe	SHORT $LN35@Host_InitC
	lea	edx, DWORD PTR _ticrate$[ebp]
	push	edx
	call	DWORD PTR __imp__atof
	add	esp, 4
	fstp	QWORD PTR tv296[ebp]
	jmp	SHORT $LN36@Host_InitC
$LN35@Host_InitC:
	movsd	xmm0, QWORD PTR __real@4069000000000000
	movsd	QWORD PTR tv296[ebp], xmm0
$LN36@Host_InitC:
	movsd	xmm0, QWORD PTR tv296[ebp]
	movsd	QWORD PTR tv297[ebp], xmm0
	jmp	SHORT $LN38@Host_InitC
$LN37@Host_InitC:
	movsd	xmm0, QWORD PTR __real@4034000000000000
	movsd	QWORD PTR tv297[ebp], xmm0
$LN38@Host_InitC:
	movsd	xmm0, QWORD PTR tv297[ebp]
	movsd	QWORD PTR _fps$[ebp], xmm0

; 763  : 		Cvar_SetValue( "sys_ticrate", fps );

	cvtsd2ss xmm0, QWORD PTR _fps$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0M@BBKKCBNB@sys_ticrate@
	call	_Cvar_SetValue
	add	esp, 8
$LN26@Host_InitC:

; 764  : 	}
; 765  : 
; 766  : 	Con_Init(); // early console running to catch all the messages

	call	_Con_Init

; 767  : 	Cmd_AddCommand( "exec", Host_Exec_f, "execute a script file" );

	push	OFFSET ??_C@_0BG@OOOECGHC@execute?5a?5script?5file@
	push	OFFSET _Host_Exec_f
	push	OFFSET ??_C@_04MGEIEJAD@exec@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 768  : 	Cmd_AddCommand( "memlist", Host_MemStats_f, "prints memory pool information" );

	push	OFFSET ??_C@_0BP@CPFOGGPF@prints?5memory?5pool?5information@
	push	OFFSET _Host_MemStats_f
	push	OFFSET ??_C@_07LLNPKCAE@memlist@
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 769  : 
; 770  : 	FS_Init();

	call	_FS_Init

; 771  : 	Image_Init();

	call	_Image_Init

; 772  : 	Sound_Init();

	call	_Sound_Init

; 773  : 
; 774  : 	FS_LoadGameInfo( NULL );

	push	0
	call	_FS_LoadGameInfo
	add	esp, 4

; 775  : 	Q_strncpy( host.gamefolder, GI->gamefolder, sizeof( host.gamefolder ));

	push	64					; 00000040H
	mov	eax, DWORD PTR _SI+768
	push	eax
	push	OFFSET _host+34680
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 776  : 
; 777  : 	if( GI->secure )

	mov	eax, DWORD PTR _SI+768
	cmp	DWORD PTR [eax+1292], 0
	je	SHORT $LN27@Host_InitC

; 778  : 	{
; 779  : 		// clear all developer levels when game is protected
; 780  : 		Cvar_DirectSet( &host_developer, "0" );

	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET _host_developer
	call	_Cvar_DirectSet
	add	esp, 8

; 781  : 		host.allow_console_init = false;

	mov	DWORD PTR _host+34340, 0

; 782  : 		host.con_showalways = false;

	mov	DWORD PTR _host+34356, 0

; 783  : 		host.allow_console = false;

	mov	DWORD PTR _host+34336, 0
$LN27@Host_InitC:

; 784  : 	}
; 785  : 	HPAK_Init();

	call	_HPAK_Init

; 786  : 
; 787  : 	IN_Init();

	call	_IN_Init

; 788  : 	Key_Init();

	call	_Key_Init
$LN1@Host_InitC:

; 789  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_InitCommon ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Crash_f
_TEXT	SEGMENT
_Host_Crash_f PROC					; COMDAT

; 598  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 599  : 	*(int *)0 = 0xffffffff;

	mov	DWORD PTR ds:0, -1

; 600  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Crash_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Sys_Error_f
_TEXT	SEGMENT
_error$ = -4						; size = 4
_Sys_Error_f PROC					; COMDAT

; 585  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 586  : 	const char *error = Cmd_Argv( 1 );

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	DWORD PTR _error$[ebp], eax

; 587  : 
; 588  : 	if( !*error ) error = "Invoked sys error";

	mov	eax, DWORD PTR _error$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@Sys_Error_
	mov	DWORD PTR _error$[ebp], OFFSET ??_C@_0BC@OHJIJIMP@Invoked?5sys?5error@
$LN2@Sys_Error_:

; 589  : 	Sys_Error( "%s\n", error );

	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
	call	_Sys_Error
	add	esp, 8

; 590  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Sys_Error_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Error_f
_TEXT	SEGMENT
_error$ = -4						; size = 4
_Host_Error_f PROC					; COMDAT

; 577  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 578  : 	const char *error = Cmd_Argv( 1 );

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	DWORD PTR _error$[ebp], eax

; 579  : 
; 580  : 	if( !*error ) error = "Invoked host error";

	mov	eax, DWORD PTR _error$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@Host_Error
	mov	DWORD PTR _error$[ebp], OFFSET ??_C@_0BD@NOFDMEEN@Invoked?5host?5error@
$LN2@Host_Error:

; 581  : 	Host_Error( "%s\n", error );

	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
	call	_Host_Error
	add	esp, 8

; 582  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Error_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_FilterTime
_TEXT	SEGMENT
tv146 = -88						; size = 8
tv142 = -88						; size = 8
tv89 = -88						; size = 8
tv71 = -88						; size = 8
tv145 = -80						; size = 8
tv141 = -80						; size = 8
tv88 = -80						; size = 8
tv70 = -80						; size = 8
_fps$ = -8						; size = 8
_time$ = 8						; size = 4
_Host_FilterTime PROC					; COMDAT

; 440  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 441  : 	static double	oldtime;
; 442  : 	double		fps;
; 443  : 
; 444  : 	host.realtime += time;

	cvtss2sd xmm0, DWORD PTR _time$[ebp]
	addsd	xmm0, QWORD PTR _host+1440
	movsd	QWORD PTR _host+1440, xmm0

; 445  : 	fps = Host_CalcFPS( );

	call	_Host_CalcFPS
	fstp	QWORD PTR _fps$[ebp]

; 446  : 
; 447  : 	// clamp the fps in multiplayer games
; 448  : 	if( fps != 0.0 )

	movsd	xmm0, QWORD PTR _fps$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN6@Host_Filte

; 449  : 	{
; 450  : 		// limit fps to withing tolerable range
; 451  : 		fps = bound( MIN_FPS, fps, MAX_FPS );

	movsd	xmm0, QWORD PTR _fps$[ebp]
	comisd	xmm0, QWORD PTR __real@4034000000000000
	jb	SHORT $LN12@Host_Filte
	movsd	xmm0, QWORD PTR __real@4069000000000000
	comisd	xmm0, QWORD PTR _fps$[ebp]
	jbe	SHORT $LN10@Host_Filte
	movsd	xmm0, QWORD PTR _fps$[ebp]
	movsd	QWORD PTR tv70[ebp], xmm0
	jmp	SHORT $LN11@Host_Filte
$LN10@Host_Filte:
	movsd	xmm0, QWORD PTR __real@4069000000000000
	movsd	QWORD PTR tv70[ebp], xmm0
$LN11@Host_Filte:
	movsd	xmm0, QWORD PTR tv70[ebp]
	movsd	QWORD PTR tv71[ebp], xmm0
	jmp	SHORT $LN13@Host_Filte
$LN12@Host_Filte:
	movsd	xmm0, QWORD PTR __real@4034000000000000
	movsd	QWORD PTR tv71[ebp], xmm0
$LN13@Host_Filte:
	movsd	xmm0, QWORD PTR tv71[ebp]
	movsd	QWORD PTR _fps$[ebp], xmm0

; 452  : 
; 453  : 		if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN3@Host_Filte

; 454  : 		{
; 455  : 			if(( host.realtime - oldtime ) < ( 1.0 / ( fps + 1.0 )))

	movsd	xmm0, QWORD PTR _host+1440
	subsd	xmm0, QWORD PTR ?oldtime@?1??Host_FilterTime@@9@9
	movsd	xmm1, QWORD PTR _fps$[ebp]
	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	divsd	xmm2, xmm1
	comisd	xmm2, xmm0
	jbe	SHORT $LN5@Host_Filte

; 456  : 				return false;

	xor	eax, eax
	jmp	$LN1@Host_Filte
$LN5@Host_Filte:

; 457  : 		}

	jmp	SHORT $LN6@Host_Filte
$LN3@Host_Filte:

; 458  : 		else
; 459  : 		{
; 460  : 			if(( host.realtime - oldtime ) < ( 1.0 / fps ))

	movsd	xmm0, QWORD PTR _host+1440
	subsd	xmm0, QWORD PTR ?oldtime@?1??Host_FilterTime@@9@9
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, QWORD PTR _fps$[ebp]
	comisd	xmm1, xmm0
	jbe	SHORT $LN6@Host_Filte

; 461  : 				return false;		

	xor	eax, eax
	jmp	$LN1@Host_Filte
$LN6@Host_Filte:

; 462  : 		}
; 463  : 	}
; 464  : 
; 465  : 	host.frametime = host.realtime - oldtime;

	movsd	xmm0, QWORD PTR _host+1440
	subsd	xmm0, QWORD PTR ?oldtime@?1??Host_FilterTime@@9@9
	movsd	QWORD PTR _host+1448, xmm0

; 466  : 	host.realframetime = bound( MIN_FRAMETIME, host.frametime, MAX_FRAMETIME );

	movsd	xmm0, QWORD PTR _host+1448
	comisd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	jb	SHORT $LN16@Host_Filte
	movsd	xmm0, QWORD PTR __real@3fd0000000000000
	comisd	xmm0, QWORD PTR _host+1448
	jbe	SHORT $LN14@Host_Filte
	movsd	xmm0, QWORD PTR _host+1448
	movsd	QWORD PTR tv88[ebp], xmm0
	jmp	SHORT $LN15@Host_Filte
$LN14@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3fd0000000000000
	movsd	QWORD PTR tv88[ebp], xmm0
$LN15@Host_Filte:
	movsd	xmm0, QWORD PTR tv88[ebp]
	movsd	QWORD PTR tv89[ebp], xmm0
	jmp	SHORT $LN17@Host_Filte
$LN16@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	movsd	QWORD PTR tv89[ebp], xmm0
$LN17@Host_Filte:
	movsd	xmm0, QWORD PTR tv89[ebp]
	movsd	QWORD PTR _host+1456, xmm0

; 467  : 	oldtime = host.realtime;

	movsd	xmm0, QWORD PTR _host+1440
	movsd	QWORD PTR ?oldtime@?1??Host_FilterTime@@9@9, xmm0

; 468  : 
; 469  : 	// NOTE: allow only in singleplayer while demos are not active
; 470  : 	if( host_framerate->value > 0.0f && Host_IsLocalGame() && !CL_IsPlaybackDemo() && !CL_IsRecordDemo( ))

	mov	eax, DWORD PTR _host_framerate
	movss	xmm0, DWORD PTR [eax+12]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN7@Host_Filte
	call	_Host_IsLocalGame
	test	eax, eax
	je	$LN7@Host_Filte
	call	_CL_IsPlaybackDemo
	test	eax, eax
	jne	$LN7@Host_Filte
	call	_CL_IsRecordDemo
	test	eax, eax
	jne	$LN7@Host_Filte

; 471  : 		host.frametime = bound( MIN_FRAMETIME, host_framerate->value, MAX_FRAMETIME );

	mov	eax, DWORD PTR _host_framerate
	movss	xmm0, DWORD PTR [eax+12]
	cvtss2sd xmm0, xmm0
	comisd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	jb	SHORT $LN20@Host_Filte
	mov	ecx, DWORD PTR _host_framerate
	movss	xmm0, DWORD PTR [ecx+12]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fd0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN18@Host_Filte
	mov	edx, DWORD PTR _host_framerate
	movss	xmm0, DWORD PTR [edx+12]
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv141[ebp], xmm0
	jmp	SHORT $LN19@Host_Filte
$LN18@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3fd0000000000000
	movsd	QWORD PTR tv141[ebp], xmm0
$LN19@Host_Filte:
	movsd	xmm0, QWORD PTR tv141[ebp]
	movsd	QWORD PTR tv142[ebp], xmm0
	jmp	SHORT $LN21@Host_Filte
$LN20@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	movsd	QWORD PTR tv142[ebp], xmm0
$LN21@Host_Filte:
	movsd	xmm0, QWORD PTR tv142[ebp]
	movsd	QWORD PTR _host+1448, xmm0
	jmp	SHORT $LN8@Host_Filte
$LN7@Host_Filte:

; 472  : 	else host.frametime = bound( MIN_FRAMETIME, host.frametime, MAX_FRAMETIME );

	movsd	xmm0, QWORD PTR _host+1448
	comisd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	jb	SHORT $LN24@Host_Filte
	movsd	xmm0, QWORD PTR __real@3fd0000000000000
	comisd	xmm0, QWORD PTR _host+1448
	jbe	SHORT $LN22@Host_Filte
	movsd	xmm0, QWORD PTR _host+1448
	movsd	QWORD PTR tv145[ebp], xmm0
	jmp	SHORT $LN23@Host_Filte
$LN22@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3fd0000000000000
	movsd	QWORD PTR tv145[ebp], xmm0
$LN23@Host_Filte:
	movsd	xmm0, QWORD PTR tv145[ebp]
	movsd	QWORD PTR tv146[ebp], xmm0
	jmp	SHORT $LN25@Host_Filte
$LN24@Host_Filte:
	movsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	movsd	QWORD PTR tv146[ebp], xmm0
$LN25@Host_Filte:
	movsd	xmm0, QWORD PTR tv146[ebp]
	movsd	QWORD PTR _host+1448, xmm0
$LN8@Host_Filte:

; 473  : 
; 474  : 	return true;

	mov	eax, 1
$LN1@Host_Filte:

; 475  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_FilterTime ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_CalcFPS
_TEXT	SEGMENT
tv80 = -88						; size = 8
tv79 = -80						; size = 8
tv89 = -76						; size = 4
_fps$ = -8						; size = 8
_Host_CalcFPS PROC					; COMDAT

; 395  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 396  : 	double	fps = 0.0;

	xorps	xmm0, xmm0
	movsd	QWORD PTR _fps$[ebp], xmm0

; 397  : 
; 398  : 	// NOTE: we should play demos with same fps as it was recorded
; 399  : 	if( CL_IsPlaybackDemo() || CL_IsRecordDemo( ))

	call	_CL_IsPlaybackDemo
	test	eax, eax
	jne	SHORT $LN4@Host_CalcF
	call	_CL_IsRecordDemo
	test	eax, eax
	je	SHORT $LN2@Host_CalcF
$LN4@Host_CalcF:

; 400  : 	{
; 401  : 		fps = CL_GetDemoFramerate();

	call	_CL_GetDemoFramerate
	fstp	QWORD PTR _fps$[ebp]

; 402  : 	}

	jmp	$LN8@Host_CalcF
$LN2@Host_CalcF:

; 403  : 	else if( Host_IsLocalGame( ))

	call	_Host_IsLocalGame
	test	eax, eax
	je	SHORT $LN5@Host_CalcF

; 404  : 	{
; 405  : 		fps = host_maxfps->value;

	mov	eax, DWORD PTR _host_maxfps
	cvtss2sd xmm0, DWORD PTR [eax+12]
	movsd	QWORD PTR _fps$[ebp], xmm0

; 406  : 	}

	jmp	$LN8@Host_CalcF
$LN5@Host_CalcF:

; 407  : 	else if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN7@Host_CalcF

; 408  : 	{
; 409  : 		fps = sys_ticrate.value;

	cvtss2sd xmm0, DWORD PTR _sys_ticrate+12
	movsd	QWORD PTR _fps$[ebp], xmm0

; 410  : 	}

	jmp	SHORT $LN8@Host_CalcF
$LN7@Host_CalcF:

; 411  : 	else
; 412  : 	{
; 413  : 		fps = host_maxfps->value;

	mov	eax, DWORD PTR _host_maxfps
	cvtss2sd xmm0, DWORD PTR [eax+12]
	movsd	QWORD PTR _fps$[ebp], xmm0

; 414  : 		fps = bound( MIN_FPS, fps, MAX_FPS );

	movsd	xmm0, QWORD PTR _fps$[ebp]
	comisd	xmm0, QWORD PTR __real@4034000000000000
	jb	SHORT $LN16@Host_CalcF
	movsd	xmm0, QWORD PTR __real@4069000000000000
	comisd	xmm0, QWORD PTR _fps$[ebp]
	jbe	SHORT $LN14@Host_CalcF
	movsd	xmm0, QWORD PTR _fps$[ebp]
	movsd	QWORD PTR tv79[ebp], xmm0
	jmp	SHORT $LN15@Host_CalcF
$LN14@Host_CalcF:
	movsd	xmm0, QWORD PTR __real@4069000000000000
	movsd	QWORD PTR tv79[ebp], xmm0
$LN15@Host_CalcF:
	movsd	xmm0, QWORD PTR tv79[ebp]
	movsd	QWORD PTR tv80[ebp], xmm0
	jmp	SHORT $LN17@Host_CalcF
$LN16@Host_CalcF:
	movsd	xmm0, QWORD PTR __real@4034000000000000
	movsd	QWORD PTR tv80[ebp], xmm0
$LN17@Host_CalcF:
	movsd	xmm0, QWORD PTR tv80[ebp]
	movsd	QWORD PTR _fps$[ebp], xmm0
$LN8@Host_CalcF:

; 415  : 	}
; 416  : 
; 417  : 	// probably left part of this condition is redundant :-)
; 418  : 	if( host.type != HOST_DEDICATED && Host_IsLocalGame( ) && !CL_IsTimeDemo( ))

	cmp	DWORD PTR _host+164, 1
	je	SHORT $LN12@Host_CalcF
	call	_Host_IsLocalGame
	test	eax, eax
	je	SHORT $LN12@Host_CalcF
	call	_CL_IsTimeDemo
	test	eax, eax
	jne	SHORT $LN12@Host_CalcF

; 419  : 	{
; 420  : 		// ajdust fps for vertical synchronization
; 421  : 		if( CVAR_TO_BOOL( gl_vsync ))

	cmp	DWORD PTR _gl_vsync, 0
	je	SHORT $LN18@Host_CalcF
	mov	eax, DWORD PTR _gl_vsync
	movss	xmm0, DWORD PTR [eax+12]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN18@Host_CalcF
	mov	DWORD PTR tv89[ebp], 1
	jmp	SHORT $LN19@Host_CalcF
$LN18@Host_CalcF:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Host_CalcF:
	cmp	DWORD PTR tv89[ebp], 0
	je	SHORT $LN12@Host_CalcF

; 422  : 		{
; 423  : 			if( vid_displayfrequency->value != 0.0f )

	mov	eax, DWORD PTR _vid_displayfrequency
	movss	xmm0, DWORD PTR [eax+12]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN11@Host_CalcF

; 424  : 				fps = vid_displayfrequency->value;

	mov	eax, DWORD PTR _vid_displayfrequency
	cvtss2sd xmm0, DWORD PTR [eax+12]
	movsd	QWORD PTR _fps$[ebp], xmm0
	jmp	SHORT $LN12@Host_CalcF
$LN11@Host_CalcF:

; 425  : 			else fps = 60.0; // default

	movsd	xmm0, QWORD PTR __real@404e000000000000
	movsd	QWORD PTR _fps$[ebp], xmm0
$LN12@Host_CalcF:

; 426  : 		}
; 427  : 	}
; 428  : 
; 429  : 	return fps;

	fld	QWORD PTR _fps$[ebp]

; 430  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_CalcFPS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_GetCommands
_TEXT	SEGMENT
_cmd$ = -4						; size = 4
_Host_GetCommands PROC					; COMDAT

; 376  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 377  : 	char	*cmd;
; 378  : 
; 379  : 	if( host.type != HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	je	SHORT $LN2@Host_GetCo

; 380  : 		return;

	jmp	SHORT $LN1@Host_GetCo
$LN2@Host_GetCo:

; 381  : 
; 382  : 	cmd = Con_Input();

	call	_Con_Input
	mov	DWORD PTR _cmd$[ebp], eax

; 383  : 	if( cmd ) Cbuf_AddText( cmd );

	cmp	DWORD PTR _cmd$[ebp], 0
	je	SHORT $LN3@Host_GetCo
	mov	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	_Cbuf_AddText
	add	esp, 4
$LN3@Host_GetCo:

; 384  : 	Cbuf_Execute ();

	call	_Cbuf_Execute
$LN1@Host_GetCo:

; 385  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_GetCommands ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_RegisterDecal
_TEXT	SEGMENT
_i$ = -72						; size = 4
_shortname$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_count$ = 12						; size = 4
_Host_RegisterDecal PROC				; COMDAT

; 311  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 312  : 	char	shortname[MAX_QPATH];
; 313  : 	int	i;
; 314  : 
; 315  : 	if( !COM_CheckString( name ))

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_COM_CheckString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@Host_Regis

; 316  : 		return 0;

	xor	eax, eax
	jmp	$LN1@Host_Regis
$LN5@Host_Regis:

; 317  : 
; 318  : 	COM_FileBase( name, shortname );

	lea	eax, DWORD PTR _shortname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_COM_FileBase
	add	esp, 8

; 319  : 
; 320  : 	for( i = 1; i < MAX_DECALS && host.draw_decals[i][0]; i++ )

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@Host_Regis
$LN2@Host_Regis:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Host_Regis:
	cmp	DWORD PTR _i$[ebp], 512			; 00000200H
	jge	SHORT $LN3@Host_Regis
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	ecx, 1
	imul	edx, ecx, 0
	movsx	eax, BYTE PTR _host[eax+edx+1468]
	test	eax, eax
	je	SHORT $LN3@Host_Regis

; 321  : 	{
; 322  : 		if( !Q_stricmp( host.draw_decals[i], shortname ))

	push	99999					; 0001869fH
	lea	eax, DWORD PTR _shortname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	add	ecx, OFFSET _host+1468
	push	ecx
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@Host_Regis

; 323  : 			return true;

	mov	eax, 1
	jmp	SHORT $LN1@Host_Regis
$LN6@Host_Regis:

; 324  : 	}

	jmp	SHORT $LN2@Host_Regis
$LN3@Host_Regis:

; 325  : 
; 326  : 	if( i == MAX_DECALS )

	cmp	DWORD PTR _i$[ebp], 512			; 00000200H
	jne	SHORT $LN7@Host_Regis

; 327  : 	{
; 328  : 		Con_DPrintf( S_ERROR "MAX_DECALS limit exceeded (%d)\n", MAX_DECALS );

	push	512					; 00000200H
	push	OFFSET ??_C@_0CL@MBNNLGBE@?$FO1Error?3?$FO7?5MAX_DECALS?5limit?5exc@
	call	_Con_DPrintf
	add	esp, 8

; 329  : 		return false;

	xor	eax, eax
	jmp	SHORT $LN1@Host_Regis
$LN7@Host_Regis:

; 330  : 	}
; 331  : 
; 332  : 	// register new decal
; 333  : 	Q_strncpy( host.draw_decals[i], shortname, sizeof( host.draw_decals[i] ));

	push	64					; 00000040H
	lea	eax, DWORD PTR _shortname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	add	ecx, OFFSET _host+1468
	push	ecx
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 334  : 	*count += 1;

	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [edx], ecx

; 335  : 
; 336  : 	return true;

	mov	eax, 1
$LN1@Host_Regis:

; 337  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_RegisterDecal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Minimize_f
_TEXT	SEGMENT
_Host_Minimize_f PROC					; COMDAT

; 274  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 275  : 	if( host.hWnd ) ShowWindow( host.hWnd, SW_MINIMIZE );

	cmp	DWORD PTR _host+34332, 0
	je	SHORT $LN1@Host_Minim
	push	6
	mov	eax, DWORD PTR _host+34332
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN1@Host_Minim:

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Minimize_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_MemStats_f
_TEXT	SEGMENT
tv65 = -68						; size = 4
_Host_MemStats_f PROC					; COMDAT

; 256  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 257  : 	switch( Cmd_Argc( ))

	call	_Cmd_Argc
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN4@Host_MemSt
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN5@Host_MemSt
	jmp	SHORT $LN6@Host_MemSt
$LN4@Host_MemSt:

; 258  : 	{
; 259  : 	case 1:
; 260  : 		Mem_PrintList( 1<<30 );

	push	1073741824				; 40000000H
	call	_Mem_PrintList
	add	esp, 4

; 261  : 		Mem_PrintStats();

	call	_Mem_PrintStats

; 262  : 		break;

	jmp	SHORT $LN1@Host_MemSt
$LN5@Host_MemSt:

; 263  : 	case 2:
; 264  : 		Mem_PrintList( Q_atoi( Cmd_Argv( 1 )) * 1024 );

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_Q_atoi
	add	esp, 4
	shl	eax, 10					; 0000000aH
	push	eax
	call	_Mem_PrintList
	add	esp, 4

; 265  : 		Mem_PrintStats();

	call	_Mem_PrintStats

; 266  : 		break;

	jmp	SHORT $LN1@Host_MemSt
$LN6@Host_MemSt:

; 267  : 	default:
; 268  : 		Con_Printf( S_USAGE "memlist <all>\n" );

	push	OFFSET ??_C@_0BG@LNGAJONC@Usage?3?5memlist?5?$DMall?$DO?6@
	call	_Con_Printf
	add	esp, 4
$LN1@Host_MemSt:

; 269  : 		break;
; 270  : 	}
; 271  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_MemStats_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Exec_f
_TEXT	SEGMENT
_len$ = -272						; size = 4
_txt$ = -268						; size = 4
_f$ = -264						; size = 4
_cfgpath$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_Host_Exec_f PROC					; COMDAT

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 208  : 	string	cfgpath;
; 209  : 	char	*f, *txt; 
; 210  : 	size_t	len;
; 211  : 
; 212  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@Host_Exec_

; 213  : 	{
; 214  : 		Con_Printf( S_USAGE "exec <filename>\n" );

	push	OFFSET ??_C@_0BI@MNPGDCBB@Usage?3?5exec?5?$DMfilename?$DO?6@
	call	_Con_Printf
	add	esp, 4

; 215  : 		return;

	jmp	$LN1@Host_Exec_
$LN2@Host_Exec_:

; 216  : 	}
; 217  : 
; 218  : 	if( !Q_stricmp( "game.cfg", Cmd_Argv( 1 )))

	push	99999					; 0001869fH
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_08LOGJJHKP@game?4cfg@
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@Host_Exec_

; 219  : 	{
; 220  : 		// don't execute game.cfg in singleplayer
; 221  : 		if( SV_GetMaxClients() == 1 )

	call	_SV_GetMaxClients
	cmp	eax, 1
	jne	SHORT $LN3@Host_Exec_

; 222  : 			return;

	jmp	$LN1@Host_Exec_
$LN3@Host_Exec_:

; 223  : 	}
; 224  : 
; 225  : 	Q_strncpy( cfgpath, Cmd_Argv( 1 ), sizeof( cfgpath )); 

	push	256					; 00000100H
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _cfgpath$[ebp]
	push	eax
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 226  : 	COM_DefaultExtension( cfgpath, ".cfg" ); // append as default

	push	OFFSET ??_C@_04IFJILJI@?4cfg@
	lea	eax, DWORD PTR _cfgpath$[ebp]
	push	eax
	call	_COM_DefaultExtension
	add	esp, 8

; 227  : 
; 228  : 	f = FS_LoadFile( cfgpath, &len, false );

	push	0
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cfgpath$[ebp]
	push	ecx
	call	_FS_LoadFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _f$[ebp], eax

; 229  : 	if( !f )

	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN5@Host_Exec_

; 230  : 	{
; 231  : 		Con_Reportf( "couldn't exec %s\n", Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BC@EKILBLKK@couldn?8t?5exec?5?$CFs?6@
	call	_Con_Reportf
	add	esp, 8

; 232  : 		return;

	jmp	$LN1@Host_Exec_
$LN5@Host_Exec_:

; 233  : 	}
; 234  : 
; 235  : 	if( !Q_stricmp( "config.cfg", Cmd_Argv( 1 )))

	push	99999					; 0001869fH
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0L@MFNMKHHD@config?4cfg@
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@Host_Exec_

; 236  : 		host.config_executed = true;

	mov	DWORD PTR _host+34396, 1
$LN6@Host_Exec_:

; 237  : 
; 238  : 	// adds \n\0 at end of the file
; 239  : 	txt = Z_Calloc( len + 2 );

	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_Exec_f@@9@9
	add	eax, 32					; 00000020H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	push	1
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _host+236
	push	edx
	call	__Mem_Alloc
	add	esp, 20					; 00000014H
	mov	DWORD PTR _txt$[ebp], eax

; 240  : 	memcpy( txt, f, len );

	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 241  : 	Q_strncat( txt, "\n", len + 2 );

	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	call	_Q_strncat
	add	esp, 12					; 0000000cH

; 242  : 	Mem_Free( f );

	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_Exec_f@@9@9
	add	eax, 35					; 00000023H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	__Mem_Free
	add	esp, 12					; 0000000cH

; 243  : 
; 244  : 	if( !host.apply_game_config )

	cmp	DWORD PTR _host+34388, 0
	jne	SHORT $LN7@Host_Exec_

; 245  : 		Con_Printf( "execing %s\n", Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0M@NJLDBOCK@execing?5?$CFs?6@
	call	_Con_Printf
	add	esp, 8
$LN7@Host_Exec_:

; 246  : 	Cbuf_InsertText( txt );

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	call	_Cbuf_InsertText
	add	esp, 4

; 247  : 	Mem_Free( txt );

	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_Exec_f@@9@9
	add	eax, 40					; 00000028H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	call	__Mem_Free
	add	esp, 12					; 0000000cH
$LN1@Host_Exec_:

; 248  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Exec_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_ChangeGame_f
_TEXT	SEGMENT
tv133 = -80						; size = 4
_arg2$1 = -12						; size = 4
_arg1$2 = -8						; size = 4
_i$ = -4						; size = 4
_Host_ChangeGame_f PROC					; COMDAT

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 169  : 	int	i;
; 170  : 
; 171  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN5@Host_Chang

; 172  : 	{
; 173  : 		Con_Printf( S_USAGE "game <directory>\n" );

	push	OFFSET ??_C@_0BJ@HDFOENPJ@Usage?3?5game?5?$DMdirectory?$DO?6@
	call	_Con_Printf
	add	esp, 4

; 174  : 		return;

	jmp	$LN1@Host_Chang
$LN5@Host_Chang:

; 175  : 	}
; 176  : 
; 177  : 	// validate gamedir
; 178  : 	for( i = 0; i < SI.numgames; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Host_Chang
$LN2@Host_Chang:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Host_Chang:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _SI+2820
	jge	SHORT $LN3@Host_Chang

; 179  : 	{
; 180  : 		if( !Q_stricmp( SI.games[i]->gamefolder, Cmd_Argv( 1 )))

	push	99999					; 0001869fH
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _SI[eax*4+772]
	push	ecx
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@Host_Chang

; 181  : 			break;

	jmp	SHORT $LN3@Host_Chang
$LN6@Host_Chang:

; 182  : 	}

	jmp	SHORT $LN2@Host_Chang
$LN3@Host_Chang:

; 183  : 
; 184  : 	if( i == SI.numgames )

	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _SI+2820
	jne	SHORT $LN7@Host_Chang

; 185  : 	{
; 186  : 		Con_Printf( "%s not exist\n", Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0O@HELLJHNF@?$CFs?5not?5exist?6@
	call	_Con_Printf
	add	esp, 8

; 187  : 	}

	jmp	$LN1@Host_Chang
$LN7@Host_Chang:

; 188  : 	else if( !Q_stricmp( GI->gamefolder, Cmd_Argv( 1 )))

	push	99999					; 0001869fH
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _SI+768
	push	eax
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@Host_Chang

; 189  : 	{
; 190  : 		Con_Printf( "%s already active\n", Cmd_Argv( 1 ));	

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BD@DLPFADMB@?$CFs?5already?5active?6@
	call	_Con_Printf
	add	esp, 8

; 191  : 	}

	jmp	SHORT $LN1@Host_Chang
$LN9@Host_Chang:

; 192  : 	else
; 193  : 	{
; 194  : 		const char *arg1 = va( "%s%s", (host.type == HOST_NORMAL) ? "" : "#", Cmd_Argv( 1 ));

	cmp	DWORD PTR _host+164, 0
	jne	SHORT $LN12@Host_Chang
	mov	DWORD PTR tv133[ebp], OFFSET ??_C@_00CNPNBAHC@@
	jmp	SHORT $LN13@Host_Chang
$LN12@Host_Chang:
	mov	DWORD PTR tv133[ebp], OFFSET ??_C@_01IPJKGB@?$CD@
$LN13@Host_Chang:
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	push	OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs@
	call	_va
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _arg1$2[ebp], eax

; 195  : 		const char *arg2 = va( "change game to '%s'", SI.games[i]->title );

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _SI[eax*4+772]
	add	ecx, 384				; 00000180H
	push	ecx
	push	OFFSET ??_C@_0BE@IEKIHNJK@change?5game?5to?5?8?$CFs?8@
	call	_va
	add	esp, 8
	mov	DWORD PTR _arg2$1[ebp], eax

; 196  : 
; 197  : 		Host_NewInstance( arg1, arg2 );

	mov	eax, DWORD PTR _arg2$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _arg1$2[ebp]
	push	ecx
	call	_Host_NewInstance
	add	esp, 8
$LN1@Host_Chang:

; 198  : 	}
; 199  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_ChangeGame_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_CheckSleep
_TEXT	SEGMENT
_Host_CheckSleep PROC					; COMDAT

; 129  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 130  : 	if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN2@Host_Check

; 131  : 	{
; 132  : 		// let the dedicated server some sleep
; 133  : 		Sys_Sleep( 1 );

	push	1
	call	_Sys_Sleep
	add	esp, 4

; 134  : 	}

	jmp	SHORT $LN1@Host_Check
$LN2@Host_Check:

; 135  : 	else
; 136  : 	{
; 137  : 		if( host.status == HOST_NOFOCUS )

	cmp	DWORD PTR _host+12, 5
	jne	SHORT $LN4@Host_Check

; 138  : 		{
; 139  : 			if( SV_Active() && CL_IsInGame( ))

	call	_SV_Active
	test	eax, eax
	je	SHORT $LN6@Host_Check
	call	_CL_IsInGame
	test	eax, eax
	je	SHORT $LN6@Host_Check

; 140  : 				Sys_Sleep( 1 ); // listenserver

	push	1
	call	_Sys_Sleep
	add	esp, 4
	jmp	SHORT $LN7@Host_Check
$LN6@Host_Check:

; 141  : 			else Sys_Sleep( 20 ); // sleep 20 ms otherwise

	push	20					; 00000014H
	call	_Sys_Sleep
	add	esp, 4
$LN7@Host_Check:

; 142  : 		}

	jmp	SHORT $LN1@Host_Check
$LN4@Host_Check:

; 143  : 		else if( host.status == HOST_SLEEP )

	cmp	DWORD PTR _host+12, 4
	jne	SHORT $LN1@Host_Check

; 144  : 		{
; 145  : 			// completely sleep in minimized state
; 146  : 			Sys_Sleep( 20 );

	push	20					; 00000014H
	call	_Sys_Sleep
	add	esp, 4
$LN1@Host_Check:

; 147  : 		}
; 148  : 	}
; 149  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_CheckSleep ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_InitDecals
_TEXT	SEGMENT
_t$ = -12						; size = 4
_num_decals$ = -8					; size = 4
_i$ = -4						; size = 4
_Host_InitDecals PROC					; COMDAT

; 345  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 346  : 	int	i, num_decals = 0;

	mov	DWORD PTR _num_decals$[ebp], 0

; 347  : 	search_t	*t;
; 348  : 
; 349  : 	// NOTE: only once resource without which engine can't continue work
; 350  : 	if( !FS_FileExists( "gfx/conchars", false ))

	push	0
	push	OFFSET ??_C@_0N@POKADIKD@gfx?1conchars@
	call	_FS_FileExists
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@Host_InitD

; 351  : 		Sys_Error( "W_LoadWadFile: couldn't load gfx.wad\n" );

	push	OFFSET ??_C@_0CG@GOPHJBBA@W_LoadWadFile?3?5couldn?8t?5load?5gf@
	call	_Sys_Error
	add	esp, 4
$LN5@Host_InitD:

; 352  : 
; 353  : 	memset( host.draw_decals, 0, sizeof( host.draw_decals ));

	push	32768					; 00008000H
	push	0
	push	OFFSET _host+1468
	call	_memset
	add	esp, 12					; 0000000cH

; 354  : 
; 355  : 	// lookup all the decals in decals.wad (basedir, gamedir, falldir)
; 356  : 	t = FS_Search( "decals.wad/*.*", true, false );

	push	0
	push	1
	push	OFFSET ??_C@_0P@CMMKAKKH@decals?4wad?1?$CK?4?$CK@
	call	_FS_Search
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$[ebp], eax

; 357  : 
; 358  : 	for( i = 0; t && i < t->numfilenames; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Host_InitD
$LN2@Host_InitD:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Host_InitD:
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN3@Host_InitD
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@Host_InitD

; 359  : 	{
; 360  : 		if( !Host_RegisterDecal( t->filenames[i], &num_decals ))

	lea	eax, DWORD PTR _num_decals$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_Host_RegisterDecal
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@Host_InitD

; 361  : 			break;

	jmp	SHORT $LN3@Host_InitD
$LN6@Host_InitD:

; 362  : 	}

	jmp	SHORT $LN2@Host_InitD
$LN3@Host_InitD:

; 363  : 
; 364  : 	if( t ) Mem_Free( t );

	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN7@Host_InitD
	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_InitDecals@@9@9
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	__Mem_Free
	add	esp, 12					; 0000000cH
$LN7@Host_InitD:

; 365  : 	Con_Reportf( "InitDecals: %i decals\n", num_decals );

	mov	eax, DWORD PTR _num_decals$[ebp]
	push	eax
	push	OFFSET ??_C@_0BH@EELKJAGK@InitDecals?3?5?$CFi?5decals?6@
	call	_Con_Reportf
	add	esp, 8

; 366  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_InitDecals ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Frame
_TEXT	SEGMENT
_time$ = 8						; size = 4
_Host_Frame PROC					; COMDAT

; 483  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 484  : 	Host_CheckSleep();

	call	_Host_CheckSleep

; 485  : 
; 486  : 	// decide the simulation time
; 487  : 	if( !Host_FilterTime( time ))

	push	ecx
	movss	xmm0, DWORD PTR _time$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_Host_FilterTime
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@Host_Frame

; 488  : 		return;

	jmp	SHORT $LN1@Host_Frame
$LN2@Host_Frame:

; 489  : 
; 490  : 	Host_InputFrame ();  // input frame

	call	_Host_InputFrame

; 491  : 	Host_ClientBegin (); // begin client

	call	_Host_ClientBegin

; 492  : 	Host_GetCommands (); // dedicated in

	call	_Host_GetCommands

; 493  : 	Host_ServerFrame (); // server frame

	call	_Host_ServerFrame

; 494  : 	Host_ClientFrame (); // client frame

	call	_Host_ClientFrame

; 495  : 
; 496  : 	host.framecount++;

	mov	eax, DWORD PTR _host+1464
	add	eax, 1
	mov	DWORD PTR _host+1464, eax
$LN1@Host_Frame:

; 497  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Frame ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_PrintEngineFeatures
_TEXT	SEGMENT
_Host_PrintEngineFeatures PROC				; COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 67   : 	if( FBitSet( host.features, ENGINE_WRITE_LARGE_COORD ))

	mov	eax, DWORD PTR _host+34752
	and	eax, 1
	je	SHORT $LN2@Host_Print

; 68   : 		Con_Reportf( "^3EXT:^7 big world support enabled\n" );

	push	OFFSET ??_C@_0CE@PGHCNDMA@?$FO3EXT?3?$FO7?5big?5world?5support?5enab@
	call	_Con_Reportf
	add	esp, 4
$LN2@Host_Print:

; 69   : 
; 70   : 	if( FBitSet( host.features, ENGINE_LOAD_DELUXEDATA ))

	mov	eax, DWORD PTR _host+34752
	and	eax, 4
	je	SHORT $LN3@Host_Print

; 71   : 		Con_Reportf( "^3EXT:^7 deluxemap support enabled\n" );

	push	OFFSET ??_C@_0CE@DHHNPHPO@?$FO3EXT?3?$FO7?5deluxemap?5support?5enab@
	call	_Con_Reportf
	add	esp, 4
$LN3@Host_Print:

; 72   : 
; 73   : 	if( FBitSet( host.features, ENGINE_PHYSICS_PUSHER_EXT ))

	mov	eax, DWORD PTR _host+34752
	and	eax, 8
	je	SHORT $LN4@Host_Print

; 74   : 		Con_Reportf( "^3EXT:^7 Improved MOVETYPE_PUSH is used\n" );

	push	OFFSET ??_C@_0CJ@LFJJCNNI@?$FO3EXT?3?$FO7?5Improved?5MOVETYPE_PUSH@
	call	_Con_Reportf
	add	esp, 4
$LN4@Host_Print:

; 75   : 
; 76   : 	if( FBitSet( host.features, ENGINE_LARGE_LIGHTMAPS ))

	mov	eax, DWORD PTR _host+34752
	and	eax, 16					; 00000010H
	je	SHORT $LN5@Host_Print

; 77   : 		Con_Reportf( "^3EXT:^7 Large lightmaps enabled\n" );

	push	OFFSET ??_C@_0CC@HGNNPGND@?$FO3EXT?3?$FO7?5Large?5lightmaps?5enable@
	call	_Con_Reportf
	add	esp, 4
$LN5@Host_Print:

; 78   : 
; 79   : 	if( FBitSet( host.features, ENGINE_COMPENSATE_QUAKE_BUG ))

	mov	eax, DWORD PTR _host+34752
	and	eax, 32					; 00000020H
	je	SHORT $LN1@Host_Print

; 80   : 		Con_Reportf( "^3EXT:^7 Compensate quake bug enabled\n" );

	push	OFFSET ??_C@_0CH@EJHMPMDG@?$FO3EXT?3?$FO7?5Compensate?5quake?5bug?5e@
	call	_Con_Reportf
	add	esp, 4
$LN1@Host_Print:

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_PrintEngineFeatures ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Error
_TEXT	SEGMENT
_argptr$ = -4						; size = 4
_error$ = 8						; size = 4
_Host_Error PROC					; COMDAT

; 505  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 506  : 	static char	hosterror1[MAX_SYSPATH];
; 507  : 	static char	hosterror2[MAX_SYSPATH];
; 508  : 	static qboolean	recursive = false;
; 509  : 	va_list		argptr;
; 510  : 
; 511  : 	if( host.mouse_visible && !CL_IsInMenu( ))

	cmp	DWORD PTR _host+34372, 0
	je	SHORT $LN4@Host_Error
	call	_CL_IsInMenu
	test	eax, eax
	jne	SHORT $LN4@Host_Error
$LN2@Host_Error:

; 512  : 	{
; 513  : 		// hide VGUI mouse
; 514  : 		while( ShowCursor( false ) >= 0 );

	push	0
	call	DWORD PTR __imp__ShowCursor@4
	test	eax, eax
	jl	SHORT $LN3@Host_Error
	jmp	SHORT $LN2@Host_Error
$LN3@Host_Error:

; 515  : 		host.mouse_visible = false;

	mov	DWORD PTR _host+34372, 0
$LN4@Host_Error:

; 516  : 	}
; 517  : 
; 518  : 	va_start( argptr, error );

	lea	eax, DWORD PTR _error$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 519  : 	Q_vsprintf( hosterror1, error, argptr );

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	99999					; 0001869fH
	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 520  : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 521  : 
; 522  : 	CL_WriteMessageHistory (); // before Q_error call

	call	_CL_WriteMessageHistory

; 523  : 
; 524  : 	if( host.framecount < 3 )

	cmp	DWORD PTR _host+1464, 3
	jae	SHORT $LN5@Host_Error

; 525  : 	{
; 526  : 		Sys_Error( "Host_InitError: %s", hosterror1 );

	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	push	OFFSET ??_C@_0BD@HEOIMPMP@Host_InitError?3?5?$CFs@
	call	_Sys_Error
	add	esp, 8

; 527  : 	}

	jmp	SHORT $LN6@Host_Error
$LN5@Host_Error:

; 528  : 	else if( host.framecount == host.errorframe )

	mov	eax, DWORD PTR _host+1464
	cmp	eax, DWORD PTR _host+232
	jne	SHORT $LN7@Host_Error

; 529  : 	{
; 530  : 		Sys_Error( "Host_MultiError: %s", hosterror2 );

	push	OFFSET ?hosterror2@?1??Host_Error@@9@9
	push	OFFSET ??_C@_0BE@MAMODEJN@Host_MultiError?3?5?$CFs@
	call	_Sys_Error
	add	esp, 8

; 531  : 		return;

	jmp	$LN1@Host_Error

; 532  : 	}

	jmp	SHORT $LN6@Host_Error
$LN7@Host_Error:

; 533  : 	else
; 534  : 	{
; 535  : 		if( host.allow_console )

	cmp	DWORD PTR _host+34336, 0
	je	SHORT $LN9@Host_Error

; 536  : 		{
; 537  : 			UI_SetActiveMenu( false );

	push	0
	call	_UI_SetActiveMenu
	add	esp, 4

; 538  : 			Key_SetKeyDest( key_console );

	push	0
	call	_Key_SetKeyDest
	add	esp, 4

; 539  : 			Con_Printf( "Host_Error: %s", hosterror1 );

	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	push	OFFSET ??_C@_0P@DOLDHDKF@Host_Error?3?5?$CFs@
	call	_Con_Printf
	add	esp, 8

; 540  : 		}

	jmp	SHORT $LN6@Host_Error
$LN9@Host_Error:

; 541  : 		else MSGBOX2( hosterror1 );

	push	65552					; 00010010H
	push	OFFSET ??_C@_0L@LFKFGHKM@Host?5Error@
	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	mov	eax, DWORD PTR _host+34332
	push	eax
	call	DWORD PTR __imp__MessageBoxA@16
$LN6@Host_Error:

; 542  : 	}
; 543  : 
; 544  : 	// host is shutting down. don't invoke infinite loop
; 545  : 	if( host.status == HOST_SHUTDOWN ) return;

	cmp	DWORD PTR _host+12, 2
	jne	SHORT $LN11@Host_Error
	jmp	$LN1@Host_Error
$LN11@Host_Error:

; 546  : 
; 547  : 	if( recursive )

	cmp	DWORD PTR ?recursive@?1??Host_Error@@9@9, 0
	je	SHORT $LN12@Host_Error

; 548  : 	{ 
; 549  : 		Con_Printf( "Host_RecursiveError: %s", hosterror2 );

	push	OFFSET ?hosterror2@?1??Host_Error@@9@9
	push	OFFSET ??_C@_0BI@GNFCMHLM@Host_RecursiveError?3?5?$CFs@
	call	_Con_Printf
	add	esp, 8

; 550  : 		Sys_Error( hosterror1 );

	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	call	_Sys_Error
	add	esp, 4

; 551  : 		return; // don't multiple executes

	jmp	SHORT $LN1@Host_Error
$LN12@Host_Error:

; 552  : 	}
; 553  : 
; 554  : 	recursive = true;

	mov	DWORD PTR ?recursive@?1??Host_Error@@9@9, 1

; 555  : 	Q_strncpy( hosterror2, hosterror1, MAX_SYSPATH );

	push	1024					; 00000400H
	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	push	OFFSET ?hosterror2@?1??Host_Error@@9@9
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 556  : 	host.errorframe = host.framecount; // to avoid multply calls per frame

	mov	eax, DWORD PTR _host+1464
	mov	DWORD PTR _host+232, eax

; 557  : 	Q_sprintf( host.finalmsg, "Server crashed: %s", hosterror1 );

	push	OFFSET ?hosterror1@?1??Host_Error@@9@9
	push	OFFSET ??_C@_0BD@BIDIHMCD@Server?5crashed?3?5?$CFs@
	push	OFFSET _host+240
	call	_Q_sprintf
	add	esp, 12					; 0000000cH

; 558  : 
; 559  : 	// clearing cmd buffer to prevent execute any commands
; 560  : 	COM_InitHostState();

	call	_COM_InitHostState

; 561  : 	Cbuf_Clear();

	call	_Cbuf_Clear

; 562  : 
; 563  : 	Host_ShutdownServer();

	call	_Host_ShutdownServer

; 564  : 	CL_Drop(); // drop clients

	call	_CL_Drop

; 565  : 
; 566  : 	// recreate world if needs
; 567  : 	CL_ClearEdicts ();

	call	_CL_ClearEdicts

; 568  : 
; 569  : 	// release all models
; 570  : 	Mod_FreeAll();

	call	_Mod_FreeAll

; 571  : 
; 572  : 	recursive = false;

	mov	DWORD PTR ?recursive@?1??Host_Error@@9@9, 0

; 573  : 	Host_AbortCurrentFrame();

	call	_Host_AbortCurrentFrame
$LN1@Host_Error:

; 574  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Error ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_ShutdownServer
_TEXT	SEGMENT
_Host_ShutdownServer PROC				; COMDAT

; 56   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 57   : 	SV_Shutdown( "Server was killed\n" );

	push	OFFSET ??_C@_0BD@HJPGHMNK@Server?5was?5killed?6@
	call	_SV_Shutdown
	add	esp, 4

; 58   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_ShutdownServer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_IsLocalClient
_TEXT	SEGMENT
_Host_IsLocalClient PROC				; COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 299  : 	// only the local client have the active server
; 300  : 	if( CL_Initialized( ) && SV_Initialized( ))

	call	_CL_Initialized
	test	eax, eax
	je	SHORT $LN2@Host_IsLoc
	call	_SV_Initialized
	test	eax, eax
	je	SHORT $LN2@Host_IsLoc

; 301  : 		return true;

	mov	eax, 1
	jmp	SHORT $LN1@Host_IsLoc
$LN2@Host_IsLoc:

; 302  : 	return false;

	xor	eax, eax
$LN1@Host_IsLoc:

; 303  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_IsLocalClient ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_IsLocalGame
_TEXT	SEGMENT
tv71 = -68						; size = 4
tv68 = -68						; size = 4
_Host_IsLocalGame PROC					; COMDAT

; 286  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 287  : 	if( SV_Active( ))

	call	_SV_Active
	test	eax, eax
	je	SHORT $LN2@Host_IsLoc

; 288  : 	{
; 289  : 		return ( SV_GetMaxClients() == 1 ) ? true : false;

	call	_SV_GetMaxClients
	cmp	eax, 1
	jne	SHORT $LN5@Host_IsLoc
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN6@Host_IsLoc
$LN5@Host_IsLoc:
	mov	DWORD PTR tv68[ebp], 0
$LN6@Host_IsLoc:
	mov	eax, DWORD PTR tv68[ebp]
	jmp	SHORT $LN1@Host_IsLoc

; 290  : 	}

	jmp	SHORT $LN1@Host_IsLoc
$LN2@Host_IsLoc:

; 291  : 	else
; 292  : 	{
; 293  : 		return ( CL_GetMaxClients() == 1 ) ? true : false;

	call	_CL_GetMaxClients
	cmp	eax, 1
	jne	SHORT $LN7@Host_IsLoc
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN8@Host_IsLoc
$LN7@Host_IsLoc:
	mov	DWORD PTR tv71[ebp], 0
$LN8@Host_IsLoc:
	mov	eax, DWORD PTR tv71[ebp]
$LN1@Host_IsLoc:

; 294  : 	}
; 295  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_IsLocalGame ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_AbortCurrentFrame
_TEXT	SEGMENT
_Host_AbortCurrentFrame PROC				; COMDAT

; 119  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 120  : 	longjmp( host.abortframe, 1 );

	push	1
	push	OFFSET _host+168
	call	_longjmp
$LN2@Host_Abort:

; 121  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_AbortCurrentFrame ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_EndGame
_TEXT	SEGMENT
_argptr$ = -4						; size = 4
_abort$ = 8						; size = 4
_message$ = 12						; size = 4
_Host_EndGame PROC					; COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 90   : 	va_list		argptr;
; 91   : 	static char	string[MAX_SYSPATH];
; 92   : 	
; 93   : 	va_start( argptr, message );

	lea	eax, DWORD PTR _message$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 94   : 	Q_vsnprintf( string, sizeof( string ), message, argptr );

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	push	1024					; 00000400H
	push	OFFSET ?string@?1??Host_EndGame@@9@9
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 95   : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 96   : 
; 97   : 	Con_Printf( "Host_EndGame: %s\n", string );

	push	OFFSET ?string@?1??Host_EndGame@@9@9
	push	OFFSET ??_C@_0BC@PAAIAAAI@Host_EndGame?3?5?$CFs?6@
	call	_Con_Printf
	add	esp, 8

; 98   : 
; 99   : 	SV_Shutdown( "\n" );	

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	call	_SV_Shutdown
	add	esp, 4

; 100  : 	CL_Disconnect();

	call	_CL_Disconnect

; 101  : 
; 102  : 	// recreate world if needs
; 103  : 	CL_ClearEdicts ();

	call	_CL_ClearEdicts

; 104  : 
; 105  : 	// release all models
; 106  : 	Mod_FreeAll();

	call	_Mod_FreeAll

; 107  : 
; 108  : 	if( abort ) Host_AbortCurrentFrame ();

	cmp	DWORD PTR _abort$[ebp], 0
	je	SHORT $LN1@Host_EndGa
	call	_Host_AbortCurrentFrame
$LN1@Host_EndGa:

; 109  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_EndGame ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_NewInstance
_TEXT	SEGMENT
_name$ = 8						; size = 4
_finalmsg$ = 12						; size = 4
_Host_NewInstance PROC					; COMDAT

; 152  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 153  : 	if( !pChangeGame ) return;

	cmp	DWORD PTR _pChangeGame, 0
	jne	SHORT $LN2@Host_NewIn
	jmp	SHORT $LN1@Host_NewIn
$LN2@Host_NewIn:

; 154  : 
; 155  : 	host.change_game = true;

	mov	DWORD PTR _host+34368, 1

; 156  : 	Q_strncpy( host.finalmsg, finalmsg, sizeof( host.finalmsg ));

	push	256					; 00000100H
	mov	eax, DWORD PTR _finalmsg$[ebp]
	push	eax
	push	OFFSET _host+240
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 157  : 	pChangeGame( name ); // call from hl.exe

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR _pChangeGame
	add	esp, 4
$LN1@Host_NewIn:

; 158  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_NewInstance ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_CompareFileTime
_TEXT	SEGMENT
_ft1$ = 8						; size = 4
_ft2$ = 12						; size = 4
_Host_CompareFileTime PROC				; COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 44   : 	if( ft1 < ft2 )

	mov	eax, DWORD PTR _ft1$[ebp]
	cmp	eax, DWORD PTR _ft2$[ebp]
	jge	SHORT $LN2@Host_Compa

; 45   : 	{
; 46   : 		return -1;

	or	eax, -1
	jmp	SHORT $LN1@Host_Compa

; 47   : 	}

	jmp	SHORT $LN3@Host_Compa
$LN2@Host_Compa:

; 48   : 	else if( ft1 > ft2 )

	mov	eax, DWORD PTR _ft1$[ebp]
	cmp	eax, DWORD PTR _ft2$[ebp]
	jle	SHORT $LN3@Host_Compa

; 49   : 	{
; 50   : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN1@Host_Compa
$LN3@Host_Compa:

; 51   : 	}
; 52   : 	return 0;

	xor	eax, eax
$LN1@Host_Compa:

; 53   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_CompareFileTime ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\host.c
;	COMDAT _Host_Shutdown
_TEXT	SEGMENT
_Host_Shutdown PROC					; COMDAT

; 907  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 908  : 	if( host.shutdown_issued ) return;

	cmp	DWORD PTR _host+34376, 0
	je	SHORT $LN2@Host_Shutd
	jmp	$LN1@Host_Shutd
$LN2@Host_Shutd:

; 909  : 	host.shutdown_issued = true;

	mov	DWORD PTR _host+34376, 1

; 910  : 
; 911  : 	if( host.status != HOST_ERR_FATAL ) host.status = HOST_SHUTDOWN; // prepare host to normal shutdown

	cmp	DWORD PTR _host+12, 3
	je	SHORT $LN3@Host_Shutd
	mov	DWORD PTR _host+12, 2
$LN3@Host_Shutd:

; 912  : 	if( !host.change_game ) Q_strncpy( host.finalmsg, "Server shutdown", sizeof( host.finalmsg ));

	cmp	DWORD PTR _host+34368, 0
	jne	SHORT $LN4@Host_Shutd
	push	256					; 00000100H
	push	OFFSET ??_C@_0BA@IKGKOOHO@Server?5shutdown@
	push	OFFSET _host+240
	call	_Q_strncpy
	add	esp, 12					; 0000000cH
$LN4@Host_Shutd:

; 913  : 
; 914  : 	if( host.type == HOST_NORMAL )

	cmp	DWORD PTR _host+164, 0
	jne	SHORT $LN5@Host_Shutd

; 915  : 		Host_WriteConfig();

	call	_Host_WriteConfig
$LN5@Host_Shutd:

; 916  : 
; 917  : 	SV_Shutdown( "Server shutdown\n" );

	push	OFFSET ??_C@_0BB@ENNINOFP@Server?5shutdown?6@
	call	_SV_Shutdown
	add	esp, 4

; 918  : 	CL_Shutdown();

	call	_CL_Shutdown

; 919  : 
; 920  : 	Mod_Shutdown();

	call	_Mod_Shutdown

; 921  : 	NET_Shutdown();

	call	_NET_Shutdown

; 922  : 	Host_FreeCommon();

	call	_Host_FreeCommon

; 923  : 	Con_DestroyConsole();

	call	_Con_DestroyConsole

; 924  : 
; 925  : 	// must be last, console uses this
; 926  : 	Mem_FreePool( &host.mempool );

	mov	eax, DWORD PTR ?__LINE__Var@?0??Host_Shutdown@@9@9
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0DB@KOKNKIGN@D?3?2DevDragon?2XashFE?2dev?2src?2eng@
	push	OFFSET _host+236
	call	__Mem_FreePool
	add	esp, 12					; 0000000cH

; 927  : 
; 928  : 	// restore filter	
; 929  : 	if( host.oldFilter ) SetUnhandledExceptionFilter( host.oldFilter );

	cmp	DWORD PTR _host+8, 0
	je	SHORT $LN1@Host_Shutd
	mov	eax, DWORD PTR _host+8
	push	eax
	call	DWORD PTR __imp__SetUnhandledExceptionFilter@4
$LN1@Host_Shutd:

; 930  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Host_Shutdown ENDP
_TEXT	ENDS
END
