; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32705.0 

	TITLE	D:\DevDragon\XashFE\dev\src\temp\engine\!debug\vgui_draw.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_g_textureId
_DATA	SEGMENT
COMM	_pglGetError:DWORD
COMM	_pglGetString:DWORD
COMM	_pglAccum:DWORD
COMM	_pglAlphaFunc:DWORD
COMM	_pglArrayElement:DWORD
COMM	_pglBegin:DWORD
COMM	_pglBindTexture:DWORD
COMM	_pglBitmap:DWORD
COMM	_pglBlendFunc:DWORD
COMM	_pglCallList:DWORD
COMM	_pglCallLists:DWORD
COMM	_pglClear:DWORD
COMM	_pglClearAccum:DWORD
COMM	_pglClearColor:DWORD
COMM	_pglClearDepth:DWORD
COMM	_pglClearIndex:DWORD
COMM	_pglClearStencil:DWORD
COMM	_pglIsEnabled:DWORD
COMM	_pglIsList:DWORD
COMM	_pglIsTexture:DWORD
COMM	_pglClipPlane:DWORD
COMM	_pglColor3b:DWORD
COMM	_pglColor3bv:DWORD
COMM	_pglColor3d:DWORD
COMM	_pglColor3dv:DWORD
COMM	_pglColor3f:DWORD
COMM	_pglColor3fv:DWORD
COMM	_pglColor3i:DWORD
COMM	_pglColor3iv:DWORD
COMM	_pglColor3s:DWORD
COMM	_pglColor3sv:DWORD
COMM	_pglColor3ub:DWORD
COMM	_pglColor3ubv:DWORD
COMM	_pglColor3ui:DWORD
COMM	_pglColor3uiv:DWORD
COMM	_pglColor3us:DWORD
COMM	_pglColor3usv:DWORD
COMM	_pglColor4b:DWORD
COMM	_pglColor4bv:DWORD
COMM	_pglColor4d:DWORD
COMM	_pglColor4dv:DWORD
COMM	_pglColor4f:DWORD
COMM	_pglColor4fv:DWORD
COMM	_pglColor4i:DWORD
COMM	_pglColor4iv:DWORD
COMM	_pglColor4s:DWORD
COMM	_pglColor4sv:DWORD
COMM	_pglColor4ub:DWORD
COMM	_pglColor4ubv:DWORD
COMM	_pglColor4ui:DWORD
COMM	_pglColor4uiv:DWORD
COMM	_pglColor4us:DWORD
COMM	_pglColor4usv:DWORD
COMM	_pglColorMask:DWORD
COMM	_pglColorMaterial:DWORD
COMM	_pglColorPointer:DWORD
COMM	_pglCopyPixels:DWORD
COMM	_pglCopyTexImage1D:DWORD
COMM	_pglCopyTexImage2D:DWORD
COMM	_pglCopyTexSubImage1D:DWORD
COMM	_pglCopyTexSubImage2D:DWORD
COMM	_pglCullFace:DWORD
COMM	_pglDeleteLists:DWORD
COMM	_pglDeleteTextures:DWORD
COMM	_pglDepthFunc:DWORD
COMM	_pglDepthMask:DWORD
COMM	_pglDepthRange:DWORD
COMM	_pglDisable:DWORD
COMM	_pglDisableClientState:DWORD
COMM	_pglDrawArrays:DWORD
COMM	_pglDrawBuffer:DWORD
COMM	_pglDrawElements:DWORD
COMM	_pglDrawPixels:DWORD
COMM	_pglEdgeFlag:DWORD
COMM	_pglEdgeFlagPointer:DWORD
COMM	_pglEdgeFlagv:DWORD
COMM	_pglEnable:DWORD
COMM	_pglEnableClientState:DWORD
COMM	_pglEnd:DWORD
COMM	_pglEndList:DWORD
COMM	_pglEvalCoord1d:DWORD
COMM	_pglEvalCoord1dv:DWORD
COMM	_pglEvalCoord1f:DWORD
COMM	_pglEvalCoord1fv:DWORD
COMM	_pglEvalCoord2d:DWORD
COMM	_pglEvalCoord2dv:DWORD
COMM	_pglEvalCoord2f:DWORD
COMM	_pglEvalCoord2fv:DWORD
COMM	_pglEvalMesh1:DWORD
COMM	_pglEvalMesh2:DWORD
COMM	_pglEvalPoint1:DWORD
COMM	_pglEvalPoint2:DWORD
COMM	_pglFeedbackBuffer:DWORD
COMM	_pglFinish:DWORD
COMM	_pglFlush:DWORD
COMM	_pglFogf:DWORD
COMM	_pglFogfv:DWORD
COMM	_pglFogi:DWORD
COMM	_pglFogiv:DWORD
COMM	_pglFrontFace:DWORD
COMM	_pglFrustum:DWORD
COMM	_pglGenTextures:DWORD
COMM	_pglGetBooleanv:DWORD
COMM	_pglGetClipPlane:DWORD
COMM	_pglGetDoublev:DWORD
COMM	_pglGetFloatv:DWORD
COMM	_pglGetIntegerv:DWORD
COMM	_pglGetLightfv:DWORD
COMM	_pglGetLightiv:DWORD
COMM	_pglGetMapdv:DWORD
COMM	_pglGetMapfv:DWORD
COMM	_pglGetMapiv:DWORD
COMM	_pglGetMaterialfv:DWORD
COMM	_pglGetMaterialiv:DWORD
COMM	_pglGetPixelMapfv:DWORD
COMM	_pglGetPixelMapuiv:DWORD
COMM	_pglGetPixelMapusv:DWORD
COMM	_pglGetPointerv:DWORD
COMM	_pglGetPolygonStipple:DWORD
COMM	_pglGetTexEnvfv:DWORD
COMM	_pglGetTexEnviv:DWORD
COMM	_pglGetTexGendv:DWORD
COMM	_pglGetTexGenfv:DWORD
COMM	_pglGetTexGeniv:DWORD
COMM	_pglGetTexImage:DWORD
COMM	_pglGetTexLevelParameterfv:DWORD
COMM	_pglGetTexLevelParameteriv:DWORD
COMM	_pglGetTexParameterfv:DWORD
COMM	_pglGetTexParameteriv:DWORD
COMM	_pglHint:DWORD
COMM	_pglIndexMask:DWORD
COMM	_pglIndexPointer:DWORD
COMM	_pglIndexd:DWORD
COMM	_pglIndexdv:DWORD
COMM	_pglIndexf:DWORD
COMM	_pglIndexfv:DWORD
COMM	_pglIndexi:DWORD
COMM	_pglIndexiv:DWORD
COMM	_pglIndexs:DWORD
COMM	_pglIndexsv:DWORD
COMM	_pglIndexub:DWORD
COMM	_pglIndexubv:DWORD
COMM	_pglInitNames:DWORD
COMM	_pglInterleavedArrays:DWORD
COMM	_pglLightModelf:DWORD
COMM	_pglLightModelfv:DWORD
COMM	_pglLightModeli:DWORD
COMM	_pglLightModeliv:DWORD
COMM	_pglLightf:DWORD
COMM	_pglLightfv:DWORD
COMM	_pglLighti:DWORD
COMM	_pglLightiv:DWORD
COMM	_pglLineStipple:DWORD
COMM	_pglLineWidth:DWORD
COMM	_pglListBase:DWORD
COMM	_pglLoadIdentity:DWORD
COMM	_pglLoadMatrixd:DWORD
COMM	_pglLoadMatrixf:DWORD
COMM	_pglLoadName:DWORD
COMM	_pglLogicOp:DWORD
COMM	_pglMap1d:DWORD
COMM	_pglMap1f:DWORD
COMM	_pglMap2d:DWORD
COMM	_pglMap2f:DWORD
COMM	_pglMapGrid1d:DWORD
COMM	_pglMapGrid1f:DWORD
COMM	_pglMapGrid2d:DWORD
COMM	_pglMapGrid2f:DWORD
COMM	_pglMaterialf:DWORD
COMM	_pglMaterialfv:DWORD
COMM	_pglMateriali:DWORD
COMM	_pglMaterialiv:DWORD
COMM	_pglMatrixMode:DWORD
COMM	_pglMultMatrixd:DWORD
COMM	_pglMultMatrixf:DWORD
COMM	_pglNewList:DWORD
COMM	_pglNormal3b:DWORD
COMM	_pglNormal3bv:DWORD
COMM	_pglNormal3d:DWORD
COMM	_pglNormal3dv:DWORD
COMM	_pglNormal3f:DWORD
COMM	_pglNormal3fv:DWORD
COMM	_pglNormal3i:DWORD
COMM	_pglNormal3iv:DWORD
COMM	_pglNormal3s:DWORD
COMM	_pglNormal3sv:DWORD
COMM	_pglNormalPointer:DWORD
COMM	_pglOrtho:DWORD
COMM	_pglPassThrough:DWORD
COMM	_pglPixelMapfv:DWORD
COMM	_pglPixelMapuiv:DWORD
COMM	_pglPixelMapusv:DWORD
COMM	_pglPixelStoref:DWORD
COMM	_pglPixelStorei:DWORD
COMM	_pglPixelTransferf:DWORD
COMM	_pglPixelTransferi:DWORD
COMM	_pglPixelZoom:DWORD
COMM	_pglPointSize:DWORD
COMM	_pglPolygonMode:DWORD
COMM	_pglPolygonOffset:DWORD
COMM	_pglPolygonStipple:DWORD
COMM	_pglPopAttrib:DWORD
COMM	_pglPopClientAttrib:DWORD
COMM	_pglPopMatrix:DWORD
COMM	_pglPopName:DWORD
COMM	_pglPushAttrib:DWORD
COMM	_pglPushClientAttrib:DWORD
COMM	_pglPushMatrix:DWORD
COMM	_pglPushName:DWORD
COMM	_pglRasterPos2d:DWORD
COMM	_pglRasterPos2dv:DWORD
COMM	_pglRasterPos2f:DWORD
COMM	_pglRasterPos2fv:DWORD
COMM	_pglRasterPos2i:DWORD
COMM	_pglRasterPos2iv:DWORD
COMM	_pglRasterPos2s:DWORD
COMM	_pglRasterPos2sv:DWORD
COMM	_pglRasterPos3d:DWORD
COMM	_pglRasterPos3dv:DWORD
COMM	_pglRasterPos3f:DWORD
COMM	_pglRasterPos3fv:DWORD
COMM	_pglRasterPos3i:DWORD
COMM	_pglRasterPos3iv:DWORD
COMM	_pglRasterPos3s:DWORD
COMM	_pglRasterPos3sv:DWORD
COMM	_pglRasterPos4d:DWORD
COMM	_pglRasterPos4dv:DWORD
COMM	_pglRasterPos4f:DWORD
COMM	_pglRasterPos4fv:DWORD
COMM	_pglRasterPos4i:DWORD
COMM	_pglRasterPos4iv:DWORD
COMM	_pglRasterPos4s:DWORD
COMM	_pglRasterPos4sv:DWORD
COMM	_pglReadBuffer:DWORD
COMM	_pglReadPixels:DWORD
COMM	_pglRectd:DWORD
COMM	_pglRectdv:DWORD
COMM	_pglRectf:DWORD
COMM	_pglRectfv:DWORD
COMM	_pglRecti:DWORD
COMM	_pglRectiv:DWORD
COMM	_pglRects:DWORD
COMM	_pglRectsv:DWORD
COMM	_pglRotated:DWORD
COMM	_pglRotatef:DWORD
COMM	_pglScaled:DWORD
COMM	_pglScalef:DWORD
COMM	_pglScissor:DWORD
COMM	_pglSelectBuffer:DWORD
COMM	_pglShadeModel:DWORD
COMM	_pglStencilFunc:DWORD
COMM	_pglStencilMask:DWORD
COMM	_pglStencilOp:DWORD
COMM	_pglTexCoord1d:DWORD
COMM	_pglTexCoord1dv:DWORD
COMM	_pglTexCoord1f:DWORD
COMM	_pglTexCoord1fv:DWORD
COMM	_pglTexCoord1i:DWORD
COMM	_pglTexCoord1iv:DWORD
COMM	_pglTexCoord1s:DWORD
COMM	_pglTexCoord1sv:DWORD
COMM	_pglTexCoord2d:DWORD
COMM	_pglTexCoord2dv:DWORD
COMM	_pglTexCoord2f:DWORD
COMM	_pglTexCoord2fv:DWORD
COMM	_pglTexCoord2i:DWORD
COMM	_pglTexCoord2iv:DWORD
COMM	_pglTexCoord2s:DWORD
COMM	_pglTexCoord2sv:DWORD
COMM	_pglTexCoord3d:DWORD
COMM	_pglTexCoord3dv:DWORD
COMM	_pglTexCoord3f:DWORD
COMM	_pglTexCoord3fv:DWORD
COMM	_pglTexCoord3i:DWORD
COMM	_pglTexCoord3iv:DWORD
COMM	_pglTexCoord3s:DWORD
COMM	_pglTexCoord3sv:DWORD
COMM	_pglTexCoord4d:DWORD
COMM	_pglTexCoord4dv:DWORD
COMM	_pglTexCoord4f:DWORD
COMM	_pglTexCoord4fv:DWORD
COMM	_pglTexCoord4i:DWORD
COMM	_pglTexCoord4iv:DWORD
COMM	_pglTexCoord4s:DWORD
COMM	_pglTexCoord4sv:DWORD
COMM	_pglTexCoordPointer:DWORD
COMM	_pglTexEnvf:DWORD
COMM	_pglTexEnvfv:DWORD
COMM	_pglTexEnvi:DWORD
COMM	_pglTexEnviv:DWORD
COMM	_pglTexGend:DWORD
COMM	_pglTexGendv:DWORD
COMM	_pglTexGenf:DWORD
COMM	_pglTexGenfv:DWORD
COMM	_pglTexGeni:DWORD
COMM	_pglTexGeniv:DWORD
COMM	_pglTexImage1D:DWORD
COMM	_pglTexImage2D:DWORD
COMM	_pglTexParameterf:DWORD
COMM	_pglTexParameterfv:DWORD
COMM	_pglTexParameteri:DWORD
COMM	_pglTexParameteriv:DWORD
COMM	_pglTexSubImage1D:DWORD
COMM	_pglTexSubImage2D:DWORD
COMM	_pglTranslated:DWORD
COMM	_pglTranslatef:DWORD
COMM	_pglVertex2d:DWORD
COMM	_pglVertex2dv:DWORD
COMM	_pglVertex2f:DWORD
COMM	_pglVertex2fv:DWORD
COMM	_pglVertex2i:DWORD
COMM	_pglVertex2iv:DWORD
COMM	_pglVertex2s:DWORD
COMM	_pglVertex2sv:DWORD
COMM	_pglVertex3d:DWORD
COMM	_pglVertex3dv:DWORD
COMM	_pglVertex3f:DWORD
COMM	_pglVertex3fv:DWORD
COMM	_pglVertex3i:DWORD
COMM	_pglVertex3iv:DWORD
COMM	_pglVertex3s:DWORD
COMM	_pglVertex3sv:DWORD
COMM	_pglVertex4d:DWORD
COMM	_pglVertex4dv:DWORD
COMM	_pglVertex4f:DWORD
COMM	_pglVertex4fv:DWORD
COMM	_pglVertex4i:DWORD
COMM	_pglVertex4iv:DWORD
COMM	_pglVertex4s:DWORD
COMM	_pglVertex4sv:DWORD
COMM	_pglVertexPointer:DWORD
COMM	_pglViewport:DWORD
COMM	_pglPointParameterfEXT:DWORD
COMM	_pglPointParameterfvEXT:DWORD
COMM	_pglLockArraysEXT:DWORD
COMM	_pglUnlockArraysEXT:DWORD
COMM	_pglActiveTextureARB:DWORD
COMM	_pglClientActiveTextureARB:DWORD
COMM	_pglGetCompressedTexImage:DWORD
COMM	_pglDrawRangeElements:DWORD
COMM	_pglDrawRangeElementsEXT:DWORD
COMM	_pglMultiTexCoord1f:DWORD
COMM	_pglMultiTexCoord2f:DWORD
COMM	_pglMultiTexCoord3f:DWORD
COMM	_pglMultiTexCoord4f:DWORD
COMM	_pglActiveTexture:DWORD
COMM	_pglClientActiveTexture:DWORD
COMM	_pglCompressedTexImage3DARB:DWORD
COMM	_pglCompressedTexImage2DARB:DWORD
COMM	_pglCompressedTexImage1DARB:DWORD
COMM	_pglCompressedTexSubImage3DARB:DWORD
COMM	_pglCompressedTexSubImage2DARB:DWORD
COMM	_pglCompressedTexSubImage1DARB:DWORD
COMM	_pglDeleteObjectARB:DWORD
COMM	_pglGetHandleARB:DWORD
COMM	_pglDetachObjectARB:DWORD
COMM	_pglCreateShaderObjectARB:DWORD
COMM	_pglShaderSourceARB:DWORD
COMM	_pglCompileShaderARB:DWORD
COMM	_pglCreateProgramObjectARB:DWORD
COMM	_pglAttachObjectARB:DWORD
COMM	_pglLinkProgramARB:DWORD
COMM	_pglUseProgramObjectARB:DWORD
COMM	_pglValidateProgramARB:DWORD
COMM	_pglBindProgramARB:DWORD
COMM	_pglDeleteProgramsARB:DWORD
COMM	_pglGenProgramsARB:DWORD
COMM	_pglProgramStringARB:DWORD
COMM	_pglProgramEnvParameter4fARB:DWORD
COMM	_pglProgramLocalParameter4fARB:DWORD
COMM	_pglUniform1fARB:DWORD
COMM	_pglUniform2fARB:DWORD
COMM	_pglUniform3fARB:DWORD
COMM	_pglUniform4fARB:DWORD
COMM	_pglUniform1iARB:DWORD
COMM	_pglUniform2iARB:DWORD
COMM	_pglUniform3iARB:DWORD
COMM	_pglUniform4iARB:DWORD
COMM	_pglUniform1fvARB:DWORD
COMM	_pglUniform2fvARB:DWORD
COMM	_pglUniform3fvARB:DWORD
COMM	_pglUniform4fvARB:DWORD
COMM	_pglUniform1ivARB:DWORD
COMM	_pglUniform2ivARB:DWORD
COMM	_pglUniform3ivARB:DWORD
COMM	_pglUniform4ivARB:DWORD
COMM	_pglUniformMatrix2fvARB:DWORD
COMM	_pglUniformMatrix3fvARB:DWORD
COMM	_pglUniformMatrix4fvARB:DWORD
COMM	_pglGetObjectParameterfvARB:DWORD
COMM	_pglGetObjectParameterivARB:DWORD
COMM	_pglGetInfoLogARB:DWORD
COMM	_pglGetAttachedObjectsARB:DWORD
COMM	_pglGetUniformLocationARB:DWORD
COMM	_pglGetActiveUniformARB:DWORD
COMM	_pglGetUniformfvARB:DWORD
COMM	_pglGetUniformivARB:DWORD
COMM	_pglGetShaderSourceARB:DWORD
COMM	_pglTexImage3D:DWORD
COMM	_pglTexSubImage3D:DWORD
COMM	_pglCopyTexSubImage3D:DWORD
COMM	_pglBlendEquationEXT:DWORD
COMM	_pglStencilOpSeparate:DWORD
COMM	_pglStencilFuncSeparate:DWORD
COMM	_pglActiveStencilFaceEXT:DWORD
COMM	_pglVertexAttribPointerARB:DWORD
COMM	_pglEnableVertexAttribArrayARB:DWORD
COMM	_pglDisableVertexAttribArrayARB:DWORD
COMM	_pglBindAttribLocationARB:DWORD
COMM	_pglGetActiveAttribARB:DWORD
COMM	_pglGetAttribLocationARB:DWORD
COMM	_pglBindFragDataLocation:DWORD
COMM	_pglVertexAttrib2fARB:DWORD
COMM	_pglVertexAttrib2fvARB:DWORD
COMM	_pglVertexAttrib3fvARB:DWORD
COMM	_pglBindBufferARB:DWORD
COMM	_pglDeleteBuffersARB:DWORD
COMM	_pglGenBuffersARB:DWORD
COMM	_pglIsBufferARB:DWORD
COMM	_pglMapBufferARB:DWORD
COMM	_pglUnmapBufferARB:DWORD
COMM	_pglBufferDataARB:DWORD
COMM	_pglBufferSubDataARB:DWORD
COMM	_pglGenQueriesARB:DWORD
COMM	_pglDeleteQueriesARB:DWORD
COMM	_pglIsQueryARB:DWORD
COMM	_pglBeginQueryARB:DWORD
COMM	_pglEndQueryARB:DWORD
COMM	_pglGetQueryivARB:DWORD
COMM	_pglGetQueryObjectivARB:DWORD
COMM	_pglGetQueryObjectuivARB:DWORD
COMM	_pglDebugMessageControlARB:DWORD
COMM	_pglDebugMessageInsertARB:DWORD
COMM	_pglDebugMessageCallbackARB:DWORD
COMM	_pglGetDebugMessageLogARB:DWORD
COMM	_pglIsRenderbuffer:DWORD
COMM	_pglBindRenderbuffer:DWORD
COMM	_pglDeleteRenderbuffers:DWORD
COMM	_pglGenRenderbuffers:DWORD
COMM	_pglRenderbufferStorage:DWORD
COMM	_pglRenderbufferStorageMultisample:DWORD
COMM	_pglGetRenderbufferParameteriv:DWORD
COMM	_pglIsFramebuffer:DWORD
COMM	_pglBindFramebuffer:DWORD
COMM	_pglDeleteFramebuffers:DWORD
COMM	_pglGenFramebuffers:DWORD
COMM	_pglCheckFramebufferStatus:DWORD
COMM	_pglFramebufferTexture1D:DWORD
COMM	_pglFramebufferTexture2D:DWORD
COMM	_pglFramebufferTexture3D:DWORD
COMM	_pglFramebufferTextureLayer:DWORD
COMM	_pglFramebufferRenderbuffer:DWORD
COMM	_pglGetFramebufferAttachmentParameteriv:DWORD
COMM	_pglBlitFramebuffer:DWORD
COMM	_pglDrawBuffersARB:DWORD
COMM	_pglGenerateMipmap:DWORD
COMM	_pglBindVertexArray:DWORD
COMM	_pglDeleteVertexArrays:DWORD
COMM	_pglGenVertexArrays:DWORD
COMM	_pglIsVertexArray:DWORD
COMM	_pglSwapInterval:DWORD
COMM	_pwglSwapBuffers:DWORD
COMM	_pwglCopyContext:DWORD
COMM	_pwglCreateContext:DWORD
COMM	_pwglCreateLayerContext:DWORD
COMM	_pwglDeleteContext:DWORD
COMM	_pwglGetCurrentContext:DWORD
COMM	_pwglGetProcAddress:DWORD
COMM	_pwglMakeCurrent:DWORD
COMM	_pwglShareLists:DWORD
COMM	_pwglUseFontBitmaps:DWORD
COMM	_pwglUseFontOutlines:DWORD
COMM	_pwglDescribeLayerPlane:DWORD
COMM	_pwglSetLayerPaletteEntries:DWORD
COMM	_pwglGetLayerPaletteEntries:DWORD
COMM	_pwglRealizeLayerPalette:DWORD
COMM	_pwglSwapLayerBuffers:DWORD
COMM	_pwglSwapIntervalEXT:DWORD
COMM	_pwglCreateContextAttribsARB:DWORD
COMM	_pwglGetPixelFormatAttribiv:DWORD
COMM	_pwglChoosePixelFormat:DWORD
COMM	_pwglGetExtensionsStringEXT:DWORD
COMM	_vgui_colorstrings:DWORD
COMM	_g_textures:DWORD:0800H
_DATA	ENDS
_BSS	SEGMENT
_g_textureId DD	01H DUP (?)
_BSS	ENDS
PUBLIC	_VGUI_DrawInit
PUBLIC	_VGUI_DrawShutdown
PUBLIC	_VGUI_SetupDrawingRect
PUBLIC	_VGUI_SetupDrawingImage
PUBLIC	_VGUI_BindTexture
PUBLIC	_VGUI_EnableTexture
PUBLIC	_VGUI_UploadTexture
PUBLIC	_VGUI_DrawQuad
PUBLIC	_VGUI_DrawBuffer
PUBLIC	_VGUI_GenerateTexture
PUBLIC	??_C@_0CB@DCEJHMCK@allow?5colorstrings?5in?5VGUI?5text@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_0BC@NLKACJHH@vgui_colorstrings@		; `string'
PUBLIC	??_C@_0DI@PLGIOENM@VGUI_GenerateTexture?3?5VGUI_MAX_@ ; `string'
PUBLIC	??_C@_0DI@MKFLDLKD@?$FO1Error?3?$FO7?5VGUI_UploadTexture?3?5@ ; `string'
PUBLIC	??_C@_07JFIHAHCI@?$CKvgui?$CFi@			; `string'
EXTRN	_memset:PROC
EXTRN	_Q_snprintf:PROC
EXTRN	_Cvar_Get:PROC
EXTRN	_Host_Error:PROC
EXTRN	_Con_DPrintf:PROC
EXTRN	_GL_Bind:PROC
EXTRN	_GL_LoadTextureFromBuffer:PROC
EXTRN	_GL_FreeTexture:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_07JFIHAHCI@?$CKvgui?$CFi@
CONST	SEGMENT
??_C@_07JFIHAHCI@?$CKvgui?$CFi@ DB '*vgui%i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MKFLDLKD@?$FO1Error?3?$FO7?5VGUI_UploadTexture?3?5@
CONST	SEGMENT
??_C@_0DI@MKFLDLKD@?$FO1Error?3?$FO7?5VGUI_UploadTexture?3?5@ DB '^1Error'
	DB	':^7 VGUI_UploadTexture: bad texture %i. Ignored', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PLGIOENM@VGUI_GenerateTexture?3?5VGUI_MAX_@
CONST	SEGMENT
??_C@_0DI@PLGIOENM@VGUI_GenerateTexture?3?5VGUI_MAX_@ DB 'VGUI_GenerateTe'
	DB	'xture: VGUI_MAX_TEXTURES limit exceeded', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NLKACJHH@vgui_colorstrings@
CONST	SEGMENT
??_C@_0BC@NLKACJHH@vgui_colorstrings@ DB 'vgui_colorstrings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DCEJHMCK@allow?5colorstrings?5in?5VGUI?5text@
CONST	SEGMENT
??_C@_0CB@DCEJHMCK@allow?5colorstrings?5in?5VGUI?5text@ DB 'allow colorst'
	DB	'rings in VGUI texts', 00H			; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	010H
	DB	0b8H
voltbl	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_GenerateTexture
_TEXT	SEGMENT
_VGUI_GenerateTexture PROC				; COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 66   : 	if( ++g_textureId >= VGUI_MAX_TEXTURES )

	mov	eax, DWORD PTR _g_textureId
	add	eax, 1
	mov	DWORD PTR _g_textureId, eax
	cmp	DWORD PTR _g_textureId, 2048		; 00000800H
	jl	SHORT $LN2@VGUI_Gener

; 67   : 		Host_Error( "VGUI_GenerateTexture: VGUI_MAX_TEXTURES limit exceeded\n" );

	push	OFFSET ??_C@_0DI@PLGIOENM@VGUI_GenerateTexture?3?5VGUI_MAX_@
	call	_Host_Error
	add	esp, 4
$LN2@VGUI_Gener:

; 68   : 	return g_textureId;

	mov	eax, DWORD PTR _g_textureId

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_GenerateTexture ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_DrawBuffer
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_numVerts$ = 12						; size = 4
_VGUI_DrawBuffer PROC					; COMDAT

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 199  : 	if( numVerts <= 0 ) return;

	cmp	DWORD PTR _numVerts$[ebp], 0
	jg	SHORT $LN2@VGUI_DrawB
	jmp	$LN1@VGUI_DrawB
$LN2@VGUI_DrawB:

; 200  : 
; 201  : 	pglEnable( GL_BLEND );

	push	3042					; 00000be2H
	call	DWORD PTR _pglEnable

; 202  : 	pglEnable( GL_ALPHA_TEST );

	push	3008					; 00000bc0H
	call	DWORD PTR _pglEnable

; 203  : 	pglBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );

	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR _pglBlendFunc

; 204  : 	pglTexEnvi( GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE );

	push	8448					; 00002100H
	push	8704					; 00002200H
	push	8960					; 00002300H
	call	DWORD PTR _pglTexEnvi

; 205  : 
; 206  : 	pglEnableClientState( GL_VERTEX_ARRAY );

	push	32884					; 00008074H
	call	DWORD PTR _pglEnableClientState

; 207  : 	pglEnableClientState( GL_TEXTURE_COORD_ARRAY );

	push	32888					; 00008078H
	call	DWORD PTR _pglEnableClientState

; 208  : 	pglEnableClientState( GL_COLOR_ARRAY );

	push	32886					; 00008076H
	call	DWORD PTR _pglEnableClientState

; 209  : 
; 210  : 	pglTexCoordPointer( 2, GL_FLOAT, sizeof( vpoint_t ), &buffer->coord[0] );

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _buffer$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	push	eax
	push	20					; 00000014H
	push	5126					; 00001406H
	push	2
	call	DWORD PTR _pglTexCoordPointer

; 211  : 	pglColorPointer( 4, GL_UNSIGNED_BYTE, sizeof( vpoint_t ), &buffer->color[0] );

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _buffer$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	push	eax
	push	20					; 00000014H
	push	5121					; 00001401H
	push	4
	call	DWORD PTR _pglColorPointer

; 212  : 	pglVertexPointer( 2, GL_FLOAT, sizeof( vpoint_t ), &buffer->point[0] );

	mov	eax, 4
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	20					; 00000014H
	push	5126					; 00001406H
	push	2
	call	DWORD PTR _pglVertexPointer

; 213  : 	pglDrawArrays( GL_QUADS, 0, numVerts );

	mov	eax, DWORD PTR _numVerts$[ebp]
	push	eax
	push	0
	push	7
	call	DWORD PTR _pglDrawArrays

; 214  : 
; 215  : 	pglDisableClientState( GL_VERTEX_ARRAY );

	push	32884					; 00008074H
	call	DWORD PTR _pglDisableClientState

; 216  : 	pglDisableClientState( GL_TEXTURE_COORD_ARRAY );

	push	32888					; 00008078H
	call	DWORD PTR _pglDisableClientState

; 217  : 	pglDisableClientState( GL_COLOR_ARRAY );

	push	32886					; 00008076H
	call	DWORD PTR _pglDisableClientState
$LN1@VGUI_DrawB:

; 218  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_DrawBuffer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_DrawQuad
_TEXT	SEGMENT
_ul$ = 8						; size = 4
_lr$ = 12						; size = 4
_VGUI_DrawQuad PROC					; COMDAT

; 174  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 175  : 	pglBegin( GL_QUADS );

	push	7
	call	DWORD PTR _pglBegin

; 176  : 		pglTexCoord2f( ul->coord[0], ul->coord[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglTexCoord2f

; 177  : 		pglVertex2f( ul->point[0], ul->point[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglVertex2f

; 178  : 
; 179  : 		pglTexCoord2f( lr->coord[0], ul->coord[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglTexCoord2f

; 180  : 		pglVertex2f( lr->point[0], ul->point[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglVertex2f

; 181  : 
; 182  : 		pglTexCoord2f( lr->coord[0], lr->coord[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglTexCoord2f

; 183  : 		pglVertex2f( lr->point[0], lr->point[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglVertex2f

; 184  : 
; 185  : 		pglTexCoord2f( ul->coord[0], lr->coord[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglTexCoord2f

; 186  : 		pglVertex2f( ul->point[0], lr->point[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _lr$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ul$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _pglVertex2f

; 187  : 	pglEnd();

	call	DWORD PTR _pglEnd

; 188  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_DrawQuad ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_UploadTexture
_TEXT	SEGMENT
_texName$ = -72						; size = 32
_r_image$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_id$ = 8						; size = 4
_buffer$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_VGUI_UploadTexture PROC				; COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 80   : 	rgbdata_t	r_image;
; 81   : 	char	texName[32];
; 82   : 
; 83   : 	if( id <= 0 || id >= VGUI_MAX_TEXTURES )

	cmp	DWORD PTR _id$[ebp], 0
	jle	SHORT $LN3@VGUI_Uploa
	cmp	DWORD PTR _id$[ebp], 2048		; 00000800H
	jl	SHORT $LN2@VGUI_Uploa
$LN3@VGUI_Uploa:

; 84   : 	{
; 85   : 		Con_DPrintf( S_ERROR "VGUI_UploadTexture: bad texture %i. Ignored\n", id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@MKFLDLKD@?$FO1Error?3?$FO7?5VGUI_UploadTexture?3?5@
	call	_Con_DPrintf
	add	esp, 8

; 86   : 		return;

	jmp	SHORT $LN1@VGUI_Uploa
$LN2@VGUI_Uploa:

; 87   : 	}
; 88   : 
; 89   : 	Q_snprintf( texName, sizeof( texName ), "*vgui%i", id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	push	OFFSET ??_C@_07JFIHAHCI@?$CKvgui?$CFi@
	push	32					; 00000020H
	lea	ecx, DWORD PTR _texName$[ebp]
	push	ecx
	call	_Q_snprintf
	add	esp, 16					; 00000010H

; 90   : 	memset( &r_image, 0, sizeof( r_image ));

	push	36					; 00000024H
	push	0
	lea	eax, DWORD PTR _r_image$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 91   : 
; 92   : 	r_image.width = width;

	mov	ax, WORD PTR _width$[ebp]
	mov	WORD PTR _r_image$[ebp], ax

; 93   : 	r_image.height = height;

	mov	ax, WORD PTR _height$[ebp]
	mov	WORD PTR _r_image$[ebp+2], ax

; 94   : 	r_image.type = PF_RGBA_32;

	mov	DWORD PTR _r_image$[ebp+8], 3

; 95   : 	r_image.size = r_image.width * r_image.height * 4;

	movzx	eax, WORD PTR _r_image$[ebp]
	movzx	ecx, WORD PTR _r_image$[ebp+2]
	imul	eax, ecx
	shl	eax, 2
	mov	DWORD PTR _r_image$[ebp+32], eax

; 96   : 	r_image.flags = IMAGE_HAS_COLOR|IMAGE_HAS_ALPHA;

	mov	DWORD PTR _r_image$[ebp+12], 6

; 97   : 	r_image.buffer = (byte *)buffer;

	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _r_image$[ebp+24], eax

; 98   : 
; 99   : 	g_textures[id] = GL_LoadTextureInternal( texName, &r_image, TF_IMAGE );

	push	0
	push	6144					; 00001800H
	lea	eax, DWORD PTR _r_image$[ebp]
	push	eax
	lea	ecx, DWORD PTR _texName$[ebp]
	push	ecx
	call	_GL_LoadTextureFromBuffer
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR _g_textures[edx*4], eax
$LN1@VGUI_Uploa:

; 100  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_UploadTexture ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_EnableTexture
_TEXT	SEGMENT
_enable$ = 8						; size = 4
_VGUI_EnableTexture PROC				; COMDAT

; 161  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 162  : 	if( enable ) pglEnable( GL_TEXTURE_2D );

	cmp	DWORD PTR _enable$[ebp], 0
	je	SHORT $LN2@VGUI_Enabl
	push	3553					; 00000de1H
	call	DWORD PTR _pglEnable
	jmp	SHORT $LN1@VGUI_Enabl
$LN2@VGUI_Enabl:

; 163  : 	else pglDisable( GL_TEXTURE_2D );

	push	3553					; 00000de1H
	call	DWORD PTR _pglDisable
$LN1@VGUI_Enabl:

; 164  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_EnableTexture ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_BindTexture
_TEXT	SEGMENT
_id$ = 8						; size = 4
_VGUI_BindTexture PROC					; COMDAT

; 141  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 142  : 	if( id > 0 && id < VGUI_MAX_TEXTURES && g_textures[id] )

	cmp	DWORD PTR _id$[ebp], 0
	jle	SHORT $LN2@VGUI_BindT
	cmp	DWORD PTR _id$[ebp], 2048		; 00000800H
	jge	SHORT $LN2@VGUI_BindT
	mov	eax, DWORD PTR _id$[ebp]
	cmp	DWORD PTR _g_textures[eax*4], 0
	je	SHORT $LN2@VGUI_BindT

; 143  : 	{
; 144  : 		GL_Bind( GL_TEXTURE0, g_textures[id] );

	mov	eax, DWORD PTR _id$[ebp]
	mov	ecx, DWORD PTR _g_textures[eax*4]
	push	ecx
	push	0
	call	_GL_Bind
	add	esp, 8

; 145  : 	}

	jmp	SHORT $LN1@VGUI_BindT
$LN2@VGUI_BindT:

; 146  : 	else
; 147  : 	{
; 148  : 		// NOTE: same as bogus index 2700 in GoldSrc
; 149  : 		GL_Bind( GL_TEXTURE0, g_textures[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _g_textures[eax]
	push	ecx
	push	0
	call	_GL_Bind
	add	esp, 8
$LN1@VGUI_BindT:

; 150  : 	}
; 151  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_BindTexture ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_SetupDrawingImage
_TEXT	SEGMENT
_pColor$ = 8						; size = 4
_VGUI_SetupDrawingImage PROC				; COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 126  : 	pglEnable( GL_BLEND );

	push	3042					; 00000be2H
	call	DWORD PTR _pglEnable

; 127  : 	pglEnable( GL_ALPHA_TEST );

	push	3008					; 00000bc0H
	call	DWORD PTR _pglEnable

; 128  : 	pglBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );

	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR _pglBlendFunc

; 129  : 	pglTexEnvi( GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE );

	push	8448					; 00002100H
	push	8704					; 00002200H
	push	8960					; 00002300H
	call	DWORD PTR _pglTexEnvi

; 130  : 	pglColor4ub( pColor[0], pColor[1], pColor[2], 255 - pColor[3] );

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _pColor$[ebp]
	mov	eax, 255				; 000000ffH
	sub	eax, DWORD PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _pColor$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _pColor$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _pColor$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	push	ecx
	call	DWORD PTR _pglColor4ub

; 131  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_SetupDrawingImage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_SetupDrawingRect
_TEXT	SEGMENT
_pColor$ = 8						; size = 4
_VGUI_SetupDrawingRect PROC				; COMDAT

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 111  : 	pglEnable( GL_BLEND );

	push	3042					; 00000be2H
	call	DWORD PTR _pglEnable

; 112  : 	pglDisable( GL_ALPHA_TEST );

	push	3008					; 00000bc0H
	call	DWORD PTR _pglDisable

; 113  : 	pglBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );

	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR _pglBlendFunc

; 114  : 	pglColor4ub( pColor[0], pColor[1], pColor[2], 255 - pColor[3] );

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _pColor$[ebp]
	mov	eax, 255				; 000000ffH
	sub	eax, DWORD PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _pColor$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _pColor$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	push	eax
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _pColor$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	push	ecx
	call	DWORD PTR _pglColor4ub

; 115  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_SetupDrawingRect ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_DrawShutdown
_TEXT	SEGMENT
_i$ = -4						; size = 4
_VGUI_DrawShutdown PROC					; COMDAT

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 49   : 	int	i;
; 50   : 
; 51   : 	for( i = 1; i < g_textureId; i++ )

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@VGUI_DrawS
$LN2@VGUI_DrawS:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@VGUI_DrawS:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _g_textureId
	jge	SHORT $LN1@VGUI_DrawS

; 52   : 	{
; 53   : 		GL_FreeTexture( g_textures[i] );

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _g_textures[eax*4]
	push	ecx
	call	_GL_FreeTexture
	add	esp, 4

; 54   : 	}

	jmp	SHORT $LN2@VGUI_DrawS
$LN1@VGUI_DrawS:

; 55   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_DrawShutdown ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\client\vgui\vgui_draw.c
;	COMDAT _VGUI_DrawInit
_TEXT	SEGMENT
_VGUI_DrawInit PROC					; COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 34   : 	memset( g_textures, 0, sizeof( g_textures ));

	push	8192					; 00002000H
	push	0
	push	OFFSET _g_textures
	call	_memset
	add	esp, 12					; 0000000cH

; 35   : 	g_textureId = 0;

	mov	DWORD PTR _g_textureId, 0

; 36   : 
; 37   : 	vgui_colorstrings = Cvar_Get( "vgui_colorstrings", "0", FCVAR_ARCHIVE, "allow colorstrings in VGUI texts" );

	push	OFFSET ??_C@_0CB@DCEJHMCK@allow?5colorstrings?5in?5VGUI?5text@
	push	1
	push	OFFSET ??_C@_01GBGANLPD@0@
	push	OFFSET ??_C@_0BC@NLKACJHH@vgui_colorstrings@
	call	_Cvar_Get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _vgui_colorstrings, eax

; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VGUI_DrawInit ENDP
_TEXT	ENDS
END
