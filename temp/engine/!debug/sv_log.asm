; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32705.0 

	TITLE	D:\DevDragon\XashFE\dev\src\temp\engine\!debug\sv_log.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_Log_Printf
PUBLIC	_Log_Close
PUBLIC	_Log_Open
PUBLIC	_Log_PrintServerVars
PUBLIC	_SV_ServerLog_f
PUBLIC	??_C@_0CB@DLNJIJDM@Server?5logging?5data?5to?5console?4@ ; `string'
PUBLIC	??_C@_07CFKPIHBM@logsdir@			; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3@				; `string'
PUBLIC	??_C@_02DJGKEECL@?4?4@				; `string'
PUBLIC	??_C@_0N@KLJKEJBN@?$CFs?1L?$CF02i?$CF02i@	; `string'
PUBLIC	??_C@_0P@HDGOPPEA@logs?1L?$CF02i?$CF02i@	; `string'
PUBLIC	??_C@_0L@ODCAIOHC@?$CFs?$CF03i?4log@		; `string'
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_0CA@EMGIEHBC@Server?5logging?5data?5to?5file?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0DD@EFKOCGDF@Unable?5to?5open?5logfiles?5under?5?$CF@ ; `string'
PUBLIC	??_C@_04PNCPDLMM@0?499@				; `string'
PUBLIC	??_C@_08PCDFGCKJ@?$CKgamedir@			; `string'
PUBLIC	??_C@_0DP@PKMHDLCG@Log?5file?5started?5?$CIfile?5?$CC?$CFs?$CC?$CJ?5?$CIg@ ; `string'
PUBLIC	??_C@_0BB@EFMJOLBH@Log?5file?5closed?6@		; `string'
PUBLIC	??_C@_0CC@IEFELMFM@?$CF02i?1?$CF02i?1?$CF04i?5?9?5?$CF02i?3?$CF02i?3?$CF02i@ ; `string'
PUBLIC	??_C@_06GGJDBBMC@log?5?$CFs@			; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0BJ@KCLPALDI@Server?5cvar?5?$CC?$CFs?$CC?5?$DN?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BE@FKJBHINL@Server?5cvars?5start?6@	; `string'
PUBLIC	??_C@_0BC@KFLKCLGK@Server?5cvars?5end?6@	; `string'
PUBLIC	??_C@_0BH@CBLKPCBM@usage?3?5log?5?$DM?5on?$HMoff?5?$DO?6@ ; `string'
PUBLIC	??_C@_0BD@JDPJEDJF@currently?5logging?6@	; `string'
PUBLIC	??_C@_0BH@GPIOANHL@not?5currently?5logging?6@	; `string'
PUBLIC	??_C@_03MCADLMAF@off@				; `string'
PUBLIC	??_C@_02LIELOMNJ@on@				; `string'
PUBLIC	??_C@_0BL@PKEJJPPJ@log?3?5unknown?5parameter?5?$CFs?6@ ; `string'
PUBLIC	__real@00000000
EXTRN	__imp___localtime64:PROC
EXTRN	__imp___time64:PROC
EXTRN	_Cmd_Argc:PROC
EXTRN	_Cmd_Argv:PROC
EXTRN	_Q_strlen:PROC
EXTRN	_Q_strnicmp:PROC
EXTRN	_Q_strstr:PROC
EXTRN	_Q_vsnprintf:PROC
EXTRN	_Q_snprintf:PROC
EXTRN	_Cvar_LookupVars:PROC
EXTRN	_Cvar_VariableString:PROC
EXTRN	_FS_Open:PROC
EXTRN	_FS_Printf:PROC
EXTRN	_FS_FileExists:PROC
EXTRN	_FS_Close:PROC
EXTRN	_Q_buildnum:PROC
EXTRN	_Con_Printf:PROC
EXTRN	_SV_Serverinfo:PROC
EXTRN	_Info_ValueForKey:PROC
EXTRN	_Netchan_OutOfBandPrint:PROC
EXTRN	_SV_ClientPrintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_svs:BYTE
EXTRN	_mp_logecho:BYTE
EXTRN	_mp_logfile:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?string@?1??Log_Printf@@9@9 DB 0400H DUP (?)		; `Log_Printf'::`2'::string
_BSS	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BL@PKEJJPPJ@log?3?5unknown?5parameter?5?$CFs?6@
CONST	SEGMENT
??_C@_0BL@PKEJJPPJ@log?3?5unknown?5parameter?5?$CFs?6@ DB 'log: unknown p'
	DB	'arameter %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LIELOMNJ@on@
CONST	SEGMENT
??_C@_02LIELOMNJ@on@ DB 'on', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCADLMAF@off@
CONST	SEGMENT
??_C@_03MCADLMAF@off@ DB 'off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GPIOANHL@not?5currently?5logging?6@
CONST	SEGMENT
??_C@_0BH@GPIOANHL@not?5currently?5logging?6@ DB 'not currently logging', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDPJEDJF@currently?5logging?6@
CONST	SEGMENT
??_C@_0BD@JDPJEDJF@currently?5logging?6@ DB 'currently logging', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CBLKPCBM@usage?3?5log?5?$DM?5on?$HMoff?5?$DO?6@
CONST	SEGMENT
??_C@_0BH@CBLKPCBM@usage?3?5log?5?$DM?5on?$HMoff?5?$DO?6@ DB 'usage: log '
	DB	'< on|off >', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KFLKCLGK@Server?5cvars?5end?6@
CONST	SEGMENT
??_C@_0BC@KFLKCLGK@Server?5cvars?5end?6@ DB 'Server cvars end', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKJBHINL@Server?5cvars?5start?6@
CONST	SEGMENT
??_C@_0BE@FKJBHINL@Server?5cvars?5start?6@ DB 'Server cvars start', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KCLPALDI@Server?5cvar?5?$CC?$CFs?$CC?5?$DN?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BJ@KCLPALDI@Server?5cvar?5?$CC?$CFs?$CC?5?$DN?5?$CC?$CFs?$CC?6@ DB 'S'
	DB	'erver cvar "%s" = "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GGJDBBMC@log?5?$CFs@
CONST	SEGMENT
??_C@_06GGJDBBMC@log?5?$CFs@ DB 'log %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IEFELMFM@?$CF02i?1?$CF02i?1?$CF04i?5?9?5?$CF02i?3?$CF02i?3?$CF02i@
CONST	SEGMENT
??_C@_0CC@IEFELMFM@?$CF02i?1?$CF02i?1?$CF04i?5?9?5?$CF02i?3?$CF02i?3?$CF02i@ DB '%'
	DB	'02i/%02i/%04i - %02i:%02i:%02i: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EFMJOLBH@Log?5file?5closed?6@
CONST	SEGMENT
??_C@_0BB@EFMJOLBH@Log?5file?5closed?6@ DB 'Log file closed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@PKMHDLCG@Log?5file?5started?5?$CIfile?5?$CC?$CFs?$CC?$CJ?5?$CIg@
CONST	SEGMENT
??_C@_0DP@PKMHDLCG@Log?5file?5started?5?$CIfile?5?$CC?$CFs?$CC?$CJ?5?$CIg@ DB 'L'
	DB	'og file started (file "%s") (game "%s") (version "%i/%s/%d")', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCDFGCKJ@?$CKgamedir@
CONST	SEGMENT
??_C@_08PCDFGCKJ@?$CKgamedir@ DB '*gamedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNCPDLMM@0?499@
CONST	SEGMENT
??_C@_04PNCPDLMM@0?499@ DB '0.99', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@EFKOCGDF@Unable?5to?5open?5logfiles?5under?5?$CF@
CONST	SEGMENT
??_C@_0DD@EFKOCGDF@Unable?5to?5open?5logfiles?5under?5?$CF@ DB 'Unable to'
	DB	' open logfiles under %s', 0aH, 'Logging disabled', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EMGIEHBC@Server?5logging?5data?5to?5file?5?$CFs?6@
CONST	SEGMENT
??_C@_0CA@EMGIEHBC@Server?5logging?5data?5to?5file?5?$CFs?6@ DB 'Server l'
	DB	'ogging data to file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODCAIOHC@?$CFs?$CF03i?4log@
CONST	SEGMENT
??_C@_0L@ODCAIOHC@?$CFs?$CF03i?4log@ DB '%s%03i.log', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HDGOPPEA@logs?1L?$CF02i?$CF02i@
CONST	SEGMENT
??_C@_0P@HDGOPPEA@logs?1L?$CF02i?$CF02i@ DB 'logs/L%02i%02i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLJKEJBN@?$CFs?1L?$CF02i?$CF02i@
CONST	SEGMENT
??_C@_0N@KLJKEJBN@?$CFs?1L?$CF02i?$CF02i@ DB '%s/L%02i%02i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DJGKEECL@?4?4@
CONST	SEGMENT
??_C@_02DJGKEECL@?4?4@ DB '..', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CFKPIHBM@logsdir@
CONST	SEGMENT
??_C@_07CFKPIHBM@logsdir@ DB 'logsdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLNJIJDM@Server?5logging?5data?5to?5console?4@
CONST	SEGMENT
??_C@_0CB@DLNJIJDM@Server?5logging?5data?5to?5console?4@ DB 'Server loggi'
	DB	'ng data to console.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	010H
	DW	025eH
voltbl	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _Log_PrintServerCvar
_TEXT	SEGMENT
_var_name$ = 8						; size = 4
_var_value$ = 12					; size = 4
_unused2$ = 16						; size = 4
_unused3$ = 20						; size = 4
_Log_PrintServerCvar PROC				; COMDAT

; 136  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 137  : 	Log_Printf( "Server cvar \"%s\" = \"%s\"\n", var_name, var_value );

	mov	eax, DWORD PTR _var_value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _var_name$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BJ@KCLPALDI@Server?5cvar?5?$CC?$CFs?$CC?5?$DN?5?$CC?$CFs?$CC?6@
	call	_Log_Printf
	add	esp, 12					; 0000000cH

; 138  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_PrintServerCvar ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _SV_ServerLog_f
_TEXT	SEGMENT
_cl$ = 8						; size = 4
_SV_ServerLog_f PROC					; COMDAT

; 163  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 164  : 	if( svs.maxclients <= 1 )

	cmp	DWORD PTR _svs+16, 1
	jg	SHORT $LN2@SV_ServerL

; 165  : 		return false;

	xor	eax, eax
	jmp	$LN1@SV_ServerL
$LN2@SV_ServerL:

; 166  : 
; 167  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN3@SV_ServerL

; 168  : 	{
; 169  : 		SV_ClientPrintf( cl, "usage: log < on|off >\n" );

	push	OFFSET ??_C@_0BH@CBLKPCBM@usage?3?5log?5?$DM?5on?$HMoff?5?$DO?6@
	mov	eax, DWORD PTR _cl$[ebp]
	push	eax
	call	_SV_ClientPrintf
	add	esp, 8

; 170  : 
; 171  : 		if( svs.log.active )

	cmp	DWORD PTR _svs+28, 0
	je	SHORT $LN4@SV_ServerL

; 172  : 			SV_ClientPrintf( cl, "currently logging\n" );

	push	OFFSET ??_C@_0BD@JDPJEDJF@currently?5logging?6@
	mov	eax, DWORD PTR _cl$[ebp]
	push	eax
	call	_SV_ClientPrintf
	add	esp, 8
	jmp	SHORT $LN5@SV_ServerL
$LN4@SV_ServerL:

; 173  : 		else SV_ClientPrintf( cl, "not currently logging\n" );

	push	OFFSET ??_C@_0BH@GPIOANHL@not?5currently?5logging?6@
	mov	eax, DWORD PTR _cl$[ebp]
	push	eax
	call	_SV_ClientPrintf
	add	esp, 8
$LN5@SV_ServerL:

; 174  : 		return true;

	mov	eax, 1
	jmp	$LN1@SV_ServerL
$LN3@SV_ServerL:

; 175  : 	}
; 176  : 
; 177  : 	if( !Q_stricmp( Cmd_Argv( 1 ), "off" ))

	push	99999					; 0001869fH
	push	OFFSET ??_C@_03MCADLMAF@off@
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@SV_ServerL

; 178  : 	{
; 179  : 		if( svs.log.active )

	cmp	DWORD PTR _svs+28, 0
	je	SHORT $LN8@SV_ServerL

; 180  : 			Log_Close();

	call	_Log_Close
$LN8@SV_ServerL:

; 181  : 	}

	jmp	SHORT $LN7@SV_ServerL
$LN6@SV_ServerL:

; 182  : 	else if( !Q_stricmp( Cmd_Argv( 1 ), "on" ))

	push	99999					; 0001869fH
	push	OFFSET ??_C@_02LIELOMNJ@on@
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@SV_ServerL

; 183  : 	{
; 184  : 		svs.log.active = true;

	mov	DWORD PTR _svs+28, 1

; 185  : 		Log_Open();

	call	_Log_Open

; 186  : 	}

	jmp	SHORT $LN7@SV_ServerL
$LN9@SV_ServerL:

; 187  : 	else
; 188  : 	{
; 189  : 		SV_ClientPrintf( cl, "log: unknown parameter %s\n", Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BL@PKEJJPPJ@log?3?5unknown?5parameter?5?$CFs?6@
	mov	eax, DWORD PTR _cl$[ebp]
	push	eax
	call	_SV_ClientPrintf
	add	esp, 12					; 0000000cH
$LN7@SV_ServerL:

; 190  : 	}
; 191  : 
; 192  : 	return true;

	mov	eax, 1
$LN1@SV_ServerL:

; 193  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ServerLog_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _Log_PrintServerVars
_TEXT	SEGMENT
_Log_PrintServerVars PROC				; COMDAT

; 147  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 148  : 	if( !svs.log.active )

	cmp	DWORD PTR _svs+28, 0
	jne	SHORT $LN2@Log_PrintS

; 149  : 		return;

	jmp	SHORT $LN1@Log_PrintS
$LN2@Log_PrintS:

; 150  : 
; 151  : 	Log_Printf( "Server cvars start\n" );

	push	OFFSET ??_C@_0BE@FKJBHINL@Server?5cvars?5start?6@
	call	_Log_Printf
	add	esp, 4

; 152  : 	Cvar_LookupVars( FCVAR_SERVER, NULL, NULL, Log_PrintServerCvar );

	push	OFFSET _Log_PrintServerCvar
	push	0
	push	0
	push	4
	call	_Cvar_LookupVars
	add	esp, 16					; 00000010H

; 153  : 	Log_Printf( "Server cvars end\n" );

	push	OFFSET ??_C@_0BC@KFLKCLGK@Server?5cvars?5end?6@
	call	_Log_Printf
	add	esp, 4
$LN1@Log_PrintS:

; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_PrintServerVars ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _Log_Open
_TEXT	SEGMENT
_i$ = -548						; size = 4
_temp$ = -544						; size = 4
_fp$ = -540						; size = 4
_szTestFile$ = -536					; size = 260
_szFileBase$ = -276					; size = 260
_today$ = -16						; size = 4
_ltime$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_Log_Open PROC						; COMDAT

; 20   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 676				; 000002a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 21   : 	time_t		ltime;
; 22   : 	struct tm		*today;
; 23   : 	char		szFileBase[ MAX_OSPATH ];
; 24   : 	char		szTestFile[ MAX_OSPATH ];
; 25   : 	file_t		*fp = NULL;

	mov	DWORD PTR _fp$[ebp], 0

; 26   : 	char		*temp;
; 27   : 	int		i;
; 28   : 
; 29   : 	if( !svs.log.active )

	cmp	DWORD PTR _svs+28, 0
	jne	SHORT $LN5@Log_Open

; 30   : 		return;

	jmp	$LN1@Log_Open
$LN5@Log_Open:

; 31   : 
; 32   : 	if( !mp_logfile.value )

	movss	xmm0, DWORD PTR _mp_logfile+12
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@Log_Open

; 33   : 	{
; 34   : 		Con_Printf( "Server logging data to console.\n" );

	push	OFFSET ??_C@_0CB@DLNJIJDM@Server?5logging?5data?5to?5console?4@
	call	_Con_Printf
	add	esp, 4

; 35   : 		return;

	jmp	$LN1@Log_Open
$LN6@Log_Open:

; 36   : 	}
; 37   : 
; 38   : 	Log_Close();

	call	_Log_Close

; 39   : 
; 40   : 	// Find a new log file slot
; 41   : 	time( &ltime );

	lea	eax, DWORD PTR _ltime$[ebp]
	push	eax
	call	_time
	add	esp, 4

; 42   : 	today = localtime( &ltime );

	lea	eax, DWORD PTR _ltime$[ebp]
	push	eax
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _today$[ebp], eax

; 43   : 	temp = Cvar_VariableString( "logsdir" );

	push	OFFSET ??_C@_07CFKPIHBM@logsdir@
	call	_Cvar_VariableString
	add	esp, 4
	mov	DWORD PTR _temp$[ebp], eax

; 44   : 
; 45   : 	if( temp && Q_strlen( temp ) > 0 && !Q_strstr( temp, ":" ) && !Q_strstr( temp, ".." ))

	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN7@Log_Open
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_Q_strlen
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN7@Log_Open
	push	OFFSET ??_C@_01JLIPDDHJ@?3@
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_Q_strstr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@Log_Open
	push	OFFSET ??_C@_02DJGKEECL@?4?4@
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_Q_strstr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@Log_Open

; 46   : 		Q_snprintf( szFileBase, sizeof( szFileBase ), "%s/L%02i%02i", temp, today->tm_mon + 1, today->tm_mday );

	mov	eax, DWORD PTR _today$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _today$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@KLJKEJBN@?$CFs?1L?$CF02i?$CF02i@
	push	260					; 00000104H
	lea	edx, DWORD PTR _szFileBase$[ebp]
	push	edx
	call	_Q_snprintf
	add	esp, 24					; 00000018H
	jmp	SHORT $LN8@Log_Open
$LN7@Log_Open:

; 47   : 	else Q_snprintf( szFileBase, sizeof( szFileBase ), "logs/L%02i%02i", today->tm_mon + 1, today->tm_mday );

	mov	eax, DWORD PTR _today$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _today$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_0P@HDGOPPEA@logs?1L?$CF02i?$CF02i@
	push	260					; 00000104H
	lea	ecx, DWORD PTR _szFileBase$[ebp]
	push	ecx
	call	_Q_snprintf
	add	esp, 20					; 00000014H
$LN8@Log_Open:

; 48   : 
; 49   : 	for ( i = 0; i < 1000; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Log_Open
$LN2@Log_Open:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Log_Open:
	cmp	DWORD PTR _i$[ebp], 1000		; 000003e8H
	jge	$LN3@Log_Open

; 50   : 	{
; 51   : 		Q_snprintf( szTestFile, sizeof( szTestFile ), "%s%03i.log", szFileBase, i );

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szFileBase$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@ODCAIOHC@?$CFs?$CF03i?4log@
	push	260					; 00000104H
	lea	edx, DWORD PTR _szTestFile$[ebp]
	push	edx
	call	_Q_snprintf
	add	esp, 20					; 00000014H

; 52   : 
; 53   : 		if( FS_FileExists( szTestFile, false ))

	push	0
	lea	eax, DWORD PTR _szTestFile$[ebp]
	push	eax
	call	_FS_FileExists
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@Log_Open

; 54   : 			continue;

	jmp	SHORT $LN2@Log_Open
$LN9@Log_Open:

; 55   : 
; 56   : 		fp = FS_Open( szTestFile, "w", true );

	push	1
	push	OFFSET ??_C@_01NOFIACDB@w@
	lea	eax, DWORD PTR _szTestFile$[ebp]
	push	eax
	call	_FS_Open
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 57   : 		if( fp )

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN10@Log_Open

; 58   : 		{
; 59   : 			Con_Printf( "Server logging data to file %s\n", szTestFile );

	lea	eax, DWORD PTR _szTestFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@EMGIEHBC@Server?5logging?5data?5to?5file?5?$CFs?6@
	call	_Con_Printf
	add	esp, 8

; 60   : 		}

	jmp	SHORT $LN11@Log_Open
$LN10@Log_Open:

; 61   : 		else
; 62   : 		{
; 63   : 			i = 1000;

	mov	DWORD PTR _i$[ebp], 1000		; 000003e8H
$LN11@Log_Open:

; 64   : 		}
; 65   : 		break;

	jmp	SHORT $LN3@Log_Open

; 66   : 	}

	jmp	$LN2@Log_Open
$LN3@Log_Open:

; 67   : 
; 68   : 	if( i == 1000 )

	cmp	DWORD PTR _i$[ebp], 1000		; 000003e8H
	jne	SHORT $LN12@Log_Open

; 69   : 	{
; 70   : 		Con_Printf( "Unable to open logfiles under %s\nLogging disabled\n", szFileBase );

	lea	eax, DWORD PTR _szFileBase$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@EFKOCGDF@Unable?5to?5open?5logfiles?5under?5?$CF@
	call	_Con_Printf
	add	esp, 8

; 71   : 		svs.log.active = false;

	mov	DWORD PTR _svs+28, 0

; 72   : 		return;

	jmp	SHORT $LN1@Log_Open
$LN12@Log_Open:

; 73   : 	}
; 74   : 
; 75   : 	if( fp ) svs.log.file = fp;

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN13@Log_Open
	mov	eax, DWORD PTR _fp$[ebp]
	mov	DWORD PTR _svs+56, eax
$LN13@Log_Open:

; 76   : 	Log_Printf( "Log file started (file \"%s\") (game \"%s\") (version \"%i/%s/%d\")\n",

	call	_Q_buildnum
	push	eax
	push	OFFSET ??_C@_04PNCPDLMM@0?499@
	push	49					; 00000031H
	push	OFFSET ??_C@_08PCDFGCKJ@?$CKgamedir@
	call	_SV_Serverinfo
	push	eax
	call	_Info_ValueForKey
	add	esp, 8
	push	eax
	lea	eax, DWORD PTR _szTestFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0DP@PKMHDLCG@Log?5file?5started?5?$CIfile?5?$CC?$CFs?$CC?$CJ?5?$CIg@
	call	_Log_Printf
	add	esp, 24					; 00000018H
$LN1@Log_Open:

; 77   : 	szTestFile, Info_ValueForKey( SV_Serverinfo(), "*gamedir" ), PROTOCOL_VERSION, XASH_VERSION, Q_buildnum() );
; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_Open ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _Log_Close
_TEXT	SEGMENT
_Log_Close PROC						; COMDAT

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 82   : 	if( svs.log.file )

	cmp	DWORD PTR _svs+56, 0
	je	SHORT $LN2@Log_Close

; 83   : 	{
; 84   : 		Log_Printf( "Log file closed\n" );

	push	OFFSET ??_C@_0BB@EFMJOLBH@Log?5file?5closed?6@
	call	_Log_Printf
	add	esp, 4

; 85   : 		FS_Close( svs.log.file );

	mov	eax, DWORD PTR _svs+56
	push	eax
	call	_FS_Close
	add	esp, 4
$LN2@Log_Close:

; 86   : 	}
; 87   : 	svs.log.file = NULL;

	mov	DWORD PTR _svs+56, 0

; 88   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_Close ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\server\sv_log.c
;	COMDAT _Log_Printf
_TEXT	SEGMENT
_today$ = -20						; size = 4
_ltime$ = -16						; size = 8
_p$ = -8						; size = 4
_argptr$ = -4						; size = 4
_fmt$ = 8						; size = 4
_Log_Printf PROC					; COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi

; 99   : 	va_list		argptr;
; 100  : 	static char	string[1024];
; 101  : 	char		*p;
; 102  : 	time_t		ltime;
; 103  : 	struct tm		*today;
; 104  : 
; 105  : 	if( !svs.log.active )

	cmp	DWORD PTR _svs+28, 0
	jne	SHORT $LN2@Log_Printf

; 106  : 		return;

	jmp	$LN6@Log_Printf
$LN2@Log_Printf:

; 107  : 
; 108  : 	time( &ltime );

	lea	eax, DWORD PTR _ltime$[ebp]
	push	eax
	call	_time
	add	esp, 4

; 109  : 	today = localtime( &ltime );

	lea	eax, DWORD PTR _ltime$[ebp]
	push	eax
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _today$[ebp], eax

; 110  : 
; 111  : 	Q_snprintf( string, sizeof( string ), "%02i/%02i/%04i - %02i:%02i:%02i: ",

	mov	eax, DWORD PTR _today$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _today$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _today$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _today$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1900				; 0000076cH
	push	ecx
	mov	edx, DWORD PTR _today$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _today$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	push	edx
	push	OFFSET ??_C@_0CC@IEFELMFM@?$CF02i?1?$CF02i?1?$CF04i?5?9?5?$CF02i?3?$CF02i?3?$CF02i@
	push	1024					; 00000400H
	push	OFFSET ?string@?1??Log_Printf@@9@9
	call	_Q_snprintf
	add	esp, 36					; 00000024H

; 112  : 		today->tm_mon+1, today->tm_mday, 1900 + today->tm_year, today->tm_hour, today->tm_min, today->tm_sec );
; 113  : 
; 114  : 	p = string + Q_strlen( string );

	push	OFFSET ?string@?1??Log_Printf@@9@9
	call	_Q_strlen
	add	esp, 4
	add	eax, OFFSET ?string@?1??Log_Printf@@9@9
	mov	DWORD PTR _p$[ebp], eax

; 115  : 
; 116  : 	va_start( argptr, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 117  : 	Q_vsnprintf( p, sizeof( string ) - Q_strlen( string ), fmt, argptr );

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET ?string@?1??Log_Printf@@9@9
	call	_Q_strlen
	add	esp, 4
	mov	edx, 1024				; 00000400H
	sub	edx, eax
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 118  : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 119  : 
; 120  : 	if( svs.log.net_log )

	cmp	DWORD PTR _svs+32, 0
	je	SHORT $LN3@Log_Printf

; 121  : 		Netchan_OutOfBandPrint( NS_SERVER, svs.log.net_address, "log %s", string );

	push	OFFSET ?string@?1??Log_Printf@@9@9
	push	OFFSET ??_C@_06GGJDBBMC@log?5?$CFs@
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR _svs+36
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _svs+40
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _svs+44
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _svs+48
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _svs+52
	mov	DWORD PTR [eax+16], ecx
	push	1
	call	_Netchan_OutOfBandPrint
	add	esp, 32					; 00000020H
$LN3@Log_Printf:

; 122  : 
; 123  : 	if( svs.log.active && svs.maxclients > 1 )

	cmp	DWORD PTR _svs+28, 0
	je	SHORT $LN6@Log_Printf
	cmp	DWORD PTR _svs+16, 1
	jle	SHORT $LN6@Log_Printf

; 124  : 	{
; 125  : 		// echo to server console
; 126  : 		if( mp_logecho.value ) 

	movss	xmm0, DWORD PTR _mp_logecho+12
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN5@Log_Printf

; 127  : 			Con_Printf( "%s", string );

	push	OFFSET ?string@?1??Log_Printf@@9@9
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	call	_Con_Printf
	add	esp, 8
$LN5@Log_Printf:

; 128  : 
; 129  : 		// echo to log file
; 130  : 		if( svs.log.file && mp_logfile.value )

	cmp	DWORD PTR _svs+56, 0
	je	SHORT $LN6@Log_Printf
	movss	xmm0, DWORD PTR _mp_logfile+12
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN6@Log_Printf

; 131  : 			FS_Printf( svs.log.file, "%s", string );

	push	OFFSET ?string@?1??Log_Printf@@9@9
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	mov	eax, DWORD PTR _svs+56
	push	eax
	call	_FS_Printf
	add	esp, 12					; 0000000cH
$LN6@Log_Printf:

; 132  : 	}
; 133  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_Printf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 551  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 552  :             return _time64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4

; 553  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT

; 528  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 529  :             return _localtime64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4

; 530  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_localtime ENDP
_TEXT	ENDS
END
