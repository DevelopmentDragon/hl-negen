; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32705.0 

	TITLE	D:\DevDragon\XashFE\dev\src\temp\engine\!debug\build.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0M@LBNNNELJ@Jun?518?52023@		; `string'
PUBLIC	??_C@_03JIHJHPIE@Jan@				; `string'
PUBLIC	??_C@_03HJBDCHOM@Feb@				; `string'
PUBLIC	??_C@_03ODNJBKGA@Mar@				; `string'
PUBLIC	??_C@_03LEOLGMJP@Apr@				; `string'
PUBLIC	??_C@_03CNMDKL@May@				; `string'
PUBLIC	??_C@_03IDFGHECI@Jun@				; `string'
PUBLIC	??_C@_03LBGABGKK@Jul@				; `string'
PUBLIC	??_C@_03IFJFEIGA@Aug@				; `string'
PUBLIC	??_C@_03GGCAPAJC@Sep@				; `string'
PUBLIC	??_C@_03BMAOKBAD@Oct@				; `string'
PUBLIC	??_C@_03JPJOFNIA@Nov@				; `string'
PUBLIC	??_C@_03MKABNOCG@Dec@				; `string'
;	COMDAT ??_C@_03MKABNOCG@Dec@
CONST	SEGMENT
??_C@_03MKABNOCG@Dec@ DB 'Dec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JPJOFNIA@Nov@
CONST	SEGMENT
??_C@_03JPJOFNIA@Nov@ DB 'Nov', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BMAOKBAD@Oct@
CONST	SEGMENT
??_C@_03BMAOKBAD@Oct@ DB 'Oct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGCAPAJC@Sep@
CONST	SEGMENT
??_C@_03GGCAPAJC@Sep@ DB 'Sep', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFJFEIGA@Aug@
CONST	SEGMENT
??_C@_03IFJFEIGA@Aug@ DB 'Aug', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LBGABGKK@Jul@
CONST	SEGMENT
??_C@_03LBGABGKK@Jul@ DB 'Jul', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IDFGHECI@Jun@
CONST	SEGMENT
??_C@_03IDFGHECI@Jun@ DB 'Jun', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNMDKL@May@
CONST	SEGMENT
??_C@_03CNMDKL@May@ DB 'May', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LEOLGMJP@Apr@
CONST	SEGMENT
??_C@_03LEOLGMJP@Apr@ DB 'Apr', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ODNJBKGA@Mar@
CONST	SEGMENT
??_C@_03ODNJBKGA@Mar@ DB 'Mar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HJBDCHOM@Feb@
CONST	SEGMENT
??_C@_03HJBDCHOM@Feb@ DB 'Feb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIHJHPIE@Jan@
CONST	SEGMENT
??_C@_03JIHJHPIE@Jan@ DB 'Jan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LBNNNELJ@Jun?518?52023@
CONST	SEGMENT
??_C@_0M@LBNNNELJ@Jun?518?52023@ DB 'Jun 18 2023', 00H	; `string'
CONST	ENDS
PUBLIC	_Q_buildnum
PUBLIC	__real@43b6a000
EXTRN	_Q_atoi:PROC
EXTRN	_Q_strnicmp:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?b@?1??Q_buildnum@@9@9 DD 01H DUP (?)			; `Q_buildnum'::`2'::b
_BSS	ENDS
;	COMDAT __real@43b6a000
CONST	SEGMENT
__real@43b6a000 DD 043b6a000r			; 365.25
CONST	ENDS
_DATA	SEGMENT
_date	DD	FLAT:??_C@_0M@LBNNNELJ@Jun?518?52023@
_mon	DD	FLAT:??_C@_03JIHJHPIE@Jan@
	DD	FLAT:??_C@_03HJBDCHOM@Feb@
	DD	FLAT:??_C@_03ODNJBKGA@Mar@
	DD	FLAT:??_C@_03LEOLGMJP@Apr@
	DD	FLAT:??_C@_03CNMDKL@May@
	DD	FLAT:??_C@_03IDFGHECI@Jun@
	DD	FLAT:??_C@_03LBGABGKK@Jul@
	DD	FLAT:??_C@_03IFJFEIGA@Aug@
	DD	FLAT:??_C@_03GGCAPAJC@Sep@
	DD	FLAT:??_C@_03BMAOKBAD@Oct@
	DD	FLAT:??_C@_03JPJOFNIA@Nov@
	DD	FLAT:??_C@_03MKABNOCG@Dec@
_mond	DB	01fH
	DB	01cH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File D:\DevDragon\XashFE\dev\src\engine\common\build.c
;	COMDAT _Q_buildnum
_TEXT	SEGMENT
_y$ = -12						; size = 4
_d$ = -8						; size = 4
_m$ = -4						; size = 4
_Q_buildnum PROC					; COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 25   : // do not touch this! Only author of Xash3D can increase buildnumbers!
; 26   : #if 1 
; 27   : 	int m = 0, d = 0, y = 0;

	mov	DWORD PTR _m$[ebp], 0
	mov	DWORD PTR _d$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0

; 28   : 	static int b = 0;
; 29   : 
; 30   : 	if( b != 0 ) return b;

	cmp	DWORD PTR ?b@?1??Q_buildnum@@9@9, 0
	je	SHORT $LN5@Q_buildnum
	mov	eax, DWORD PTR ?b@?1??Q_buildnum@@9@9
	jmp	$LN1@Q_buildnum
$LN5@Q_buildnum:

; 31   : 
; 32   : 	for( m = 0; m < 11; m++ )

	mov	DWORD PTR _m$[ebp], 0
	jmp	SHORT $LN4@Q_buildnum
$LN2@Q_buildnum:
	mov	eax, DWORD PTR _m$[ebp]
	add	eax, 1
	mov	DWORD PTR _m$[ebp], eax
$LN4@Q_buildnum:
	cmp	DWORD PTR _m$[ebp], 11			; 0000000bH
	jge	SHORT $LN3@Q_buildnum

; 33   : 	{
; 34   : 		if( !Q_strnicmp( &date[0], mon[m], 3 ))

	push	3
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _mon[eax*4]
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	add	eax, DWORD PTR _date
	push	eax
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@Q_buildnum

; 35   : 			break;

	jmp	SHORT $LN3@Q_buildnum
$LN6@Q_buildnum:

; 36   : 		d += mond[m];

	mov	eax, DWORD PTR _m$[ebp]
	movsx	ecx, BYTE PTR _mond[eax]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 37   : 	}

	jmp	SHORT $LN2@Q_buildnum
$LN3@Q_buildnum:

; 38   : 
; 39   : 	d += Q_atoi( &date[4] ) - 1;

	mov	eax, 1
	shl	eax, 2
	add	eax, DWORD PTR _date
	push	eax
	call	_Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _d$[ebp], edx

; 40   : 	y = Q_atoi( &date[7] ) - 1900;

	mov	eax, 1
	imul	ecx, eax, 7
	add	ecx, DWORD PTR _date
	push	ecx
	call	_Q_atoi
	add	esp, 4
	sub	eax, 1900				; 0000076cH
	mov	DWORD PTR _y$[ebp], eax

; 41   : 	b = d + (int)((y - 1) * 365.25f );

	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@43b6a000
	cvttss2si ecx, xmm0
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR ?b@?1??Q_buildnum@@9@9, ecx

; 42   : 
; 43   : 	if((( y % 4 ) == 0 ) && m > 1 )

	mov	eax, DWORD PTR _y$[ebp]
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN9@Q_buildnum
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN9@Q_buildnum:
	test	eax, eax
	jne	SHORT $LN7@Q_buildnum
	cmp	DWORD PTR _m$[ebp], 1
	jle	SHORT $LN7@Q_buildnum

; 44   : 	{
; 45   : 		b += 1;

	mov	eax, DWORD PTR ?b@?1??Q_buildnum@@9@9
	add	eax, 1
	mov	DWORD PTR ?b@?1??Q_buildnum@@9@9, eax
$LN7@Q_buildnum:

; 46   : 	}
; 47   : 	b -= 38752; // Feb 13 2007

	mov	eax, DWORD PTR ?b@?1??Q_buildnum@@9@9
	sub	eax, 38752				; 00009760H
	mov	DWORD PTR ?b@?1??Q_buildnum@@9@9, eax

; 48   : 
; 49   : 	return b;

	mov	eax, DWORD PTR ?b@?1??Q_buildnum@@9@9
$LN1@Q_buildnum:

; 50   : #else
; 51   : 	return 4260;
; 52   : #endif
; 53   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Q_buildnum ENDP
_TEXT	ENDS
END
